{"version":3,"sources":["../node_modules/scheduler/index.js","../node_modules/prop-types/checkPropTypes.js","../node_modules/scheduler/tracing.js","react/packages/shared/ReactVersion.js","../node_modules/object-assign/index.js","react/packages/shared/enqueueTask.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/cjs/scheduler-tracing.production.min.js","../node_modules/webpack/buildin/harmony-module.js","react/packages/shared/ReactSymbols.js","react/packages/shared/invariant.js","react/packages/react/src/ReactNoopUpdateQueue.js","react/packages/react/src/ReactBaseClasses.js","react/packages/react/src/ReactCreateRef.js","react/packages/shared/ReactLazyComponent.js","react/packages/shared/getComponentName.js","react/packages/react/src/ReactCurrentOwner.js","react/packages/react/src/ReactElement.js","react/packages/shared/describeComponentFrame.js","react/packages/react/src/ReactDebugCurrentFrame.js","react/packages/react/src/ReactChildren.js","react/packages/shared/ReactFeatureFlags.js","react/packages/react/src/ReactContext.js","react/packages/react/src/ReactLazy.js","react/packages/react/src/forwardRef.js","react/packages/shared/isValidElementType.js","react/packages/react/src/memo.js","react/packages/react/src/block.js","react/packages/react/src/ReactCurrentDispatcher.js","react/packages/react/src/ReactHooks.js","react/packages/react/src/ReactCurrentBatchConfig.js","react/packages/react/src/ReactBatchConfig.js","react/packages/react/src/ReactElementValidator.js","react/packages/react/src/ReactSharedInternals.js","react/packages/react/src/IsSomeRendererActing.js","react/packages/shared/hasBadMapPolyfill.js","react/packages/shared/createFundamentalComponent.js","react/packages/shared/createEventResponder.js","react/packages/shared/createScope.js","react/packages/react/src/React.js","react/packages/react-dom/src/shared/checkReact.js","react/packages/shared/invokeGuardedCallbackImpl.js","react/packages/shared/ReactErrorUtils.js","react/packages/legacy-events/EventPluginUtils.js","react/packages/legacy-events/EventPluginRegistry.js","react/packages/shared/ExecutionEnvironment.js","react/packages/legacy-events/ReactControlledComponent.js","react/packages/legacy-events/ReactGenericBatching.js","react/packages/react-dom/src/events/DeprecatedDOMEventResponderSystem.js","react/packages/shared/ReactWorkTags.js","react/packages/react-dom/src/shared/DOMProperty.js","react/packages/shared/ReactSharedInternals.js","react/packages/react-dom/src/shared/sanitizeURL.js","react/packages/react-dom/src/client/DOMPropertyOperations.js","react/packages/react-reconciler/src/ReactCurrentFiber.js","react/packages/react-dom/src/client/ToStringValue.js","react/packages/react-dom/src/shared/ReactControlledValuePropTypes.js","react/packages/react-dom/src/client/inputValueTracking.js","react/packages/react-dom/src/client/ReactDOMInput.js","react/packages/react-dom/src/client/ReactDOMOption.js","react/packages/react-dom/src/client/ReactDOMSelect.js","react/packages/react-dom/src/client/ReactDOMTextarea.js","react/packages/react-dom/src/shared/DOMNamespaces.js","react/packages/react-dom/src/client/setInnerHTML.js","react/packages/react-dom/src/shared/createMicrosoftUnsafeLocalFunction.js","react/packages/react-dom/src/client/setTextContent.js","react/packages/react-dom/src/shared/HTMLNodeType.js","react/packages/react-dom/src/events/getVendorPrefixedEventName.js","react/packages/react-dom/src/events/DOMTopLevelEventTypes.js","react/packages/react-dom/src/events/DOMEventListenerMap.js","react/packages/shared/ReactInstanceMap.js","react/packages/shared/ReactSideEffectTags.js","react/packages/react-reconciler/src/ReactFiberTreeReflection.js","react/packages/legacy-events/accumulateInto.js","react/packages/legacy-events/forEachAccumulated.js","react/packages/legacy-events/EventBatching.js","react/packages/react-dom/src/events/getEventTarget.js","react/packages/react-dom/src/events/isEventSupported.js","react/packages/react-dom/src/events/DOMLegacyEventPluginSystem.js","react/packages/legacy-events/EventSystemFlags.js","react/packages/react-dom/src/events/ReactDOMEventReplaying.js","react/packages/react-dom/src/events/EventListener.js","react/packages/react-dom/src/events/DOMEventProperties.js","react/packages/shared/ReactTypes.js","react/packages/react-dom/src/events/ReactDOMEventListener.js","react/packages/react-dom/src/shared/CSSShorthandProperty.js","react/packages/react-dom/src/shared/CSSProperty.js","react/packages/react-dom/src/shared/dangerousStyleValue.js","react/packages/react-dom/src/shared/hyphenateStyleName.js","react/packages/react-dom/src/shared/warnValidStyle.js","react/packages/react-dom/src/shared/CSSPropertyOperations.js","react/packages/react-dom/src/shared/voidElementTags.js","react/packages/react-dom/src/shared/omittedCloseTags.js","react/packages/react-dom/src/shared/assertValidProps.js","react/packages/react-dom/src/shared/isCustomComponent.js","react/packages/react-dom/src/shared/possibleStandardNames.js","react/packages/react-dom/src/shared/validAriaProperties.js","react/packages/react-dom/src/shared/ReactDOMInvalidARIAHook.js","react/packages/react-dom/src/shared/ReactDOMNullInputValuePropHook.js","react/packages/react-dom/src/shared/ReactDOMUnknownPropertyHook.js","react/packages/react-dom/src/client/ReactDOMComponent.js","react/packages/react-dom/src/client/getActiveElement.js","react/packages/react-dom/src/client/getNodeForCharacterOffset.js","react/packages/react-dom/src/client/ReactDOMSelection.js","react/packages/react-dom/src/client/ReactInputSelection.js","react/packages/react-dom/src/client/validateDOMNesting.js","react/packages/react-dom/src/client/ReactDOMHostConfig.js","react/packages/react-dom/src/client/ReactDOMComponentTree.js","react/packages/shared/ReactTreeTraversal.js","react/packages/legacy-events/getListener.js","react/packages/legacy-events/EventPropagators.js","react/packages/react-dom/src/events/FallbackCompositionState.js","react/packages/legacy-events/SyntheticEvent.js","react/packages/react-dom/src/events/SyntheticCompositionEvent.js","react/packages/react-dom/src/events/SyntheticInputEvent.js","react/packages/react-dom/src/events/BeforeInputEventPlugin.js","react/packages/shared/isTextInputElement.js","react/packages/react-dom/src/events/ChangeEventPlugin.js","react/packages/react-dom/src/events/SyntheticUIEvent.js","react/packages/react-dom/src/events/getEventModifierState.js","react/packages/react-dom/src/events/SyntheticMouseEvent.js","react/packages/react-dom/src/events/SyntheticPointerEvent.js","react/packages/react-dom/src/events/EnterLeaveEventPlugin.js","react/packages/shared/objectIs.js","react/packages/shared/shallowEqual.js","react/packages/react-dom/src/events/SelectEventPlugin.js","react/packages/react-dom/src/events/SyntheticAnimationEvent.js","react/packages/react-dom/src/events/SyntheticClipboardEvent.js","react/packages/react-dom/src/events/SyntheticFocusEvent.js","react/packages/react-dom/src/events/getEventCharCode.js","react/packages/react-dom/src/events/getEventKey.js","react/packages/react-dom/src/events/SyntheticKeyboardEvent.js","react/packages/react-dom/src/events/SyntheticDragEvent.js","react/packages/react-dom/src/events/SyntheticTouchEvent.js","react/packages/react-dom/src/events/SyntheticTransitionEvent.js","react/packages/react-dom/src/events/SyntheticWheelEvent.js","react/packages/react-dom/src/events/SimpleEventPlugin.js","react/packages/react-dom/src/client/ReactDOMClientInjection.js","react/packages/react-reconciler/src/ReactDebugFiberPerf.js","react/packages/react-reconciler/src/ReactFiberStack.js","react/packages/react-reconciler/src/ReactFiberContext.js","react/packages/react-reconciler/src/SchedulerWithReactIntegration.js","react/packages/react-reconciler/src/ReactFiberExpirationTime.js","react/packages/react-reconciler/src/maxSigned31BitInt.js","react/packages/react-reconciler/src/ReactStrictModeWarnings.js","react/packages/react-reconciler/src/ReactTypeOfMode.js","react/packages/react-reconciler/src/ReactFiberHotReloading.js","react/packages/react-reconciler/src/ReactFiberWorkLoop.js","react/packages/react-reconciler/src/ReactFiberLazyComponent.js","react/packages/react-reconciler/src/ReactFiberNewContext.js","react/packages/react-reconciler/src/ReactUpdateQueue.js","react/packages/react-reconciler/src/ReactFiberSuspenseConfig.js","react/packages/react-reconciler/src/ReactFiberClassComponent.js","react/packages/react-reconciler/src/ReactChildFiber.js","react/packages/react-reconciler/src/ReactFiberHostContext.js","react/packages/react-reconciler/src/ReactFiberSuspenseContext.js","react/packages/react-reconciler/src/ReactFiberSuspenseComponent.js","react/packages/react-reconciler/src/ReactFiberDeprecatedEvents.js","react/packages/react-reconciler/src/ReactHookEffectTags.js","react/packages/react-reconciler/src/ReactFiberHooks.js","react/packages/react-reconciler/src/ReactProfilerTimer.js","react/packages/react-reconciler/src/ReactFiberHydrationContext.js","react/packages/react-reconciler/src/ReactFiber.js","react/packages/react-reconciler/src/ReactFiberBeginWork.js","react/packages/react-reconciler/src/ReactFiberReconciler.js","react/packages/react-reconciler/src/ReactFiberCompleteWork.js","react/packages/react-reconciler/src/ReactFiberUnwindWork.js","react/packages/react-reconciler/src/ReactCapturedValue.js","react/packages/react-reconciler/src/ReactFiberCommitWork.js","react/packages/react-reconciler/src/ReactFiberErrorLogger.js","react/packages/react-reconciler/src/ReactFiberDevToolsHook.js","react/packages/react-reconciler/src/ReactFiberThrow.js","react/packages/react-reconciler/src/ReactFiberRoot.js","react/packages/shared/ReactRootTags.js","react/packages/react-dom/src/client/ReactDOMRoot.js","react/packages/react-dom/src/client/ReactDOMLegacy.js","react/packages/react-dom/src/client/ReactDOM.js","App.js","index.js"],"names":["module","exports","require","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","process","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","arguments","length","key","call","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","Math","random","slice","nodeRequire","setImmediate","_err","callback","MessageChannel","console","error","channel","port1","onmessage","port2","postMessage","f","g","h","k","l","window","p","q","t","a","unstable_now","b","setTimeout","u","Date","now","clearTimeout","unstable_forceFrameRate","w","performance","x","y","z","A","cancelAnimationFrame","requestAnimationFrame","B","C","D","E","F","G","floor","H","I","J","c","push","d","e","K","L","M","pop","m","v","r","sortIndex","id","N","O","P","Q","R","S","T","U","V","startTime","expirationTime","W","X","priorityLevel","Y","Z","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","timeout","unstable_shouldYield","unstable_wrapCallback","apply","this","__interactionsRef","__subscriberRef","unstable_clear","unstable_getCurrent","unstable_getThreadID","unstable_subscribe","unstable_trace","unstable_unsubscribe","unstable_wrap","originalModule","webpackPolyfill","create","children","defineProperty","enumerable","get","hasSymbol","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","maybeIterator","invariant","condition","format","Error","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","constructor","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","enqueueReplaceState","completeState","enqueueSetState","partialState","emptyObject","Component","props","context","updater","refs","freeze","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","warn","fnName","ComponentDummy","PureComponent","pureComponentPrototype","createRef","refObject","current","seal","isPureReactComponent","refineResolvedLazyComponent","lazyComponent","_status","_result","getComponentName","type","tag","$$typeof","outerType","innerType","wrapperName","functionName","getWrappedName","render","resolvedThenable","ReactCurrentOwner","RESERVED_PROPS","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","owner","element","_owner","_store","writable","value","createElement","propName","childrenLength","childArray","Array","defaultProps","cloneElement","_self","_source","isValidElement","object","BEFORE_SLASH_RE","ownerName","sourceInfo","path","fileName","replace","test","match","pathBeforeSlash","lineNumber","ReactDebugCurrentFrame","currentlyValidatingElement","setCurrentlyValidatingElement","getCurrentStack","getStackAddendum","stack","describeComponentFrame","impl","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","result","func","count","releaseTraverseContext","traverseAllChildren","traverseAllChildrenImpl","nameSoFar","child","nextName","invokeCallback","getComponentKey","subtreeCount","nextNamePrefix","isArray","iteratorFn","entries","step","ii","next","done","addendum","childrenString","component","index","escaperLookup","escape","toString","forEachSingleChild","bookKeeping","mapSingleChildIntoContext","childKey","mappedChild","oldElement","newKey","mapIntoWithKeyPrefixInternal","array","prefix","escapedPrefix","createContext","defaultValue","calculateChangedBits","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","defineProperties","set","_Provider","_currentRenderer","_currentRenderer2","lazy","ctor","lazyType","_ctor","propTypes","newDefaultProps","newPropTypes","forwardRef","isValidElementType","memo","compare","block","query","args","ReactCurrentDispatcher","resolveDispatcher","dispatcher","useContext","Context","unstable_observedBits","realContext","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","deps","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useResponder","responder","listenerProps","useTransition","useDeferredValue","ReactCurrentBatchConfig","suspense","withSuspenseConfig","scope","previousConfig","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","getSourceInfoErrorAddendumForProps","elementProps","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","jsxWithValidation","isStaticChildren","validType","typeString","maybeKey","jsxDEV","createElementWithValidation","didWarnAboutDeprecatedCreateFactory","ReactSharedInternals","IsSomeRendererActing","ReactComponentTreeHook","hasBadMapPolyfill","frozenObject","testMap","Map","testSet","Set","add","createFundamentalComponent","fundamantalComponent","createEventResponder","responderConfig","getInitialState","onEvent","onMount","onUnmount","onRootEvent","rootEventTypes","targetEventTypes","targetPortalPropagation","eventResponder","createScope","scopeComponent","newElement","createFactory","validatedFactory","bind","jsx","jsxs","Children","forEachFunc","forEachContext","toArray","only","React","invokeGuardedCallbackImpl","funcArgs","onError","dispatchEvent","document","createEvent","fakeNode","evt","didError","windowEvent","event","windowEventDescriptor","callCallback","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","hasCaughtError","validateEventDispatches","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","executeDispatch","listener","inst","currentTarget","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","listenersLen","instancesIsArr","instancesLen","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","extractEvents","publishedEvents","eventTypes","eventName","publishEventForPlugin","dispatchConfig","eventNameDispatchConfigs","phasedRegistrationNames","phaseName","publishRegistrationName","registrationName","registrationNameModules","registrationNameDependencies","dependencies","lowerCasedName","toLowerCase","possibleRegistrationNames","ondblclick","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","canUseDOM","restoreImpl","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","enqueueStateRestore","restoreStateIfNeeded","queuedTargets","batchedUpdatesImpl","fn","bookkeeping","discreteUpdatesImpl","flushDiscreteUpdatesImpl","batchedEventUpdatesImpl","isInsideEventHandler","isBatchingEventUpdates","finishEventHandler","batchedEventUpdates","executeUserEventHandler","previouslyInEventHandler","discreteUpdates","prevIsInsideEventHandler","lastFlushedEventTimeStamp","flushDiscreteUpdatesIfNeeded","timeStamp","UserBlockingPriority","runWithPriority","Scheduler","listenToResponderEventTypesImpl","rootEventTypesToEventResponderInstances","currentTimeStamp","currentInstance","currentDocument","currentPropagationBehavior","doesFiberHaveResponder","fiber","respondersMap","responders","has","validateResponderContext","DEPRECATED_registerRootEventType","rootEventType","eventResponderInstance","rootEventResponderInstances","rootEventTypesSet","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","shouldIgnoreAttribute","propertyInfo","isCustomComponentTag","shouldRemoveAttributeWithWarning","acceptsBooleans","shouldRemoveAttribute","isNaN","getPropertyInfo","properties","PropertyInfoRecord","mustUseProperty","attributeNamespace","sanitizeURL","propertyName","reservedProps","CAMELIZE","capitalize","token","toUpperCase","isJavaScriptProtocol","didWarn","url","JSON","stringify","getValueForProperty","expected","stringValue","hasAttribute","getAttribute","getValueForAttribute","setValueForProperty","removeAttribute","setAttribute","attributeValue","setAttributeNS","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","workInProgress","return","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","setCurrentFiber","setIsRendering","rendering","getToStringValue","ReactControlledValuePropTypes","hasReadOnlyValue","button","checkbox","image","hidden","radio","reset","submit","onChange","readOnly","disabled","checked","tagName","isCheckable","elem","nodeName","getTracker","_valueTracker","track","valueField","descriptor","currentValue","getValue","setValue","stopTracking","detachTracker","trackValueOnNode","updateValueIfChanged","tracker","lastValue","nextValue","getValueFromNode","didWarnValueDefaultValue","didWarnCheckedDefaultChecked","didWarnControlledToUncontrolled","didWarnUncontrolledToControlled","isControlled","getHostProps","defaultChecked","_wrapperState","initialChecked","initWrapperState","controlled","updateChecked","updateWrapper","setDefaultValue","postMountWrapper","isHydrating","isButton","restoreControlledState","rootNode","queryRoot","parentNode","group","querySelectorAll","otherNode","form","otherProps","updateNamedCousins","ownerDocument","activeElement","didWarnSelectedSetOnOption","didWarnInvalidChild","validateProps","selected","hostProps","content","flattenChildren","valuePropNames","updateOptions","multiple","propValue","setDefaultSelected","options","selectedValues","selectedValue","defaultSelected","checkSelectPropTypes","wasMultiple","didWarnValDefaultVal","dangerouslySetInnerHTML","newValue","textContent","HTML_NAMESPACE","SVG_NAMESPACE","Namespaces","html","mathml","svg","getIntrinsicNamespace","getChildNamespace","parentNamespace","reusableSVGContainer","setInnerHTML","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","createMicrosoftUnsafeLocalFunction","namespaceURI","innerHTML","valueOf","svgNode","firstChild","removeChild","appendChild","setTextContent","lastChild","nodeType","nodeValue","makePrefixMap","styleProp","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","style","animation","transition","getVendorPrefixedEventName","prefixMap","TOP_ANIMATION_END","TOP_ANIMATION_ITERATION","TOP_ANIMATION_START","TOP_TRANSITION_END","mediaEventTypes","elementListenerMap","WeakMap","getListenerMapForElement","listenerMap","_reactInternalFiber","getNearestMountedFiber","nearestMounted","alternate","nextNode","effectTag","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","getContainerFromFiber","containerInfo","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","accumulateInto","concat","forEachAccumulated","arr","cb","eventQueue","executeDispatchesAndRelease","isPropagationStopped","executeDispatchesInOrder","isPersistent","release","executeDispatchesAndReleaseTopLevel","runEventsInBatch","events","processingEventQueue","rethrowCaughtError","getEventTarget","nativeEvent","srcElement","correspondingUseElement","isEventSupported","eventNameSuffix","isSupported","callbackBookkeepingPool","findRootContainerNode","runExtractedPluginEventsInBatch","topLevelType","targetInst","nativeEventTarget","eventSystemFlags","possiblePlugin","extractedEvents","extractPluginEvents","handleTopLevel","ancestor","ancestors","root","getClosestInstanceFromNode","eventTarget","dispatchEventForLegacyPluginEventSystem","instance","getTopLevelCallbackBookKeeping","legacyListenToTopLevelEvent","mountAt","trapCapturedEvent","trapBubbledEvent","attemptSynchronousHydration","attemptUserBlockingHydration","attemptContinuousHydration","attemptHydrationAtCurrentPriority","hasScheduledReplayAttempt","queuedDiscreteEvents","queuedFocus","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queuedExplicitHydrationTargets","discreteReplayableEvents","continuousReplayableEvents","isReplayableDiscreteEvent","eventType","trapReplayableEventForDocument","createQueuedReplayableEvent","blockedOn","container","queueDiscreteEvent","queuedEvent","replayUnblockedEvents","clearIfContinuousEvent","pointerId","delete","accumulateOrCreateContinuousQueuedReplayableEvent","existingQueuedEvent","attemptExplicitHydrationTarget","queuedTarget","priority","hydrate","attemptReplayContinuousQueuedEvent","nextBlockedOn","attemptToDispatchEvent","attemptReplayContinuousQueuedEventInMap","nextDiscreteEvent","shift","scheduleCallbackIfUnblocked","unblocked","scheduleCallback","NormalPriority","retryIfBlockedOn","unblock","nextExplicitTarget","addEventCaptureListener","simpleEventPluginEventTypes","topLevelEventsToDispatchConfig","eventPriorities","otherDiscreteEvents","userBlockingPairsForSimpleEventPlugin","continuousPairsForSimpleEventPlugin","DOMTopLevelEventTypes","processSimpleEventPluginPairsByPriority","topEvent","bubbled","captured","eventPriority","processTopEventPairsByPriority","_enabled","setEnabled","enabled","trapEventForPluginEventSystem","capture","getEventPriorityForPluginSystem","dispatchDiscreteEvent","dispatchUserBlockingUpdate","rawEventName","addEventBubbleListener","pointerEvent","queueIfContinuousEvent","shorthandToLonghand","background","backgroundPosition","border","borderBlockEnd","borderBlockStart","borderBottom","borderColor","borderImage","borderInlineEnd","borderInlineStart","borderLeft","borderRadius","borderRight","borderStyle","borderTop","borderWidth","columnRule","columns","flex","flexFlow","font","fontVariant","gap","grid","gridArea","gridColumn","gridColumnGap","gridGap","gridRow","gridRowGap","gridTemplate","listStyle","margin","marker","mask","maskPosition","outline","overflow","padding","placeContent","placeItems","placeSelf","textDecoration","textEmphasis","wordWrap","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRowEnd","gridRowSpan","gridRowStart","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prop","charAt","substring","prefixKey","dangerousStyleValue","isCustomProperty","trim","uppercasePattern","msPattern","warnValidStyle","badVendoredStyleNamePattern","hyphenPattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnedForNaNValue","warnedForInfinityValue","camelize","string","_","character","warnHyphenatedStyleName","warnBadVendoredStyleName","warnStyleValueWithSemicolon","warnStyleValueIsNaN","warnStyleValueIsInfinity","isFinite","createDangerousStringForStyles","styles","serialized","delimiter","styleName","styleValue","setValueForStyles","setProperty","expandShorthandMap","expanded","longhands","voidElementTags","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","assertValidProps","suppressContentEditableWarning","contentEditable","isCustomComponent","is","possibleStandardNames","accept","acceptcharset","accesskey","action","allowfullscreen","alt","as","async","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","cellpadding","cellspacing","challenge","charset","cite","class","classid","classname","cols","colspan","contenteditable","contextmenu","controls","controlslist","coords","crossorigin","dangerouslysetinnerhtml","data","datetime","default","defaultchecked","defaultvalue","defer","dir","disablepictureinpicture","download","draggable","enctype","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","headers","height","high","href","hreflang","htmlfor","httpequiv","icon","innerhtml","inputmode","integrity","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","kind","label","lang","list","loop","low","manifest","marginwidth","marginheight","max","maxlength","media","mediagroup","method","min","minlength","muted","nomodule","nonce","novalidate","open","optimum","pattern","placeholder","playsinline","poster","preload","profile","radiogroup","readonly","referrerpolicy","rel","required","reversed","role","rows","rowspan","sandbox","scoped","scrolling","seamless","shape","size","sizes","span","spellcheck","src","srcdoc","srclang","srcset","start","summary","tabindex","title","usemap","width","wmode","wrap","about","accentheight","accumulate","additive","alignmentbaseline","allowreorder","alphabetic","amplitude","arabicform","ascent","attributename","attributetype","autoreverse","azimuth","basefrequency","baselineshift","baseprofile","bbox","begin","bias","by","calcmode","capheight","clip","clippath","clippathunits","cliprule","color","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","cursor","cx","cy","datatype","decelerate","descent","diffuseconstant","direction","display","divisor","dominantbaseline","dur","dx","dy","edgemode","elevation","enablebackground","end","exponent","externalresourcesrequired","fill","fillopacity","fillrule","filter","filterres","filterunits","floodopacity","floodcolor","focusable","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","fx","fy","g1","g2","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","hanging","horizadvx","horizoriginx","ideographic","imagerendering","in2","in","inlist","intercept","k1","k2","k3","k4","kernelmatrix","kernelunitlength","kerning","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","local","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","maskcontentunits","maskunits","mathematical","mode","numoctaves","offset","operator","orient","orientation","origin","overlineposition","overlinethickness","paintorder","panose1","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","points","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","property","radius","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","resource","restart","results","rotate","rx","ry","scale","security","seed","shaperendering","slope","spacing","specularconstant","specularexponent","speed","spreadmethod","startoffset","stddeviation","stemh","stemv","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","stroke","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","transform","typeof","u1","u2","underlineposition","underlinethickness","unicode","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","version","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","visibility","vmathematical","vocab","widths","wordspacing","writingmode","x1","x2","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlns","xmlnsxlink","xmlspace","y1","y2","ychannelselector","zoomandpan","ariaProperties","warnedProperties","rARIA","rARIACamel","validateProperty","ariaName","correctName","validAriaProperties","standardName","validateProperties","invalidProps","unknownPropString","warnInvalidARIAProps","didWarnValueNull","EVENT_NAME_REGEX","INVALID_EVENT_NAME_REGEX","canUseEventSystem","isReserved","unknownProps","warnUnknownProperties","didWarnInvalidHydration","warnedUnknownTags","suppressHydrationWarning","validatePropertiesInDevelopment","warnForTextDifference","warnForPropDifference","warnForExtraAttributes","warnForInvalidEventListener","canDiffStyleForHydrationWarning","normalizeMarkupForTextOrAttribute","normalizeHTML","time","dialog","webview","validateARIAProperties","validateInputProperties","validateUnknownProperties","documentMode","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","markup","serverText","clientText","normalizedClientText","normalizedServerText","serverValue","clientValue","normalizedClientValue","normalizedServerValue","attributeNames","names","testElement","createElementNS","ensureListeningTo","rootContainerElement","legacyListenToEvent","getOwnerDocumentFromRootContainer","noop","trapClickOnNonInteractiveElement","onclick","setInitialProperties","domElement","rawProps","ReactDOMInputInitWrapperState","ReactDOMInputGetHostProps","ReactDOMOptionValidateProps","ReactDOMOptionGetHostProps","ReactDOMSelectInitWrapperState","ReactDOMSelectGetHostProps","ReactDOMTextareaInitWrapperState","ReactDOMTextareaGetHostProps","nextProps","propKey","nextProp","nextHtml","setInitialDOMProperties","ReactDOMInputPostMountWrapper","ReactDOMTextareaPostMountWrapper","ReactDOMOptionPostMountWrapper","ReactDOMSelectPostMountWrapper","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","updatePayload","styleUpdates","lastStyle","lastProp","lastHtml","nextStyles","expandedUpdates","expandedStyles","warnedAbout","originalKey","correctOriginalKey","validateShorthandPropertyCollisionInDev","updateProperties","ReactDOMInputUpdateChecked","wasCustomComponentTag","updateDOMProperties","ReactDOMInputUpdateWrapper","ReactDOMTextareaUpdateWrapper","ReactDOMSelectPostUpdateWrapper","getPossibleStandardName","warnForUnmatchedText","textNode","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","getActiveElement","doc","body","getLeafNode","getSiblingNode","nextSibling","getNodeForCharacterOffset","nodeStart","nodeEnd","getOffsets","outerNode","win","defaultView","selection","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","indexWithinAnchor","indexWithinFocus","outer","getModernOffsetsFromPoints","isTextNode","isInDocument","containsNode","innerNode","contains","compareDocumentPosition","documentElement","isSameOriginFrame","iframe","contentWindow","getActiveElementDeep","HTMLIFrameElement","hasSelectionCapabilities","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","focusedElem","priorSelectionRange","selectionRange","offsets","selectionStart","selectionEnd","extend","temp","startMarker","endMarker","range","createRange","setStart","removeAllRanges","addRange","setEnd","setOffsets","setSelection","left","scrollLeft","top","scrollTop","focus","validateDOMNesting","updatedAncestorInfo","specialTags","inScopeTags","buttonScopeTags","impliedEndTags","emptyAncestorInfo","formTag","aTagInScope","buttonTagInScope","nobrTagInScope","pTagInButtonScope","listItemTagAutoclosing","dlItemTagAutoclosing","oldInfo","ancestorInfo","isTagValidWithParent","parentTag","findInvalidAncestorForTag","childTag","childText","parentInfo","invalidParent","invalidAncestor","invalidParentOrAncestor","ancestorTag","warnKey","tagDisplayName","whitespaceInfo","SUPPRESS_HYDRATION_WARNING","eventsEnabled","selectionInformation","shouldAutoFocusHostComponent","autoFocus","prepareForCommit","activeElementDetached","getSelectionInformation","ReactBrowserEventEmitterSetEnabled","resetAfterCommit","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","hostContextDev","ownAncestorInfo","namespace","div","__DEV__","precacheFiberNode","updateFiberProps","appendInitialChild","parentInstance","finalizeInitialChildren","prepareUpdate","oldProps","newProps","shouldSetTextContent","__html","shouldDeprioritizeSubtree","createTextInstance","createTextNode","scheduleTimeout","cancelTimeout","resetTextContent","removeChildFromContainer","clearSuspenseBoundary","suspenseInstance","depth","hideInstance","unhideInstance","unhideTextInstance","textInstance","isSuspenseInstancePending","isSuspenseInstanceFallback","getNextHydratable","nodeData","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","extraAttributeNames","attributes","serverHTML","expectedHTML","expectedStyle","isMismatchDueToBadCasing","ownNamespace","diffHydratedProperties","getParentSuspenseInstance","targetInstance","previousSibling","commitHydratedContainer","randomKey","internalInstanceKey","internalEventHandlersKey","internalContainerInstanceKey","hostInst","unmarkContainerAsRoot","isContainerMarkedAsRoot","targetNode","targetSuspenseInst","getParent","traverseTwoPhase","arg","traverseEnterLeave","argFrom","argTo","common","instA","instB","depthA","tempA","depthB","tempB","getLowestCommonAncestor","pathFrom","pathTo","getListener","shouldPreventMouseEvent","accumulateDirectionalDispatches","phase","propagationPhase","listenerAtPhase","accumulateTwoPhaseDispatchesSingle","_targetInst","accumulateDispatches","ignoredDirection","accumulateTwoPhaseDispatches","startText","fallbackText","getData","startValue","startLength","endValue","getText","endLength","minEnd","sliceTail","EventInterface","eventPhase","bubbles","cancelable","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","preventDefault","stopPropagation","isDefaultPrevented","Interface","normalize","returnValue","getPooledWarningPropertyDefinition","getVal","isFunction","getPooledEvent","nativeInst","EventConstructor","eventPool","releasePooledEvent","destructor","addEventPoolingTo","getPooled","cancelBubble","persist","Super","Class","SyntheticCompositionEvent","SyntheticInputEvent","END_KEYCODES","canUseCompositionEvent","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","beforeInput","compositionEnd","compositionStart","compositionUpdate","hasSpaceKeypress","isFallbackCompositionEnd","keyCode","getDataFromCustomEvent","detail","isUsingKoreanIME","locale","isComposing","extractCompositionEvent","fallbackData","getCompositionEventType","isFallbackCompositionStart","FallbackCompositionStateGetData","FallbackCompositionStateInitialize","customData","getFallbackBeforeInputChars","chars","ctrlKey","altKey","metaKey","isKeypressCommand","char","which","extractBeforeInputEvent","getNativeBeforeInputChars","BeforeInputEventPlugin","composition","supportedInputTypes","date","email","month","number","password","search","tel","week","isTextInputElement","change","createAndAccumulateChangeEvent","activeElementInst","manualDispatchChangeEvent","batchedUpdates","runEventInBatch","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","startWatchingForValueChange","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","ChangeEventPlugin","_isInputEventSupported","getTargetInstFunc","handleEventFunc","shouldUseChangeEvent","shouldUseClickEvent","state","handleControlledInputBlur","SyntheticUIEvent","view","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","getModifierState","keyProp","getEventModifierState","previousScreenX","previousScreenY","isMovementXSet","isMovementYSet","SyntheticMouseEvent","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticPointerEvent","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","mouseEnter","mouseLeave","pointerEnter","pointerLeave","EnterLeaveEventPlugin","isOverEvent","isOutEvent","eventInterface","leaveEventType","enterEventType","eventTypePrefix","parentWindow","related","fromNode","toNode","leave","enter","accumulateEnterLeaveDispatches","objectIs","shallowEqual","objA","objB","keysA","keysB","skipSelectionChangeEvent","select","lastSelection","mouseDown","getEventTargetDocument","constructSelectEvent","currentSelection","syntheticEvent","SelectEventPlugin","containerOrDoc","dependency","isListeningToAllDependencies","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticFocusEvent","getEventCharCode","charCode","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","getEventKey","SyntheticKeyboardEvent","repeat","SyntheticDragEvent","dataTransfer","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","knownHTMLTopLevelTypes","SimpleEventPlugin","injectedEventPluginOrder","supportsUserTiming","mark","clearMarks","measure","clearMeasures","currentFiber","currentPhase","currentPhaseFiber","isCommitting","hasScheduledUpdateInCurrentCommit","hasScheduledUpdateInCurrentPhase","commitCountInCurrentWorkLoop","effectCountInCurrentCommit","labelsInCurrentCommit","formatMarkName","markName","beginMark","endMark","warning","formattedMarkName","formattedLabel","formatLabel","getFiberMarkName","debugID","getFiberLabel","beginFiberMark","_debugID","clearFiberMark","clearMark","endFiberMark","shouldIgnoreFiber","resumeTimersRecursively","_debugIsCurrentlyTiming","recordEffect","startWorkTimer","cancelWorkTimer","stopWorkTimer","stopFailedWorkTimer","startPhaseTimer","stopPhaseTimer","startWorkLoopTimer","nextUnitOfWork","stopWorkLoopTimer","interruptedBy","didCompleteRoot","pauseTimers","startCommitSnapshotEffectsTimer","stopCommitSnapshotEffectsTimer","startCommitHostEffectsTimer","stopCommitHostEffectsTimer","startCommitLifeCyclesTimer","stopCommitLifeCyclesTimer","valueStack","fiberStack","warnedAboutMissingGetChildContext","createCursor","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","isFiberMounted","Scheduler_runWithPriority","Scheduler_scheduleCallback","Scheduler_cancelCallback","Scheduler_shouldYield","Scheduler_requestPaint","Scheduler_now","Scheduler_getCurrentPriorityLevel","Scheduler_ImmediatePriority","Scheduler_UserBlockingPriority","Scheduler_NormalPriority","Scheduler_LowPriority","Scheduler_IdlePriority","fakeCallbackNode","shouldYield","requestPaint","syncQueue","immediateQueueCallbackNode","isFlushingSyncQueue","initialTimeMs","getCurrentPriorityLevel","reactPriorityToSchedulerPriority","reactPriorityLevel","scheduleSyncCallback","flushSyncCallbackQueueImpl","flushSyncCallbackQueue","isSync","queue","Sync","msToExpirationTime","ms","Batched","expirationTimeToMs","computeExpirationBucket","currentTime","expirationInMs","bucketSizeMs","precision","computeAsyncExpiration","computeInteractiveExpiration","inferPriorityFromExpirationTime","msUntil","HIGH_PRIORITY_EXPIRATION","LOW_PRIORITY_EXPIRATION","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","setToSortedString","sort","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","firstComponentStack","resolveFamily","failedBoundaries","setRefreshHandler","handler","resolveFunctionForHotReloading","family","resolveClassForHotReloading","resolveForwardRefForHotReloading","currentRender","syntheticType","isCompatibleFamilyForHotReloading","prevType","elementType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","markFailedErrorBoundaryForHotReloading","WeakSet","scheduleRefresh","update","staleFamilies","updatedFamilies","flushPassiveEffects","flushSync","scheduleFibersWithFamiliesRecursively","candidateType","needsRender","needsRemount","_debugNeedsRemount","scheduleWork","scheduleRoot","updateContainer","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","foundHostInstances","findChildHostInstancesForFiberShallowly","findHostInstancesForFiberShallowly","resolveDefaultProps","baseProps","readLazyComponentType","thenable","then","moduleObject","defaultExport","initializeLazyComponentType","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastContextWithAllBitsObserved","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","popProvider","scheduleWorkOnParentPath","renderExpirationTime","childExpirationTime","prepareToReadContext","firstContext","markWorkInProgressReceivedUpdate","readContext","observedBits","resolvedObservedBits","contextItem","ForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","resetCurrentlyProcessingQueue","hasForceUpdate","initializeUpdateQueue","baseState","baseQueue","shared","pending","effects","updateQueue","cloneUpdateQueue","currentQueue","clone","createUpdate","suspenseConfig","payload","enqueueUpdate","sharedQueue","enqueueCapturedUpdate","last","getStateFromUpdate","prevState","nextState","processUpdateQueue","pendingQueue","baseFirst","pendingFirst","first","newState","newExpirationTime","newBaseState","newBaseQueueFirst","newBaseQueueLast","updateExpirationTime","markRenderEventTimeAndConfig","markUnprocessedUpdateTime","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","requestCurrentSuspenseConfig","fakeInternalInstance","emptyRefsObject","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","ownerFiber","_warnedAboutRefsInRender","getInstance","requestCurrentTimeForUpdate","computeExpirationForFiber","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","shouldUpdate","adoptClassInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","contextType","getSnapshotBeforeUpdate","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillReceiveProps","mountClassInstance","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","componentDidUpdate","getDerivedStateFromError","checkClassInstance","callComponentWillMount","componentDidMount","didWarnAboutGenerators","ownerHasFunctionTypeWarning","warnForMissingKey","coerceRef","returnFiber","mixedRef","stringRef","_stringRef","throwOnInvalidObjectType","newChild","warnOnFunctionType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","lastEffect","nextEffect","firstEffect","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","pendingProps","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","created","createFiberFromText","existing","updateElement","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","updateFragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","isUnkeyedTopLevelFragment","isObject","reconcileSingleElement","reconcileSinglePortal","reconcileSingleTextNode","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenArray","newChildrenIterable","toStringTag","reconcileChildrenIterator","_isMockFunction","reconcileChildFibers","mountChildFibers","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","pushHostContainer","nextRootInstance","nextRootContext","validatedTag","getRootHostContext","popHostContainer","getHostContext","pushHostContext","parentHostContext","parentHostContextDev","getChildHostContext","popHostContext","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","memoizedProps","fallback","unstable_avoidThisFallback","findFirstSuspended","row","revealOrder","createDeprecatedResponderListener","eventResponderListener","didWarnAboutMismatchedHooksForComponent","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","currentHookName","table","secondColumnStart","oldHookName","newHookName","warnOnHookMismatchInDev","checkDepsAreArrayDev","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderExpirationTime","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","hook","mountWorkInProgressHook","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","basicStateReducer","mountReducer","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","eagerReducer","eagerState","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountState","updateState","rerenderState","pushEffect","destroy","componentUpdateQueue","mountRef","updateRef","mountEffectImpl","fiberEffectTag","hookEffectTag","updateEffectImpl","prevEffect","mountEffect","jest","warnIfNotCurrentlyActingEffectsInDEV","UpdateEffect","updateEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","prevValue","updateDeferredValue","rerenderDeferredValue","startTransition","setPending","mountTransition","isPending","updateTransition","rerenderTransition","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","warnIfNotScopedWithMatchingAct","warnIfNotCurrentlyActingUpdatesInDev","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","profilerStartTime","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","actualDuration","selfBaseDuration","hydrationParentFiber","nextHydratableInstance","deleteHydratableInstance","parentContainer","didNotHydrateContainerInstance","parentProps","didNotHydrateInstance","createFiber","createFiberFromHostInstanceForDeletion","insertNonHydratedInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","didNotFindHydratableSuspenseInstance","tryHydrate","nextInstance","canHydrateInstance","canHydrateTextInstance","retryTime","dehydratedFragment","dehydratedNode","createFiberFromDehydratedFragment","tryToClaimNextHydratableInstance","firstAttemptedInstance","prepareToHydrateHostTextInstance","diffHydratedText","hydrateTextInstance","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","prepareToHydrateHostSuspenseInstance","hydrateSuspenseInstance","skipPastDehydratedSuspenseInstance","getNextHydratableInstanceAfterSuspenseInstance","popToNextHostParent","popHydrationState","resetHydrationState","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","didReceiveUpdate","reconcileChildren","nextChildren","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","shouldConstruct","isSimpleFunctionComponent","resolvedType","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","currentChild","prevProps","outerMemoType","outerPropTypes","updateFunctionComponent","markRef","updateBlock","updateClassComponent","hasContext","isLegacyContextProvider","pushLegacyContextProvider","oldContext","hasNewLifecycles","resumeMountClassInstance","updateClassInstance","finishClassComponent","didCaptureError","forceUnmountCurrentAndReconcile","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","enterHydrationState","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","hint","debugSource","SUSPENDED_MARKER","updateSuspenseComponent","shouldSuspendImpl","suspenseContext","nextDidTimeout","didSuspend","shouldRemainOnFallback","markSpawnedWork","mountDehydratedSuspenseComponent","nextFallbackChildren","primaryChildFragment","progressedPrimaryChild","progressedChild","fallbackChildFragment","nextPrimaryChildren","treeBaseDuration","hiddenChild","warnIfHydrating","retrySuspenseComponentWithoutHydrating","attemptHydrationAtExpirationTime","renderDidSuspendDelayIfPossible","retryDehydratedSuspenseBoundary","_reactRetry","reenterHydrationStateFromDehydratedSuspenseInstance","updateDehydratedSuspenseComponent","currentPrimaryChildFragment","currentFallbackChildFragment","currentPrimaryChild","primaryChild","scheduleWorkOnFiber","validateSuspenseListNestedChild","childSlot","isIterable","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","lastEffectBeforeRendering","renderState","renderingStartTime","tailExpiration","updateSuspenseListComponent","validateRevealOrder","validateTailOptions","childrenIterator","validateSuspenseListChildren","propagateSuspenseContextChange","currentRow","findLastContentRow","nextRow","updateContextProvider","providerPropTypes","changedBits","oldValue","hasLegacyContextChanged","nextFiber","parentSuspense","propagateContextChange","hasWarnedAboutUsingContextAsConsumer","cloneChildFibers","beginWork","oldWorkInProgress","newWorkInProgress","prevSibling","remountFiber","primaryChildExpirationTime","didSuspendBefore","hasChildWork","mountIndeterminateComponent","unresolvedProps","updateHostComponent","updateHostText","updatePortalComponent","updateMode","updateProfiler","updateContextConsumer","mountIncompleteClassComponent","markUpdate","appendAllChildren","updateHostContainer","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","completeWork","popLegacyContext","popTopLevelLegacyContextObject","fiberRoot","currentHostContext","prepareToHydrateHostInstance","newText","oldText","prevDidTimeout","currentFallbackChild","workInProgressRootExitStatus","didSuspendAlready","renderedTail","suspended","newThennables","nextPriority","TAIL_EXPIRATION_TIMEOUT_MS","unwindWork","unwindInterruptedWork","interruptedWork","createCapturedValue","needsVisibilityToggle","isHidden","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","logError","boundary","errorInfo","capturedError","componentStack","errorBoundary","errorBoundaryName","errorBoundaryFound","willRetry","componentNameMessage","errorBoundaryMessage","combinedMessage","logCapturedError","callComponentWillUnmountWithTimer","componentWillUnmount","safelyDetachRef","captureCommitPhaseError","safelyCallDestroy","commitBeforeMutationLifeCycles","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitHookEffectListMount","commitPassiveHookEffects","HookPassive","commitLifeCycles","finishedRoot","committedExpirationTime","HookLayout","commitMount","onRender","memoizedInteractions","commitHydratedSuspenseInstance","commitSuspenseHydrationCallbacks","commitAttachRef","instanceToUse","commitDetachRef","currentRef","commitUnmount","renderPriorityLevel","onCommitFiberUnmount","safelyCallComponentWillUnmount","unmountHostComponents","commitNestedUnmounts","isHostParent","commitPlacement","parentFiber","getHostParentFiber","isContainer","parentStateNode","before","siblings","getHostSibling","insertOrAppendPlacementNodeIntoContainer","isHost","beforeChild","insertBefore","reactRootContainer","_reactRootContainer","appendChildToContainer","insertOrAppendPlacementNode","currentParentIsContainer","currentParentIsValid","findParent","commitDeletion","detachFiber","commitWork","commitUpdate","commitTextUpdate","commitSuspenseComponent","attachSuspenseRetryListeners","newDidTimeout","primaryChildParent","globalMostRecentFallbackTime","hideOrUnhideAllChildren","thenables","retryCache","retry","resolveRetryThenable","__reactDoNotTraceInteractions","Schedule_tracing_wrap","PossiblyWeakMap","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","attachPingListener","threadIDs","pingCache","ping","pingSuspendedRoot","throwException","sourceFiber","currentSource","hasInvisibleParentBoundary","isAlreadyFailedLegacyErrorBoundary","ceil","executionContext","workInProgressRoot","workInProgressRootFatalError","workInProgressRootLatestProcessedExpirationTime","workInProgressRootLatestSuspenseTimeout","workInProgressRootCanSuspendUsingConfig","workInProgressRootNextUnprocessedUpdateTime","workInProgressRootHasPendingPing","hasUncaughtError","firstUncaughtError","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsRenderPriority","pendingPassiveEffectsExpirationTime","rootsWithPendingDiscreteUpdates","nestedUpdateCount","rootWithNestedUpdates","nestedPassiveUpdateCount","spawnedWorkDuringRender","currentEventTime","timeoutMs","computeSuspenseExpiration","checkForNestedUpdates","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","didWarnAboutUpdateInRenderForAnotherComponent","setStateComponentName","didWarnAboutUpdateInRender","warnAboutRenderPhaseUpdatesInDEV","markUpdateTimeFromFiberToRoot","warnAboutUpdateOnUnmountedFiberInDEV","fiberThatReceivedUpdate","schedulePendingInteractions","performSyncWorkOnRoot","ensureRootIsScheduled","lastDiscreteTime","markRootSuspendedAtTime","markRootUpdatedAtTime","getNextRootExpirationTimeToWorkOn","lastExpiredTime","firstPendingTime","isRootSuspendedAtTime","lastPingedTime","nextKnownPendingLevel","nextLevel","callbackExpirationTime","callbackPriority","callbackNode","existingCallbackNode","existingCallbackPriority","cancelCallback","performConcurrentWorkOnRoot","didTimeout","markRootExpiredAtTime","originalCallbackNode","prepareFreshStack","startWorkOnPendingInteractions","prevExecutionContext","pushDispatcher","prevInteractions","pushInteractions","workLoopConcurrent","thrownValue","handleError","popDispatcher","popInteractions","fatalError","stopInterruptedWorkLoopTimer","stopFinishedWorkLoopTimer","finishedExpirationTime","exitStatus","lastSuspendedTime","getRemainingExpirationTime","IsThisRendererActing","msUntilTimeout","nextTime","timeoutHandle","commitRoot","eventTimeMs","inferTimeFromExpirationTime","currentTimeMs","timeUntilExpirationMs","timeElapsed","jnd","mostRecentEventTime","busyMinDurationMs","busyDelayMs","inferTimeFromExpirationTimeWithSuspenseConfig","computeMsUntilSuspenseLoadingDelay","finishConcurrentRender","workLoopSync","finishSyncRender","unbatchedUpdates","resetCurrentDebugFiberInDEV","completeUnitOfWork","yetAnotherThrownValue","performUnitOfWork","unitOfWork","setCurrentDebugFiberInDEV","resetChildExpirationTime","siblingFiber","completedWork","newChildExpirationTime","shouldBubbleActualDurations","childUpdateExpirationTime","childChildExpirationTime","commitRootImpl","clear","remainingExpirationTime","firstSuspendedTime","markRootFinishedAtTime","commitBeforeMutationEffects","commitMutationEffects","commitLayoutEffects","stopCommitTimer","rootDidHavePassiveEffects","nextNextEffect","expirationTimes","scheduleInteractions","finishPendingInteractions","onCommitFiberRoot","onCommitRoot","commitBeforeMutationEffectOnFiber","commitLayoutEffectOnFiber","flushPassiveEffectsImpl","captureCommitPhaseErrorOnRoot","rootFiber","suspendedTime","retryTimedOutBoundary","boundaryFiber","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","didWarnAboutUnmockedScheduler","computeThreadID","interactionThreadID","interactions","pendingInteractionMap","pendingInteractions","interaction","__count","subscriber","threadID","onWorkScheduled","scheduledInteractions","scheduledExpirationTime","onWorkStarted","earliestRemainingTimeAfterCommit","onWorkStopped","onInteractionScheduledWorkCompleted","onScheduleFiberRoot","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","isDisabled","supportsFiber","rendererID","inject","nonExtensibleObject","preventExtensions","debugCounter","FiberNode","Number","NaN","currentDependencies","fiberTag","getTag","ConcurrentMode","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","pendingChildren","FiberRootNode","createFiberRoot","hydrationCallbacks","uninitializedFiber","BlockingMode","createHostRootFiber","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","parentComponent","getContextForSubtree","ReactCurrentFiberIsRendering","ReactCurrentFiberCurrent","getPublicRootInstance","containerFiber","markRetryTimeImpl","markRetryTimeIfNotHydrated","findHostInstanceWithNoPortals","hostFiber","findCurrentHostFiberWithNoPortals","overrideHookState","overrideProps","scheduleUpdate","setSuspenseHandler","copyWithSetImpl","obj","idx","updated","copyWithSet","newShouldSuspendImpl","ReactDOMRoot","_internalRoot","createRootImpl","ReactDOMBlockingRoot","hydrationOptions","createContainer","hostRoot","listenerMapForDoc","eagerlyTrapReplayableEvents","isValidContainer","hostInstance","unmount","topLevelUpdateWarnings","warnedAboutHydrateAPI","getReactRootElementInContainer","legacyCreateRootFromDOMContainer","forceHydrate","shouldHydrate","rootElement","shouldHydrateDueToLegacyHeuristic","rootSibling","warned","createLegacyRoot","legacyRenderSubtreeIntoContainer","originalCallback","isRootRenderedBySomeReact","rootEl","flushRoot","retryExpTime","setAttemptUserBlockingHydration","expTime","setAttemptContinuousHydration","setAttemptHydrationAtCurrentPriority","ReactDOMInputRestoreControlledState","ReactDOMTextareaRestoreControlledState","ReactDOMSelectRestoreControlledState","roots","flushPendingDiscreteUpdates","devToolsConfig","findFiberByHostInstance","currentDispatcherRef","findHostInstanceByFiber","getCurrentFiber","injectIntoDevTools","bundleType","ReactVersion","rendererPackageName","navigator","userAgent","protocol","App","getElementById"],"mappings":"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a,GACrB5a,EAtU8B,GAwU9B,EACAA,EACA,MACA,KAKJ,CACE,OACA,OACA,OACA,QAKA5K,QAAQ4K,IACR2a,GAAW3a,GAAQ,IAAI4a,GACrB5a,EAnV4B,GAqV5B,EACAA,EACA,MACA,KAKJ,CAAC,UAAW,SAAS5K,QAAQ4K,IAC3B2a,GAAW3a,GAAQ,IAAI4a,GACrB5a,EAnWmB,GAqWnB,EACAA,EAAKuW,cACL,MACA,KAIJ,MAAM2E,GAAW,iBACXC,GAAaC,GAASA,EAAM,GAAGC,cAOrC,CACE,gBACA,qBACA,cACA,iBACA,aACA,YACA,YACA,sBACA,8BACA,gBACA,kBACA,oBACA,oBACA,eACA,YACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,aACA,+BACA,6BACA,cACA,iBACA,kBACA,iBACA,iBACA,aACA,aACA,eACA,oBACA,qBACA,cACA,WACA,iBACA,mBACA,kBACA,aACA,eACA,yBACA,0BACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,eACA,cACA,kBACA,iBACA,qBACA,sBACA,eACA,gBACA,eACA,eACA,YACA,gBACA,iBACA,gBACA,aACA,gBACA,gBACA,eACA,eACA,cACA,YAKAjmB,QAAQ8kB,IACR,MAAMla,EAAOka,EAAcpU,QAAQoV,GAAUC,IAC7CR,GAAW3a,GAAQ,IAAI4a,GACrB5a,EA1dkB,GA4dlB,EACAka,EACA,MACA,KAKJ,CACE,gBACA,gBACA,aACA,aACA,cACA,cAKA9kB,QAAQ8kB,IACR,MAAMla,EAAOka,EAAcpU,QAAQoV,GAAUC,IAC7CR,GAAW3a,GAAQ,IAAI4a,GACrB5a,EAlfkB,GAoflB,EACAka,EACA,gCACA,KAKJ,CACE,WACA,WACA,aAKA9kB,QAAQ8kB,IACR,MAAMla,EAAOka,EAAcpU,QAAQoV,GAAUC,IAC7CR,GAAW3a,GAAQ,IAAI4a,GACrB5a,EAvgBkB,GAygBlB,EACAka,EACA,wCACA,KAOJ,CAAC,WAAY,eAAe9kB,QAAQ8kB,IAClCS,GAAWT,GAAiB,IAAIU,GAC9BV,EArhBkB,GAuhBl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d3CS,Oc4CxB,Od1C+B,ac2CxB,adzCvC,iBc0C2C,iBd7CmB,Yc8CxB,YdxCtC,qBcyCgD,qBd/BW,UcgCxB,UdXyB,WcYxB,WdPuB,UcQxB,UdJwB,UcKxB,UdHwB,UcIxB,UdF4B,acGxB,aACvCA,GAA0C,gBdUiB,UcTxB,WAsBrC,SAASC,GACP3X,EACAoW,GAQA,IAAK,IAAIj3B,EAAI,EAAGA,EAAI6gB,EAAW1f,OAAQnB,GAAK,EAAG,CAC7C,MAAMy4B,EAAa5X,EAAW7gB,GACxB2d,EAAUkD,EAAW7gB,EAAI,GAEzB2b,EAAU,MADSgC,EAAM,GAAG6I,cAAgB7I,EAAM9b,MAAM,IAGxDgN,EAAS,CACbqS,wBAAyB,CACvBwX,QAAS/c,EACTgd,SAAUhd,EAAU,WAEtB6F,aAAc,CAACiX,GACfG,cAAe3B,GAEjBkB,GAAgBviB,IAAI6iB,EAAUxB,GAC9BiB,GAA+BtiB,IAAI6iB,EAAU5pB,GAC7CopB,GAA4Bta,GAAS9O,GAczC2pB,GAzJ+C,CddW,OcexB,OdV0B,ScWxB,SdTuB,QcUxB,QdTwB,QcUxB,QdCjC,ccAwC,cdEgB,OcDxB,OdEuB,McDxB,MdG8B,WcFxB,WdC2B,WcAxB,cdGoB,UcFxB,UdO0B,YcNxB,YdOkB,OcNxB,OdcyB,QcbxB,QdiBwB,QchBxB,QdiB0B,UchBxB,UdiByB,UchBxB,UdiByB,WchBxB,WdiBqB,QchBxB,Qd0B4B,YczBxB,Yd6BsB,Uc5BxB,Ud6BqB,Qc5BxB,Qd6BwB,Qc5BxB,Qd6BuB,Oc5BxB,Od+BhC,gBc9B0C,gBdiC1C,cchCwC,cd+CsB,Yc9CxB,YdgDyB,ac/CxB,adgDkB,Qc/CxB,QdiDyB,SchDxB,SdsDwB,ScrDxB,Sd2DlC,cc1DwC,cd4DqB,Wc3DxB,Wd6D0B,ac5DxB,adiEvC,echEyC,gBCoCC,GDuF5CA,GACEH,GCvF8C,GD0FhDG,GACEF,GC1F4C,GDuE9C,SACEzX,EACAoW,GAEA,IAAK,IAAIj3B,EAAI,EAAGA,EAAI6gB,EAAW1f,OAAQnB,IACrCm4B,GAAgBviB,IAAIiL,EAAW7gB,GAAIi3B,GAkBvC4B,CAA+BT,GChG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uB,QAGnB,IAAK,IAAI/jD,EAAI,EAAGA,EAAIw0B,EAAUrzB,OAAQnB,IAAK,CACzC,MAAM0M,EAAO8nB,EAAUx0B,GACvB0M,EAAKkD,QAAQg0C,WAAal3C,EAAKi3C,KAC/Bj3C,EAAKkD,QAAQk0C,UAAYp3C,EAAKm3C,MAW7B,SAAS/C,GAAajf,GAC3B,IAAIgf,EAaJ,OATEA,EAFE,mBAAoBhf,EAEV,CACVgI,MAAOhI,EAAMghB,eACbrV,IAAK3L,EAAMihB,cAIDrC,GAAW5e,GAGlBgf,GAAa,CAAChX,MAAO,EAAG2D,IAAK,GCnKtC,IAAIwW,GAAqB,OACrBC,GAAsB,OAEb,CAaX,MAAMC,EAAc,CAClB,UACA,SACA,OACA,UACA,QACA,OACA,WACA,UACA,aACA,OACA,KACA,SACA,UACA,SACA,MACA,WACA,KACA,UACA,MACA,MACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,SACA,MACA,QACA,UACA,KACA,OACA,UACA,OACA,UACA,OACA,WACA,OACA,MACA,UACA,WACA,WACA,SACA,KACA,IACA,QACA,YACA,MACA,SACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,QACA,KACA,QACA,KACA,MACA,OAIIC,EAAc,CAClB,SACA,UACA,OACA,QACA,KACA,KACA,UACA,SACA,WAKA,gBACA,OACA,SAIIC,EAAkBD,EAAY7xB,OAAO,CAAC,WAGtC+xB,EAAiB,CACrB,KACA,KACA,KACA,SACA,WACA,IACA,KACA,MAGIC,EAAoB,CACxBp3C,QAAS,KAETq3C,QAAS,KACTC,YAAa,KACbC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KAEnBC,uBAAwB,KACxBC,qBAAsB,MAGxBZ,GAAsB,SAASa,EAASn3C,GACtC,IAAIo3C,EAAe,IAAKD,GAAWR,GAC/B53C,EAAO,CAACiB,OA+CZ,OA7CkC,IAA9Bw2C,EAAY1jC,QAAQ9S,KACtBo3C,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","file":"static/js/main.4620ca50.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler-tracing.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler-tracing.development.js');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n// TODO: this is special because it gets imported during build.\nmodule.exports = '16.12.0';\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nlet didWarnAboutMessageChannel = false;\nlet enqueueTaskImpl = null;\n\nexport default function enqueueTask(task: () => void) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      let requireString = ('require' + Math.random()).slice(0, 7);\n      let nodeRequire = module && module[requireString];\n      // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n      enqueueTaskImpl = nodeRequire('timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function(callback: () => void) {\n        if (__DEV__) {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n            if (typeof MessageChannel === 'undefined') {\n              console.error(\n                'This browser does not have a MessageChannel implementation, ' +\n                  'so enqueuing tasks via await act(async () => ...) will fail. ' +\n                  'Please file an issue at https://github.com/facebook/react/issues ' +\n                  'if you encounter this warning.',\n              );\n            }\n          }\n        }\n        const channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n  return enqueueTaskImpl(task);\n}\n","/** @license React v0.19.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};\nexports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};\n","/** @license React v0.19.1\n * scheduler-tracing.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=0;exports.__interactionsRef=null;exports.__subscriberRef=null;exports.unstable_clear=function(a){return a()};exports.unstable_getCurrent=function(){return null};exports.unstable_getThreadID=function(){return++b};exports.unstable_subscribe=function(){};exports.unstable_trace=function(a,d,c){return c()};exports.unstable_unsubscribe=function(){};exports.unstable_wrap=function(a){return a};\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nexport const REACT_ELEMENT_TYPE = hasSymbol\n  ? Symbol.for('react.element')\n  : 0xeac7;\nexport const REACT_PORTAL_TYPE = hasSymbol\n  ? Symbol.for('react.portal')\n  : 0xeaca;\nexport const REACT_FRAGMENT_TYPE = hasSymbol\n  ? Symbol.for('react.fragment')\n  : 0xeacb;\nexport const REACT_STRICT_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.strict_mode')\n  : 0xeacc;\nexport const REACT_PROFILER_TYPE = hasSymbol\n  ? Symbol.for('react.profiler')\n  : 0xead2;\nexport const REACT_PROVIDER_TYPE = hasSymbol\n  ? Symbol.for('react.provider')\n  : 0xeacd;\nexport const REACT_CONTEXT_TYPE = hasSymbol\n  ? Symbol.for('react.context')\n  : 0xeace;\n// TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\nexport const REACT_ASYNC_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.async_mode')\n  : 0xeacf;\nexport const REACT_CONCURRENT_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.concurrent_mode')\n  : 0xeacf;\nexport const REACT_FORWARD_REF_TYPE = hasSymbol\n  ? Symbol.for('react.forward_ref')\n  : 0xead0;\nexport const REACT_SUSPENSE_TYPE = hasSymbol\n  ? Symbol.for('react.suspense')\n  : 0xead1;\nexport const REACT_SUSPENSE_LIST_TYPE = hasSymbol\n  ? Symbol.for('react.suspense_list')\n  : 0xead8;\nexport const REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nexport const REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nexport const REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nexport const REACT_FUNDAMENTAL_TYPE = hasSymbol\n  ? Symbol.for('react.fundamental')\n  : 0xead5;\nexport const REACT_RESPONDER_TYPE = hasSymbol\n  ? Symbol.for('react.responder')\n  : 0xead6;\nexport const REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport default function invariant(condition, format, a, b, c, d, e, f) {\n  if (condition) return;\n  throw new Error(\n    'Internal React error: invariant() is meant to be replaced at compile ' +\n      'time. There is no runtime version.',\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    console.error(\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function(publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function(\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function(\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function(partialState, callback) {\n  invariant(\n    typeof partialState === 'object' ||\n      typeof partialState === 'function' ||\n      partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n      'function which returns an object of state variables.',\n  );\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function(callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function() {\n        console.warn(\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nObject.assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Thenable<T, R> = {\n  then(resolve: (T) => mixed, reject: (mixed) => mixed): R,\n  ...\n};\n\nexport type LazyComponent<T> = {\n  $$typeof: Symbol | number,\n  _ctor: () => Thenable<{default: T, ...}, mixed>,\n  _status: 0 | 1 | 2,\n  _result: any,\n  ...\n};\n\ntype ResolvedLazyComponent<T> = {\n  $$typeof: Symbol | number,\n  _ctor: () => Thenable<{default: T, ...}, mixed>,\n  _status: 1,\n  _result: any,\n  ...\n};\n\nexport const Uninitialized = -1;\nexport const Pending = 0;\nexport const Resolved = 1;\nexport const Rejected = 2;\n\nexport function refineResolvedLazyComponent<T>(\n  lazyComponent: LazyComponent<T>,\n): ResolvedLazyComponent<T> | null {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nexport function initializeLazyComponentType(\n  lazyComponent: LazyComponent<any>,\n): void {\n  if (lazyComponent._status === Uninitialized) {\n    lazyComponent._status = Pending;\n    const ctor = lazyComponent._ctor;\n    const thenable = ctor();\n    lazyComponent._result = thenable;\n    thenable.then(\n      moduleObject => {\n        if (lazyComponent._status === Pending) {\n          const defaultExport = moduleObject.default;\n          if (__DEV__) {\n            if (defaultExport === undefined) {\n              console.error(\n                'lazy: Expected the result of a dynamic import() call. ' +\n                  'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n                  \"const MyComponent = lazy(() => import('./MyComponent'))\",\n                moduleObject,\n              );\n            }\n          }\n          lazyComponent._status = Resolved;\n          lazyComponent._result = defaultExport;\n        }\n      },\n      error => {\n        if (lazyComponent._status === Pending) {\n          lazyComponent._status = Rejected;\n          lazyComponent._result = error;\n        }\n      },\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'shared/ReactLazyComponent';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport {refineResolvedLazyComponent} from 'shared/ReactLazyComponent';\n\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\nfunction getComponentName(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentName(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return `Profiler`;\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n      case REACT_LAZY_TYPE: {\n        const thenable: LazyComponent<mixed> = (type: any);\n        const resolvedThenable = refineResolvedLazyComponent(thenable);\n        if (resolvedThenable) {\n          return getComponentName(resolvedThenable);\n        }\n        break;\n      }\n    }\n  }\n  return null;\n}\n\nexport default getComponentName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nconst ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Fiber),\n};\n\nexport default ReactCurrentOwner;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown,\n  specialPropRefWarningShown,\n  didWarnAboutStringRefs;\n\nif (__DEV__) {\n  didWarnAboutStringRefs = {};\n}\n\n/**\n * 查看参数对象中是否有合法的 ref 属性\n * 返回布尔值\n */\nfunction hasValidRef(config) {\n  // 在开发环境下\n  if (__DEV__) {\n    // 查看 config 对象的自有属性中是否有 ref 属性\n    if (hasOwnProperty.call(config, 'ref')) {\n      // 获取 ref 属性的属性描述符中的 get\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n/**\n * 查看参数对象中是否有合法的 key 属性\n * 返回布尔值\n */\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\n/**\n *  指定当通过 props 对象获取 key 属性时报错\n *  props        组件中的 props 对象\n *  displayName  组件名称标识\n */\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  // 通过 props 对象获取 key 属性报错\n  const warnAboutAccessingKey = function () {\n    // 在开发环境中\n    if (__DEV__) {\n      // specialPropKeyWarningShown 控制错误只输出一次的变量\n      if (!specialPropKeyWarningShown) {\n        // 通过 specialPropKeyWarningShown 变量锁住判断条件\n        specialPropKeyWarningShown = true;\n        // 指定报错信息和组件名称\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  // 为 props 对象添加 key 属性\n  Object.defineProperty(props, 'key', {\n    // 当获取 key 属性时调用 warnAboutAccessingKey 方法进行报错\n    get: warnAboutAccessingKey,\n    configurable: true,\n  });\n}\n\n/**\n *  指定当通过 props 对象获取 ref 属性时报错\n *  props        组件中的 props 对象\n *  displayName  组件名称标识\n */\nfunction defineRefPropWarningGetter(props, displayName) {\n  // 通过 props 对象获取 ref 属性报错\n  const warnAboutAccessingRef = function () {\n    if (__DEV__) {\n      // specialPropRefWarningShown 控制错误只输出一次的变量\n      if (!specialPropRefWarningShown) {\n        // 通过 specialPropRefWarningShown 变量锁住判断条件\n        specialPropRefWarningShown = true;\n        // 指定报错信息和组件名称\n        console.error(\n          '%s: `ref` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  // 为 props 对象添加 key 属性\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true,\n  });\n}\n\n/**\n * 在开发环境中如果 ref 属性接收的值为字符串 报警告\n */\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  // 在开发环境下\n  if (__DEV__) {\n    // 如果 ref 属性的值是字符串类型\n    if (\n      typeof config.ref === 'string' &&\n      ReactCurrentOwner.current &&\n      config.__self &&\n      ReactCurrentOwner.current.stateNode !== config.__self\n    ) {\n      const componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        console.error(\n          'Component \"%s\" contains the string ref \"%s\". ' +\n            'Support for string refs will be removed in a future major release. ' +\n            'This case cannot be automatically converted to an arrow function. ' +\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n          componentName,\n          config.ref,\n        );\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\n/**\n * 接收参数 返回 ReactElement\n */\nconst ReactElement = function (type, key, ref, self, source, owner, props) {\n  const element = {\n    /**\n     * 组件的类型, 十六进制数值或者 Symbol 值\n     * React 在最终在渲染 DOM 的时候, 需要确保元素的类型是 REACT_ELEMENT_TYPE\n     * 需要此属性作为判断的依据\n     */\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    /**\n     * 元素具体的类型值 如果是元素节点 type 属性中存储的就是 div span 等等\n     * 如果元素是组件 type 属性中存储的就是组件的构造函数\n     */\n    type: type,\n    /**\n     * 元素的唯一标识\n     * 用作内部 vdom 比对 提升 DOM 操作性能\n     */\n    key: key,\n    /**\n     * 存储元素 DOM 对象或者组件 实例对象\n     */\n    ref: ref,\n    /**\n     * 存储向组件内部传递的数据\n     */\n    props: props,\n\n    /**\n     * 记录当前元素所属组件 (记录当前元素是哪个组件创建的)\n     */\n    _owner: owner,\n  };\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false,\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self,\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n  // 返回 ReactElement\n  return element;\n};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsx(type, config, maybeKey) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    undefined,\n    undefined,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, source, self) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n    warnIfStringRefCannotBeAutoConverted(config);\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (key || ref) {\n    const displayName =\n      typeof type === 'function'\n        ? type.displayName || type.name || 'Unknown'\n        : type;\n    if (key) {\n      defineKeyPropWarningGetter(props, displayName);\n    }\n    if (ref) {\n      defineRefPropWarningGetter(props, displayName);\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\n/**\n * 创建 React Element\n * type      元素类型\n * config    配置属性\n * children  子元素\n * 1. 分离 props 属性和特殊属性\n * 2. 将子元素挂载到 props.children 中\n * 3. 为 props 属性赋默认值 (defaultProps)\n * 4. 创建并返回 ReactElement\n */\nexport function createElement(type, config, children) {\n  /**\n   * propName -> 属性名称\n   * 用于后面的 for 循环\n   */\n  let propName;\n\n  /**\n   * 存储 React Element 中的普通元素属性 即不包含 key ref self source\n   */\n  const props = {};\n\n  /**\n   * 待提取属性\n   * React 内部为了实现某些功能而存在的属性\n   */\n  let key = null;\n  let ref = null;\n  let self = null;\n  let source = null;\n\n  // 如果 config 不为 null\n  if (config != null) {\n    // 如果 config 对象中有合法的 ref 属性\n    if (hasValidRef(config)) {\n      // 将 config.ref 属性提取到 ref 变量中\n      ref = config.ref;\n      // 在开发环境中\n      if (__DEV__) {\n        // 如果 ref 属性的值被设置成了字符串形式就报一个提示\n        // 说明此用法在将来的版本中会被删除\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n    // 如果在 config 对象中拥有合法的 key 属性\n    if (hasValidKey(config)) {\n      // 将 config.key 属性中的值提取到 key 变量中\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // 遍历 config 对象\n    for (propName in config) {\n      // 如果当前遍历到的属性是对象自身属性\n      // 并且在 RESERVED_PROPS 对象中不存在该属性\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        // 将满足条件的属性添加到 props 对象中 (普通属性)\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  /**\n   * 将第三个及之后的参数挂载到 props.children 属性中\n   * 如果子元素是多个 props.children 是数组\n   * 如果子元素是一个 props.children 是对象\n   */\n\n  // 由于从第三个参数开始及以后都表示子元素\n  // 所以减去前两个参数的结果就是子元素的数量\n  const childrenLength = arguments.length - 2;\n  // 如果子元素的数量是 1\n  if (childrenLength === 1) {\n    // 直接将子元素挂载到到 props.children 属性上\n    // 此时 children 是对象类型\n    props.children = children;\n    // 如果子元素的数量大于 1\n  } else if (childrenLength > 1) {\n    // 创建数组, 数组中元素的数量等于子元素的数量\n    const childArray = Array(childrenLength);\n    // 开启循环 循环次匹配子元素的数量\n    for (let i = 0; i < childrenLength; i++) {\n      // 将子元素添加到 childArray 数组中\n      // i + 2 的原因是实参集合的前两个参数不是子元素\n      childArray[i] = arguments[i + 2];\n    }\n    // 如果是开发环境\n    if (__DEV__) {\n      // 如果 Object 对象中存在 freeze 方法\n      if (Object.freeze) {\n        // 调用 freeze 方法 冻结 childArray 数组\n        // 防止 React 核心对象被修改 冻结对象提高性能\n        Object.freeze(childArray);\n      }\n    }\n    // 将子元素数组挂载到 props.children 属性中\n    props.children = childArray;\n  }\n\n  /**\n   * 如果当前处理是组件\n   * 看组件身上是否有 defaultProps 属性\n   * 这个属性中存储的是 props 对象中属性的默认值\n   * 遍历 defaultProps 对象 查看对应的 props 属性的值是否为 undefined\n   * 如果为undefined 就将默认值赋值给对应的 props 属性值\n   */\n\n  // 将 type 属性值视为函数 查看其中是否具有 defaultProps 属性\n  if (type && type.defaultProps) {\n    // 将 type 函数下的 defaultProps 属性赋值给 defaultProps 变量\n    const defaultProps = type.defaultProps;\n    // 遍历 defaultProps 对象中的属性 将属性名称赋值给 propName 变量\n    for (propName in defaultProps) {\n      // 如果 props 对象中的该属性的值为 undefined\n      if (props[propName] === undefined) {\n        // 将 defaultProps 对象中的对应属性的值赋值给 props 对象中的对应属性的值\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  /**\n   * 在开发环境中 React 会检测开发者是否在组件内部\n   * 通过 props 对象获取 key 属性或者 ref 属性\n   * 如果开发者调用了 在控制台中报错误提示\n   */\n\n  // 如果处于开发环境\n  if (__DEV__) {\n    // 元素具有 key 属性或者 ref 属性\n    if (key || ref) {\n      // 看一下 type 属性中存储的是否是函数 如果是函数就表示当前元素是组件\n      // 如果元素不是组件 就直接返回元素类型字符串\n      // displayName 用于在报错过程中显示是哪一个组件报错了\n      // 如果开发者显式定义了 displayName 属性 就显示开发者定义的\n      // 否者就显示组件名称 如果组件也没有名称 就显示 'Unknown'\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      // 如果 key 属性存在\n      if (key) {\n        // 为 props 对象添加key 属性\n        // 并指定当通过 props 对象获取 key 属性时报错\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      // 如果 ref 属性存在\n      if (ref) {\n        // 为 props 对象添加 ref 属性\n        // 并指定当通过 props 对象获取 ref 属性时报错\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  // 返回 ReactElement\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    // 在 Virtual DOM 中用于识别自定义组件\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * 此方法在 React 对象中进行导出 但官方已经不推荐使用\n * 作用是返回一个函数 用于根据给定的类型创建 ReactElement\n * 官方推荐直接使用 JSX 或者 React.createElement 方法直接创建 ReactElement\n */\nexport function createFactory(type) {\n  const factory = createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n  factory.type = type;\n  return factory;\n}\n\n/**\n * 克隆 ReactElement 并替换新 key\n */\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const newElement = ReactElement(\n    oldElement.type,\n    newKey,\n    oldElement.ref,\n    oldElement._self,\n    oldElement._source,\n    oldElement._owner,\n    oldElement.props,\n  );\n\n  return newElement;\n}\n\n/**\n * 克隆 ReactElement\n * 返回新的 ReactElement\n */\nexport function cloneElement(element, config, children) {\n  // 如果 element 参数为 null 或者 undefined 报错\n  invariant(\n    !(element === null || element === undefined),\n    'React.cloneElement(...): The argument must be a React element, but you passed %s.',\n    element,\n  );\n\n  let propName;\n\n  // 获取原有 element 身上的属性\n  const props = Object.assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n  let ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  const self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  const source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * 验证 object 参数是否是 ReactElement. 返回布尔值\n * 验证成功的条件:\n * object 是对象\n * object 不为 null\n * object 对象中的 $$typeof 属性值为 REACT_ELEMENT_TYPE\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nexport default function(\n  name: null | string,\n  source: any,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (source) {\n    let path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    if (__DEV__) {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        const match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          const pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\n\nimport describeComponentFrame from 'shared/describeComponentFrame';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = {};\n\nlet currentlyValidatingElement = (null: null | ReactElement);\n\nexport function setCurrentlyValidatingElement(element: null | ReactElement) {\n  if (__DEV__) {\n    currentlyValidatingElement = element;\n  }\n}\n\nif (__DEV__) {\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\n\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\n    let stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentlyValidatingElement) {\n      const name = getComponentName(currentlyValidatingElement.type);\n      const owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(\n        name,\n        currentlyValidatingElement._source,\n        owner && getComponentName(owner.type),\n      );\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nexport default ReactDebugCurrentFrame;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {disableMapsAsChildren} from 'shared/ReactFeatureFlags';\n\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = ('' + key).replace(escapeRegex, function(match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nconst POOL_SIZE = 10;\nconst traverseContextPool = [];\nfunction getPooledTraverseContext(\n  mapResult,\n  keyPrefix,\n  mapFunction,\n  mapContext,\n) {\n  if (traverseContextPool.length) {\n    const traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0,\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  callback,\n  traverseContext,\n) {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n    );\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        callback,\n        traverseContext,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      if (disableMapsAsChildren) {\n        invariant(\n          iteratorFn !== children.entries,\n          'Maps are not valid as a React child (found: %s). Consider converting ' +\n            'children to an array of keyed ReactElements instead.',\n          children,\n        );\n      }\n\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            console.warn(\n              'Using Maps as children is deprecated and will be removed in ' +\n                'a future major release. Consider converting children to ' +\n                'an array of keyed ReactElements instead.',\n            );\n          }\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(children);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(\n          child,\n          nextName,\n          callback,\n          traverseContext,\n        );\n      }\n    } else if (type === 'object') {\n      let addendum = '';\n      if (__DEV__) {\n        addendum =\n          ' If you meant to render a collection of children, use an array ' +\n          'instead.' +\n          ReactDebugCurrentFrame.getStackAddendum();\n      }\n      const childrenString = '' + children;\n      invariant(\n        false,\n        'Objects are not valid as a React child (found: %s).%s',\n        childrenString === '[object Object]'\n          ? 'object with keys {' + Object.keys(children).join(', ') + '}'\n          : childrenString,\n        addendum,\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (\n    typeof component === 'object' &&\n    component !== null &&\n    component.key != null\n  ) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  const {func, context} = bookKeeping;\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  const traverseContext = getPooledTraverseContext(\n    null,\n    null,\n    forEachFunc,\n    forEachContext,\n  );\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  const {result, keyPrefix, func, context} = bookKeeping;\n\n  let mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, c => c);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(\n        mappedChild,\n        // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        keyPrefix +\n          (mappedChild.key && (!child || child.key !== mappedChild.key)\n            ? escapeUserProvidedKey(mappedChild.key) + '/'\n            : '') +\n          childKey,\n      );\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  let escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  const traverseContext = getPooledTraverseContext(\n    array,\n    escapedPrefix,\n    func,\n    context,\n  );\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, () => null, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  const result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, child => child);\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  invariant(\n    isValidElement(children),\n    'React.Children.only expected to receive a single React element child.',\n  );\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport const enableUserTimingAPI = __DEV__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in Strict Mode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nexport const warnAboutDeprecatedLifecycles = true;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Trace which interactions trigger each commit.\nexport const enableSchedulerTracing = __PROFILE__;\n\n// SSR experiments\nexport const enableSuspenseServerRenderer = __EXPERIMENTAL__;\nexport const enableSelectiveHydration = __EXPERIMENTAL__;\n\n// Flight experiments\nexport const enableBlocksAPI = __EXPERIMENTAL__;\n\n// Only used in www builds.\nexport const enableSchedulerDebugging = false;\n\n// Only used in www builds.\nexport function addUserTimingListener() {\n  throw new Error('Not implemented.');\n}\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\n// Warns when a combination of updates on a dom can cause a style declaration\n// that clashes with a previous one https://github.com/facebook/react/pull/14181\nexport const warnAboutShorthandPropertyCollision = true;\n\n// Experimental React Flare event system and event components support.\nexport const enableDeprecatedFlareAPI = false;\n\n// Experimental Host Component support.\nexport const enableFundamentalAPI = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\n// We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)\n// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version\nexport const warnAboutUnmockedScheduler = false;\n\n// For tests, we flush suspense fallbacks in an act scope;\n// *except* in some of our own tests, where we test incremental loading states.\nexport const flushSuspenseFallbacksInTests = true;\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\nexport const enableSuspenseCallback = false;\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\n\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\nexport const enableTrainModelFix = true;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance\nexport const enableNativeTargetAsInstance = false;\n\n// Controls sequence of passive effect destroy and create functions.\n// If this flag is off, destroy and create functions may be interleaved.\n// When the flag is on, all destroy functions will be run (for all fibers)\n// before any create functions are run, similar to how layout effects work.\n// This flag provides a killswitch if that proves to break existing code somehow.\nexport const runAllPassiveEffectDestroysBeforeCreates = false;\n\n// Controls behavior of deferred effect destroy functions during unmount.\n// Previously these functions were run during commit (along with layout effects).\n// Ideally we should delay these until after commit for performance reasons.\n// This flag provides a killswitch if that proves to break existing code somehow.\n//\n// WARNING This flag only has an affect if used with runAllPassiveEffectDestroysBeforeCreates.\nexport const deferPassiveEffectCleanupDuringUnmount = false;\n\n// Enables a warning when trying to spread a 'key' to an element;\n// a deprecated pattern we want to get rid of in the future\nexport const warnAboutSpreadingKeyToJSX = false;\n\n// --------------------------\n// Future APIs to be deprecated\n// --------------------------\n\n// Prevent the value and checked attributes from syncing\n// with their related DOM properties\nexport const disableInputAttributeSyncing = false;\n\nexport const warnAboutStringRefs = false;\n\nexport const disableLegacyContext = false;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\n// Disables Maps as ReactElement children\nexport const disableMapsAsChildren = false;\n\n// We should remove this flag once the above flag becomes enabled\nexport const warnUnstableRenderSubtreeIntoContainer = false;\n\n// Modern event system where events get registered at roots\nexport const enableModernEventSystem = false;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nexport function createContext<T>(\n  defaultValue: T,\n  calculateChangedBits: ?(a: T, b: T) => number,\n): ReactContext<T> {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    if (__DEV__) {\n      if (\n        calculateChangedBits !== null &&\n        typeof calculateChangedBits !== 'function'\n      ) {\n        console.error(\n          'createContext: Expected the optional second argument to be a ' +\n            'function. Instead received: %s',\n          calculateChangedBits,\n        );\n      }\n    }\n  }\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: (null: any),\n    Consumer: (null: any),\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context,\n  };\n\n  let hasWarnedAboutUsingNestedContextConsumers = false;\n  let hasWarnedAboutUsingConsumerProvider = false;\n\n  if (__DEV__) {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    const Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits,\n    };\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get() {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n            console.error(\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Provider> instead?',\n            );\n          }\n          return context.Provider;\n        },\n        set(_Provider) {\n          context.Provider = _Provider;\n        },\n      },\n      _currentValue: {\n        get() {\n          return context._currentValue;\n        },\n        set(_currentValue) {\n          context._currentValue = _currentValue;\n        },\n      },\n      _currentValue2: {\n        get() {\n          return context._currentValue2;\n        },\n        set(_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        },\n      },\n      _threadCount: {\n        get() {\n          return context._threadCount;\n        },\n        set(_threadCount) {\n          context._threadCount = _threadCount;\n        },\n      },\n      Consumer: {\n        get() {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n            console.error(\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\n            );\n          }\n          return context.Consumer;\n        },\n      },\n    });\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n    context.Consumer = Consumer;\n  } else {\n    context.Consumer = context;\n  }\n\n  if (__DEV__) {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {LazyComponent, Thenable} from 'shared/ReactLazyComponent';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\n\nexport function lazy<T, R>(ctor: () => Thenable<T, R>): LazyComponent<T> {\n  let lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null,\n  };\n\n  if (__DEV__) {\n    // In production, this would just set it on the object.\n    let defaultProps;\n    let propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get() {\n          return defaultProps;\n        },\n        set(newDefaultProps) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true,\n          });\n        },\n      },\n      propTypes: {\n        configurable: true,\n        get() {\n          return propTypes;\n        },\n        set(newPropTypes) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true,\n          });\n        },\n      },\n    });\n  }\n\n  return lazyType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport default function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error(\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_CONCURRENT_MODE_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_FUNDAMENTAL_TYPE,\n  REACT_RESPONDER_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\n\nexport default function isValidElementType(type: mixed) {\n  return (\n    typeof type === 'string' ||\n    typeof type === 'function' ||\n    // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_CONCURRENT_MODE_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE ||\n    (typeof type === 'object' &&\n      type !== null &&\n      (type.$$typeof === REACT_LAZY_TYPE ||\n        type.$$typeof === REACT_MEMO_TYPE ||\n        type.$$typeof === REACT_PROVIDER_TYPE ||\n        type.$$typeof === REACT_CONTEXT_TYPE ||\n        type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        type.$$typeof === REACT_FUNDAMENTAL_TYPE ||\n        type.$$typeof === REACT_RESPONDER_TYPE ||\n        type.$$typeof === REACT_SCOPE_TYPE ||\n        type.$$typeof === REACT_BLOCK_TYPE))\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\n\nexport default function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      console.error(\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  REACT_BLOCK_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_FORWARD_REF_TYPE,\n} from 'shared/ReactSymbols';\n\nopaque type Block<Props>: React$AbstractComponent<\n  Props,\n  null,\n> = React$AbstractComponent<Props, null>;\n\nexport default function block<Args, Props, Data>(\n  query: (...args: Args) => Data,\n  render: (props: Props, data: Data) => React$Node,\n): (...args: Args) => Block<Props> {\n  if (__DEV__) {\n    if (typeof query !== 'function') {\n      console.error(\n        'Blocks require a query function but was given %s.',\n        query === null ? 'null' : typeof query,\n      );\n    }\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'Blocks require a render function but received a `memo` ' +\n          'component. Use `memo` on an inner component instead.',\n      );\n    } else if (render != null && render.$$typeof === REACT_FORWARD_REF_TYPE) {\n      console.error(\n        'Blocks require a render function but received a `forwardRef` ' +\n          'component. Use `forwardRef` on an inner component instead.',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'Blocks require a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else if (render.length !== 0 && render.length !== 2) {\n      // Warn if it's not accepting two args.\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      console.error(\n        'Block render functions accept exactly two parameters: props and data. %s',\n        render.length === 1\n          ? 'Did you forget to use the data parameter?'\n          : 'Any additional parameter will be undefined.',\n      );\n    }\n\n    if (\n      render != null &&\n      (render.defaultProps != null || render.propTypes != null)\n    ) {\n      console.error(\n        'Block render functions do not support propTypes or defaultProps. ' +\n          'Did you accidentally pass a React component?',\n      );\n    }\n  }\n  return function(): Block<Props> {\n    let args = arguments;\n    return {\n      $$typeof: REACT_BLOCK_TYPE,\n      query: function() {\n        return query.apply(null, args);\n      },\n      render: render,\n    };\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactFiberHooks';\n\n/**\n * Keeps track of the current dispatcher.\n */\nconst ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Dispatcher),\n};\n\nexport default ReactCurrentDispatcher;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactContext,\n  ReactEventResponder,\n  ReactEventResponderListener,\n} from 'shared/ReactTypes';\nimport invariant from 'shared/invariant';\nimport {REACT_RESPONDER_TYPE} from 'shared/ReactSymbols';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  invariant(\n    dispatcher !== null,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n  return dispatcher;\n}\n\nexport function useContext<T>(\n  Context: ReactContext<T>,\n  unstable_observedBits: number | boolean | void,\n) {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    if (unstable_observedBits !== undefined) {\n      console.error(\n        'useContext() second argument is reserved for future ' +\n          'use in React. Passing it is not supported. ' +\n          'You passed: %s.%s',\n        unstable_observedBits,\n        typeof unstable_observedBits === 'number' && Array.isArray(arguments[2])\n          ? '\\n\\nDid you call array.map(useContext)? ' +\n              'Calling Hooks inside a loop is not supported. ' +\n              'Learn more at https://fb.me/rules-of-hooks'\n          : '',\n      );\n    }\n\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        console.error(\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        console.error(\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {|current: T|} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport const emptyObject = {};\n\nexport function useResponder(\n  responder: ReactEventResponder<any, any>,\n  listenerProps: ?Object,\n): ?ReactEventResponderListener<any, any> {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {\n      console.error(\n        'useResponder: invalid first argument. Expected an event responder, but instead got %s',\n        responder,\n      );\n      return;\n    }\n  }\n  return dispatcher.useResponder(responder, listenerProps || emptyObject);\n}\n\nexport function useTransition(\n  config: ?Object,\n): [(() => void) => void, boolean] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition(config);\n}\n\nexport function useDeferredValue<T>(value: T, config: ?Object): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value, config);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {SuspenseConfig} from 'react-reconciler/src/ReactFiberSuspenseConfig';\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nconst ReactCurrentBatchConfig = {\n  suspense: (null: null | SuspenseConfig),\n};\n\nexport default ReactCurrentBatchConfig;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {SuspenseConfig} from 'react-reconciler/src/ReactFiberSuspenseConfig';\n\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\n\n// Within the scope of the callback, mark all updates as being allowed to suspend.\nexport function withSuspenseConfig(scope: () => void, config?: SuspenseConfig) {\n  const previousConfig = ReactCurrentBatchConfig.suspense;\n  ReactCurrentBatchConfig.suspense = config === undefined ? null : config;\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.suspense = previousConfig;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nimport isValidElementType from 'shared/isValidElementType';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  getIteratorFn,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_ELEMENT_TYPE,\n} from 'shared/ReactSymbols';\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\nimport checkPropTypes from 'prop-types/checkPropTypes';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport {\n  isValidElement,\n  createElement,\n  cloneElement,\n  jsxDEV,\n} from './ReactElement';\nimport ReactDebugCurrentFrame, {\n  setCurrentlyValidatingElement,\n} from './ReactDebugCurrentFrame';\n\nlet propTypesMisspellWarningShown;\n\nif (__DEV__) {\n  propTypesMisspellWarningShown = false;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    const name = getComponentName(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    const lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nconst ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  let info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    const parentName =\n      typeof parentType === 'string'\n        ? parentType\n        : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  let childOwner = '';\n  if (\n    element &&\n    element._owner &&\n    element._owner !== ReactCurrentOwner.current\n  ) {\n    // Give the component that originally created this child.\n    childOwner = ` It was passed a child from ${getComponentName(\n      element._owner.type,\n    )}.`;\n  }\n\n  setCurrentlyValidatingElement(element);\n  if (__DEV__) {\n    console.error(\n      'Each child in a list should have a unique \"key\" prop.' +\n        '%s%s See https://fb.me/react-warning-keys for more information.',\n      currentComponentErrorInfo,\n      childOwner,\n    );\n  }\n  setCurrentlyValidatingElement(null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (let i = 0; i < node.length; i++) {\n      const child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    const iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        const iterator = iteratorFn.call(node);\n        let step;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (__DEV__) {\n    const type = element.type;\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n    const name = getComponentName(type);\n    let propTypes;\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (\n      typeof type === 'object' &&\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        type.$$typeof === REACT_MEMO_TYPE)\n    ) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(\n        propTypes,\n        element.props,\n        'prop',\n        name,\n        ReactDebugCurrentFrame.getStackAddendum,\n      );\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n      console.error(\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\n        name || 'Unknown',\n      );\n    }\n    if (\n      typeof type.getDefaultProps === 'function' &&\n      !type.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps is only used on classic React.createClass ' +\n          'definitions. Use a static property named `defaultProps` instead.',\n      );\n    }\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  if (__DEV__) {\n    setCurrentlyValidatingElement(fragment);\n\n    const keys = Object.keys(fragment.props);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== 'children' && key !== 'key') {\n        console.error(\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\n            'React.Fragment can only have `key` and `children` props.',\n          key,\n        );\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nexport function jsxWithValidation(\n  type,\n  props,\n  key,\n  isStaticChildren,\n  source,\n  self,\n) {\n  const validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    let info = '';\n    if (\n      type === undefined ||\n      (typeof type === 'object' &&\n        type !== null &&\n        Object.keys(type).length === 0)\n    ) {\n      info +=\n        ' You likely forgot to export your component from the file ' +\n        \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    const sourceInfo = getSourceInfoErrorAddendum(source);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    let typeString;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = `<${getComponentName(type.type) || 'Unknown'} />`;\n      info =\n        ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    if (__DEV__) {\n      console.error(\n        'React.jsx: type is invalid -- expected a string (for ' +\n          'built-in components) or a class/function (for composite ' +\n          'components) but got: %s.%s',\n        typeString,\n        info,\n      );\n    }\n  }\n\n  const element = jsxDEV(type, props, key, source, self);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n  if (validType) {\n    const children = props.children;\n    if (children !== undefined) {\n      if (isStaticChildren) {\n        if (Array.isArray(children)) {\n          for (let i = 0; i < children.length; i++) {\n            validateChildKeys(children[i], type);\n          }\n\n          if (Object.freeze) {\n            Object.freeze(children);\n          }\n        } else {\n          if (__DEV__) {\n            console.error(\n              'React.jsx: Static children should always be an array. ' +\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\n                'Use the Babel transform instead.',\n            );\n          }\n        }\n      } else {\n        validateChildKeys(children, type);\n      }\n    }\n  }\n\n  if (__DEV__) {\n    if (warnAboutSpreadingKeyToJSX) {\n      if (hasOwnProperty.call(props, 'key')) {\n        console.error(\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\n            'Explicitly pass a key after spreading props in your JSX call. ' +\n            'E.g. <%s {...props} key={key} />',\n          getComponentName(type) || 'ComponentName',\n        );\n      }\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\n// These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\nexport function jsxWithValidationStatic(type, props, key) {\n  return jsxWithValidation(type, props, key, true);\n}\n\nexport function jsxWithValidationDynamic(type, props, key) {\n  return jsxWithValidation(type, props, key, false);\n}\n\nexport function createElementWithValidation(type, props, children) {\n  const validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    let info = '';\n    if (\n      type === undefined ||\n      (typeof type === 'object' &&\n        type !== null &&\n        Object.keys(type).length === 0)\n    ) {\n      info +=\n        ' You likely forgot to export your component from the file ' +\n        \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    const sourceInfo = getSourceInfoErrorAddendumForProps(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    let typeString;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = `<${getComponentName(type.type) || 'Unknown'} />`;\n      info =\n        ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    if (__DEV__) {\n      console.error(\n        'React.createElement: type is invalid -- expected a string (for ' +\n          'built-in components) or a class/function (for composite ' +\n          'components) but got: %s.%s',\n        typeString,\n        info,\n      );\n    }\n  }\n\n  const element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (let i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nlet didWarnAboutDeprecatedCreateFactory = false;\n\nexport function createFactoryWithValidation(type) {\n  const validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  if (__DEV__) {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n      console.warn(\n        'React.createFactory() is deprecated and will be removed in ' +\n          'a future major release. Consider using JSX ' +\n          'or use React.createElement() directly instead.',\n      );\n    }\n    // Legacy hook: remove it\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function() {\n        console.warn(\n          'Factory.type is deprecated. Access the class directly ' +\n            'before passing it to createFactory.',\n        );\n        Object.defineProperty(this, 'type', {\n          value: type,\n        });\n        return type;\n      },\n    });\n  }\n\n  return validatedFactory;\n}\n\nexport function cloneElementWithValidation(element, props, children) {\n  const newElement = cloneElement.apply(this, arguments);\n  for (let i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport assign from 'object-assign';\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\nimport IsSomeRendererActing from './IsSomeRendererActing';\n\nconst ReactSharedInternals = {\n  ReactCurrentDispatcher,\n  ReactCurrentBatchConfig,\n  ReactCurrentOwner,\n  IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign,\n};\n\nif (__DEV__) {\n  Object.assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {},\n  });\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\n\nconst IsSomeRendererActing = {\n  current: (false: boolean),\n};\nexport default IsSomeRendererActing;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nexport let hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const frozenObject = Object.freeze({});\n    const testMap = new Map([[frozenObject, null]]);\n    const testSet = new Set([frozenObject]);\n    // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {\n  ReactFundamentalImpl,\n  ReactFundamentalComponent,\n} from 'shared/ReactTypes';\nimport {REACT_FUNDAMENTAL_TYPE} from 'shared/ReactSymbols';\nimport {hasBadMapPolyfill} from './hasBadMapPolyfill';\n\nexport default function createFundamentalComponent<C, H>(\n  impl: ReactFundamentalImpl<C, H>,\n): ReactFundamentalComponent<C, H> {\n  // We use responder as a Map key later on. When we have a bad\n  // polyfill, then we can't use it as a key as the polyfill tries\n  // to add a property to the object.\n  if (__DEV__ && !hasBadMapPolyfill) {\n    Object.freeze(impl);\n  }\n  const fundamantalComponent = {\n    $$typeof: REACT_FUNDAMENTAL_TYPE,\n    impl,\n  };\n  if (__DEV__) {\n    Object.freeze(fundamantalComponent);\n  }\n  return fundamantalComponent;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {ReactEventResponder} from 'shared/ReactTypes';\nimport {REACT_RESPONDER_TYPE} from 'shared/ReactSymbols';\nimport {hasBadMapPolyfill} from './hasBadMapPolyfill';\n\nexport default function createEventResponder<E, C>(\n  displayName: string,\n  responderConfig: Object,\n): ReactEventResponder<E, C> {\n  const {\n    getInitialState,\n    onEvent,\n    onMount,\n    onUnmount,\n    onRootEvent,\n    rootEventTypes,\n    targetEventTypes,\n    targetPortalPropagation,\n  } = responderConfig;\n  const eventResponder = {\n    $$typeof: REACT_RESPONDER_TYPE,\n    displayName,\n    getInitialState: getInitialState || null,\n    onEvent: onEvent || null,\n    onMount: onMount || null,\n    onRootEvent: onRootEvent || null,\n    onUnmount: onUnmount || null,\n    rootEventTypes: rootEventTypes || null,\n    targetEventTypes: targetEventTypes || null,\n    targetPortalPropagation: targetPortalPropagation || false,\n  };\n  // We use responder as a Map key later on. When we have a bad\n  // polyfill, then we can't use it as a key as the polyfill tries\n  // to add a property to the object.\n  if (__DEV__ && !hasBadMapPolyfill) {\n    Object.freeze(eventResponder);\n  }\n  return eventResponder;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {ReactScope} from 'shared/ReactTypes';\nimport {REACT_SCOPE_TYPE} from 'shared/ReactSymbols';\n\nexport default function createScope(): ReactScope {\n  const scopeComponent = {\n    $$typeof: REACT_SCOPE_TYPE,\n  };\n  if (__DEV__) {\n    Object.freeze(scopeComponent);\n  }\n  return scopeComponent;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement as createElementProd,\n  createFactory as createFactoryProd,\n  cloneElement as cloneElementProd,\n  isValidElement,\n  jsx as jsxProd,\n} from './ReactElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport forwardRef from './forwardRef';\nimport memo from './memo';\nimport block from './block';\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  useResponder,\n  useTransition,\n  useDeferredValue,\n} from './ReactHooks';\nimport {withSuspenseConfig} from './ReactBatchConfig';\nimport {\n  createElementWithValidation,\n  createFactoryWithValidation,\n  cloneElementWithValidation,\n  jsxWithValidation,\n  jsxWithValidationStatic,\n  jsxWithValidationDynamic,\n} from './ReactElementValidator';\nimport ReactSharedInternals from './ReactSharedInternals';\nimport createFundamental from 'shared/createFundamentalComponent';\nimport createResponder from 'shared/createEventResponder';\nimport createScope from 'shared/createScope';\n\n// TODO: Move this branching into the other module instead and just re-export.\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\n\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\n// we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\n\nconst Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n\nexport {\n  Children,\n  createRef,\n  Component,\n  PureComponent,\n  createContext,\n  forwardRef,\n  lazy,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  REACT_FRAGMENT_TYPE as Fragment,\n  REACT_PROFILER_TYPE as Profiler,\n  REACT_STRICT_MODE_TYPE as StrictMode,\n  REACT_SUSPENSE_TYPE as Suspense,\n  createElement,\n  cloneElement,\n  isValidElement,\n  ReactVersion as version,\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  // Deprecated behind disableCreateFactory\n  createFactory,\n  // Concurrent Mode\n  useTransition,\n  useDeferredValue,\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n  withSuspenseConfig as unstable_withSuspenseConfig,\n  // enableBlocksAPI\n  block,\n  // enableDeprecatedFlareAPI\n  useResponder as DEPRECATED_useResponder,\n  createResponder as DEPRECATED_createResponder,\n  // enableFundamentalAPI\n  createFundamental as unstable_createFundamental,\n  // enableScopeAPI\n  createScope as unstable_createScope,\n  // enableJSXTransformAPI\n  jsx,\n  jsxs,\n  // TODO: jsxDEV should not be exposed as a name. We might want to move it to a different entry point.\n  jsxDEV,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport invariant from 'shared/invariant';\n\ninvariant(\n  React,\n  'ReactDOM was loaded before React. Make sure you load ' +\n    'the React package before loading ReactDOM.',\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nlet invokeGuardedCallbackImpl = function<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n};\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    const invokeGuardedCallbackDev = function<A, B, C, D, E, F, Context>(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebookincubator/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      invariant(\n        typeof document !== 'undefined',\n        'The `document` global was defined when React was initialized, but is not ' +\n          'defined anymore. This can happen in a test environment if a component ' +\n          'schedules an update from an asynchronous callback, but the test has already ' +\n          'finished running. To solve this, you can either unmount the component at ' +\n          'the end of your test (and ensure that any asynchronous operations get ' +\n          'canceled in `componentWillUnmount`), or you can change the test itself ' +\n          'to be asynchronous.',\n      );\n      const evt = document.createEvent('Event');\n\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      let windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://fb.me/react-crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n    };\n\n    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {invokeGuardedCallbackAndCatchFirstError} from 'shared/ReactErrorUtils';\nimport invariant from 'shared/invariant';\n\nexport let getFiberCurrentPropsFromNode = null;\nexport let getInstanceFromNode = null;\nexport let getNodeFromInstance = null;\n\nexport function setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl,\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n  if (__DEV__) {\n    if (!getNodeFromInstance || !getInstanceFromNode) {\n      console.error(\n        'EventPluginUtils.setComponentTree(...): Injected ' +\n          'module is missing getNodeFromInstance or getInstanceFromNode.',\n      );\n    }\n  }\n}\n\nlet validateEventDispatches;\nif (__DEV__) {\n  validateEventDispatches = function(event) {\n    const dispatchListeners = event._dispatchListeners;\n    const dispatchInstances = event._dispatchInstances;\n\n    const listenersIsArr = Array.isArray(dispatchListeners);\n    const listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n      ? 1\n      : 0;\n\n    const instancesIsArr = Array.isArray(dispatchInstances);\n    const instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n      ? 1\n      : 0;\n\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n      console.error('EventPluginUtils: Invalid `event`.');\n    }\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nexport function executeDispatch(event, listener, inst) {\n  const type = event.type || 'unknown-event';\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nexport function executeDispatchesInOrder(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nexport function executeDispatchesInOrderStopAtTrue(event) {\n  const ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nexport function executeDirectDispatch(event) {\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  const dispatchListener = event._dispatchListeners;\n  const dispatchInstance = event._dispatchInstances;\n  invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.',\n  );\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  const res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nexport function hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DispatchConfig} from './ReactSyntheticEventType';\nimport type {\n  AnyNativeEvent,\n  PluginName,\n  PluginModule,\n} from './PluginModuleType';\n\nimport invariant from 'shared/invariant';\n\ntype NamesToPlugins = {[key: PluginName]: PluginModule<AnyNativeEvent>, ...};\ntype EventPluginOrder = null | Array<PluginName>;\n\n/**\n * Injectable ordering of event plugins.\n */\nlet eventPluginOrder: EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nconst namesToPlugins: NamesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering(): void {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (const pluginName in namesToPlugins) {\n    const pluginModule = namesToPlugins[pluginName];\n    const pluginIndex = eventPluginOrder.indexOf(pluginName);\n    invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n        'the plugin ordering, `%s`.',\n      pluginName,\n    );\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n    invariant(\n      pluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n        'method, but `%s` does not.',\n      pluginName,\n    );\n    plugins[pluginIndex] = pluginModule;\n    const publishedEvents = pluginModule.eventTypes;\n    for (const eventName in publishedEvents) {\n      invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName,\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName,\n      );\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(\n  dispatchConfig: DispatchConfig,\n  pluginModule: PluginModule<AnyNativeEvent>,\n  eventName: string,\n): boolean {\n  invariant(\n    !eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginRegistry: More than one plugin attempted to publish the same ' +\n      'event name, `%s`.',\n    eventName,\n  );\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  const phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (const phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        const phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName,\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName,\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(\n  registrationName: string,\n  pluginModule: PluginModule<AnyNativeEvent>,\n  eventName: string,\n): void {\n  invariant(\n    !registrationNameModules[registrationName],\n    'EventPluginRegistry: More than one plugin attempted to publish the same ' +\n      'registration name, `%s`.',\n    registrationName,\n  );\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n */\n\n/**\n * Ordered list of injected plugins.\n */\nexport const plugins = [];\n\n/**\n * Mapping from event name to dispatch config\n */\nexport const eventNameDispatchConfigs = {};\n\n/**\n * Mapping from registration name to plugin module\n */\nexport const registrationNameModules = {};\n\n/**\n * Mapping from registration name to event name\n */\nexport const registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\nexport const possibleRegistrationNames = __DEV__ ? {} : (null: any);\n// Trust the developer to only use possibleRegistrationNames in __DEV__\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n */\nexport function injectEventPluginOrder(\n  injectedEventPluginOrder: EventPluginOrder,\n): void {\n  invariant(\n    !eventPluginOrder,\n    'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.',\n  );\n  // Clone the ordering so it cannot be dynamically mutated.\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n\n/**\n * Injects plugins to be used by plugin event system. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n */\nexport function injectEventPluginsByName(\n  injectedNamesToPlugins: NamesToPlugins,\n): void {\n  let isOrderingDirty = false;\n  for (const pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n    const pluginModule = injectedNamesToPlugins[pluginName];\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      invariant(\n        !namesToPlugins[pluginName],\n        'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n        pluginName,\n      );\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const canUseDOM: boolean = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nimport {\n  getInstanceFromNode,\n  getFiberCurrentPropsFromNode,\n} from './EventPluginUtils';\n\n// Use to restore controlled state after a change event has fired.\n\nlet restoreImpl = null;\nlet restoreTarget = null;\nlet restoreQueue = null;\n\nfunction restoreStateOfTarget(target) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  const internalInstance = getInstanceFromNode(target);\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n  invariant(\n    typeof restoreImpl === 'function',\n    'setRestoreImplementation() needs to be called to handle a target for controlled ' +\n      'events. This error is likely caused by a bug in React. Please file an issue.',\n  );\n  const stateNode = internalInstance.stateNode;\n  // Guard against Fiber being unmounted.\n  if (stateNode) {\n    const props = getFiberCurrentPropsFromNode(stateNode);\n    restoreImpl(internalInstance.stateNode, internalInstance.type, props);\n  }\n}\n\nexport function setRestoreImplementation(\n  impl: (domElement: Element, tag: string, props: Object) => void,\n): void {\n  restoreImpl = impl;\n}\n\nexport function enqueueStateRestore(target: EventTarget): void {\n  if (restoreTarget) {\n    if (restoreQueue) {\n      restoreQueue.push(target);\n    } else {\n      restoreQueue = [target];\n    }\n  } else {\n    restoreTarget = target;\n  }\n}\n\nexport function needsStateRestore(): boolean {\n  return restoreTarget !== null || restoreQueue !== null;\n}\n\nexport function restoreStateIfNeeded() {\n  if (!restoreTarget) {\n    return;\n  }\n  const target = restoreTarget;\n  const queuedTargets = restoreQueue;\n  restoreTarget = null;\n  restoreQueue = null;\n\n  restoreStateOfTarget(target);\n  if (queuedTargets) {\n    for (let i = 0; i < queuedTargets.length; i++) {\n      restoreStateOfTarget(queuedTargets[i]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  needsStateRestore,\n  restoreStateIfNeeded,\n} from './ReactControlledComponent';\n\nimport {enableDeprecatedFlareAPI} from 'shared/ReactFeatureFlags';\nimport {invokeGuardedCallbackAndCatchFirstError} from 'shared/ReactErrorUtils';\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nlet batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\nlet discreteUpdatesImpl = function(fn, a, b, c, d) {\n  return fn(a, b, c, d);\n};\nlet flushDiscreteUpdatesImpl = function() {};\nlet batchedEventUpdatesImpl = batchedUpdatesImpl;\n\nlet isInsideEventHandler = false;\nlet isBatchingEventUpdates = false;\n\nfunction finishEventHandler() {\n  // Here we wait until all updates have propagated, which is important\n  // when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  // Then we restore state of any controlled component.\n  const controlledComponentsHavePendingUpdates = needsStateRestore();\n  if (controlledComponentsHavePendingUpdates) {\n    // If a controlled event was fired, we may need to restore the state of\n    // the DOM node back to the controlled value. This is necessary when React\n    // bails out of the update without touching the DOM.\n    flushDiscreteUpdatesImpl();\n    restoreStateIfNeeded();\n  }\n}\n\nexport function batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n  isInsideEventHandler = true;\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n    finishEventHandler();\n  }\n}\n\nexport function batchedEventUpdates(fn, a, b) {\n  if (isBatchingEventUpdates) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(a, b);\n  }\n  isBatchingEventUpdates = true;\n  try {\n    return batchedEventUpdatesImpl(fn, a, b);\n  } finally {\n    isBatchingEventUpdates = false;\n    finishEventHandler();\n  }\n}\n\n// This is for the React Flare event system\nexport function executeUserEventHandler(fn: any => void, value: any): void {\n  const previouslyInEventHandler = isInsideEventHandler;\n  try {\n    isInsideEventHandler = true;\n    const type = typeof value === 'object' && value !== null ? value.type : '';\n    invokeGuardedCallbackAndCatchFirstError(type, fn, undefined, value);\n  } finally {\n    isInsideEventHandler = previouslyInEventHandler;\n  }\n}\n\nexport function discreteUpdates(fn, a, b, c, d) {\n  const prevIsInsideEventHandler = isInsideEventHandler;\n  isInsideEventHandler = true;\n  try {\n    return discreteUpdatesImpl(fn, a, b, c, d);\n  } finally {\n    isInsideEventHandler = prevIsInsideEventHandler;\n    if (!isInsideEventHandler) {\n      finishEventHandler();\n    }\n  }\n}\n\nlet lastFlushedEventTimeStamp = 0;\nexport function flushDiscreteUpdatesIfNeeded(timeStamp: number) {\n  // event.timeStamp isn't overly reliable due to inconsistencies in\n  // how different browsers have historically provided the time stamp.\n  // Some browsers provide high-resolution time stamps for all events,\n  // some provide low-resolution time stamps for all events. FF < 52\n  // even mixes both time stamps together. Some browsers even report\n  // negative time stamps or time stamps that are 0 (iOS9) in some cases.\n  // Given we are only comparing two time stamps with equality (!==),\n  // we are safe from the resolution differences. If the time stamp is 0\n  // we bail-out of preventing the flush, which can affect semantics,\n  // such as if an earlier flush removes or adds event listeners that\n  // are fired in the subsequent flush. However, this is the same\n  // behaviour as we had before this change, so the risks are low.\n  if (\n    !isInsideEventHandler &&\n    (!enableDeprecatedFlareAPI ||\n      timeStamp === 0 ||\n      lastFlushedEventTimeStamp !== timeStamp)\n  ) {\n    lastFlushedEventTimeStamp = timeStamp;\n    flushDiscreteUpdatesImpl();\n  }\n}\n\nexport function setBatchingImplementation(\n  _batchedUpdatesImpl,\n  _discreteUpdatesImpl,\n  _flushDiscreteUpdatesImpl,\n  _batchedEventUpdatesImpl,\n) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n  discreteUpdatesImpl = _discreteUpdatesImpl;\n  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;\n  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport {\n  type EventSystemFlags,\n  IS_PASSIVE,\n  PASSIVE_NOT_SUPPORTED,\n} from 'legacy-events/EventSystemFlags';\nimport type {AnyNativeEvent} from 'legacy-events/PluginModuleType';\nimport {HostComponent, ScopeComponent, HostPortal} from 'shared/ReactWorkTags';\nimport type {EventPriority} from 'shared/ReactTypes';\nimport type {\n  ReactDOMEventResponder,\n  ReactDOMEventResponderInstance,\n  ReactDOMResponderContext,\n  ReactDOMResponderEvent,\n} from 'shared/ReactDOMTypes';\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\nimport {\n  batchedEventUpdates,\n  discreteUpdates,\n  flushDiscreteUpdatesIfNeeded,\n  executeUserEventHandler,\n} from 'legacy-events/ReactGenericBatching';\nimport {enqueueStateRestore} from 'legacy-events/ReactControlledComponent';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport {enableDeprecatedFlareAPI} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\n\nimport {getClosestInstanceFromNode} from '../client/ReactDOMComponentTree';\nimport {\n  ContinuousEvent,\n  UserBlockingEvent,\n  DiscreteEvent,\n} from 'shared/ReactTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nconst {\n  unstable_UserBlockingPriority: UserBlockingPriority,\n  unstable_runWithPriority: runWithPriority,\n} = Scheduler;\n\nexport let listenToResponderEventTypesImpl;\n\nexport function setListenToResponderEventTypes(\n  _listenToResponderEventTypesImpl: Function,\n) {\n  listenToResponderEventTypesImpl = _listenToResponderEventTypesImpl;\n}\n\nconst rootEventTypesToEventResponderInstances: Map<\n  DOMTopLevelEventType | string,\n  Set<ReactDOMEventResponderInstance>,\n> = new Map();\n\ntype PropagationBehavior = 0 | 1;\n\nconst DoNotPropagateToNextResponder = 0;\nconst PropagateToNextResponder = 1;\n\nlet currentTimeStamp = 0;\nlet currentInstance: null | ReactDOMEventResponderInstance = null;\nlet currentDocument: null | Document = null;\nlet currentPropagationBehavior: PropagationBehavior = DoNotPropagateToNextResponder;\n\nconst eventResponderContext: ReactDOMResponderContext = {\n  dispatchEvent(\n    eventValue: any,\n    eventListener: any => void,\n    eventPriority: EventPriority,\n  ): void {\n    validateResponderContext();\n    validateEventValue(eventValue);\n    switch (eventPriority) {\n      case DiscreteEvent: {\n        flushDiscreteUpdatesIfNeeded(currentTimeStamp);\n        discreteUpdates(() =>\n          executeUserEventHandler(eventListener, eventValue),\n        );\n        break;\n      }\n      case UserBlockingEvent: {\n        runWithPriority(UserBlockingPriority, () =>\n          executeUserEventHandler(eventListener, eventValue),\n        );\n        break;\n      }\n      case ContinuousEvent: {\n        executeUserEventHandler(eventListener, eventValue);\n        break;\n      }\n    }\n  },\n  isTargetWithinResponder(target: null | Element | Document): boolean {\n    validateResponderContext();\n    if (target != null) {\n      let fiber = getClosestInstanceFromNode(target);\n      const responderFiber = ((currentInstance: any): ReactDOMEventResponderInstance)\n        .fiber;\n\n      while (fiber !== null) {\n        if (fiber === responderFiber || fiber.alternate === responderFiber) {\n          return true;\n        }\n        fiber = fiber.return;\n      }\n    }\n    return false;\n  },\n  isTargetWithinResponderScope(target: null | Element | Document): boolean {\n    validateResponderContext();\n    const componentInstance = ((currentInstance: any): ReactDOMEventResponderInstance);\n    const responder = componentInstance.responder;\n\n    if (target != null) {\n      let fiber = getClosestInstanceFromNode(target);\n      const responderFiber = ((currentInstance: any): ReactDOMEventResponderInstance)\n        .fiber;\n\n      while (fiber !== null) {\n        if (fiber === responderFiber || fiber.alternate === responderFiber) {\n          return true;\n        }\n        if (doesFiberHaveResponder(fiber, responder)) {\n          return false;\n        }\n        fiber = fiber.return;\n      }\n    }\n    return false;\n  },\n  isTargetWithinNode(\n    childTarget: Element | Document,\n    parentTarget: Element | Document,\n  ): boolean {\n    validateResponderContext();\n    const childFiber = getClosestInstanceFromNode(childTarget);\n    const parentFiber = getClosestInstanceFromNode(parentTarget);\n\n    if (childFiber != null && parentFiber != null) {\n      const parentAlternateFiber = parentFiber.alternate;\n      let node = childFiber;\n      while (node !== null) {\n        if (node === parentFiber || node === parentAlternateFiber) {\n          return true;\n        }\n        node = node.return;\n      }\n      return false;\n    }\n    // Fallback to DOM APIs\n    return parentTarget.contains(childTarget);\n  },\n  addRootEventTypes(rootEventTypes: Array<string>): void {\n    validateResponderContext();\n    listenToResponderEventTypesImpl(rootEventTypes, currentDocument);\n    for (let i = 0; i < rootEventTypes.length; i++) {\n      const rootEventType = rootEventTypes[i];\n      const eventResponderInstance = ((currentInstance: any): ReactDOMEventResponderInstance);\n      DEPRECATED_registerRootEventType(rootEventType, eventResponderInstance);\n    }\n  },\n  removeRootEventTypes(rootEventTypes: Array<string>): void {\n    validateResponderContext();\n    for (let i = 0; i < rootEventTypes.length; i++) {\n      const rootEventType = rootEventTypes[i];\n      let rootEventResponders = rootEventTypesToEventResponderInstances.get(\n        rootEventType,\n      );\n      let rootEventTypesSet = ((currentInstance: any): ReactDOMEventResponderInstance)\n        .rootEventTypes;\n      if (rootEventTypesSet !== null) {\n        rootEventTypesSet.delete(rootEventType);\n      }\n      if (rootEventResponders !== undefined) {\n        rootEventResponders.delete(\n          ((currentInstance: any): ReactDOMEventResponderInstance),\n        );\n      }\n    }\n  },\n  getActiveDocument,\n  objectAssign: Object.assign,\n  getTimeStamp(): number {\n    validateResponderContext();\n    return currentTimeStamp;\n  },\n  isTargetWithinHostComponent(\n    target: Element | Document,\n    elementType: string,\n  ): boolean {\n    validateResponderContext();\n    let fiber = getClosestInstanceFromNode(target);\n\n    while (fiber !== null) {\n      if (fiber.tag === HostComponent && fiber.type === elementType) {\n        return true;\n      }\n      fiber = fiber.return;\n    }\n    return false;\n  },\n  continuePropagation() {\n    currentPropagationBehavior = PropagateToNextResponder;\n  },\n  enqueueStateRestore,\n  getResponderNode(): Element | null {\n    validateResponderContext();\n    const responderFiber = ((currentInstance: any): ReactDOMEventResponderInstance)\n      .fiber;\n    if (responderFiber.tag === ScopeComponent) {\n      return null;\n    }\n    return responderFiber.stateNode;\n  },\n};\n\nfunction validateEventValue(eventValue: any): void {\n  if (typeof eventValue === 'object' && eventValue !== null) {\n    const {target, type, timeStamp} = eventValue;\n\n    if (target == null || type == null || timeStamp == null) {\n      throw new Error(\n        'context.dispatchEvent: \"target\", \"timeStamp\", and \"type\" fields on event object are required.',\n      );\n    }\n    const showWarning = name => {\n      if (__DEV__) {\n        console.error(\n          '%s is not available on event objects created from event responder modules (React Flare). ' +\n            'Try wrapping in a conditional, i.e. `if (event.type !== \"press\") { event.%s }`',\n          name,\n          name,\n        );\n      }\n    };\n    eventValue.isDefaultPrevented = () => {\n      if (__DEV__) {\n        showWarning('isDefaultPrevented()');\n      }\n    };\n    eventValue.isPropagationStopped = () => {\n      if (__DEV__) {\n        showWarning('isPropagationStopped()');\n      }\n    };\n    // $FlowFixMe: we don't need value, Flow thinks we do\n    Object.defineProperty(eventValue, 'nativeEvent', {\n      get() {\n        if (__DEV__) {\n          showWarning('nativeEvent');\n        }\n      },\n    });\n  }\n}\n\nfunction doesFiberHaveResponder(\n  fiber: Fiber,\n  responder: ReactDOMEventResponder,\n): boolean {\n  const tag = fiber.tag;\n  if (tag === HostComponent || tag === ScopeComponent) {\n    const dependencies = fiber.dependencies;\n    if (dependencies !== null) {\n      const respondersMap = dependencies.responders;\n      if (respondersMap !== null && respondersMap.has(responder)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction getActiveDocument(): Document {\n  return ((currentDocument: any): Document);\n}\n\nfunction createDOMResponderEvent(\n  topLevelType: string,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: Element | Document,\n  passive: boolean,\n): ReactDOMResponderEvent {\n  const {buttons, pointerType} = (nativeEvent: any);\n  let eventPointerType = '';\n\n  if (pointerType !== undefined) {\n    eventPointerType = pointerType;\n  } else if (nativeEvent.key !== undefined) {\n    eventPointerType = 'keyboard';\n  } else if (buttons !== undefined) {\n    eventPointerType = 'mouse';\n  } else if ((nativeEvent: any).changedTouches !== undefined) {\n    eventPointerType = 'touch';\n  }\n\n  return {\n    nativeEvent: nativeEvent,\n    passive,\n    pointerType: eventPointerType,\n    target: nativeEventTarget,\n    type: topLevelType,\n  };\n}\n\nfunction responderEventTypesContainType(\n  eventTypes: Array<string>,\n  type: string,\n  isPassive: boolean,\n): boolean {\n  for (let i = 0, len = eventTypes.length; i < len; i++) {\n    const eventType = eventTypes[i];\n    if (eventType === type || (!isPassive && eventType === type + '_active')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction validateResponderTargetEventTypes(\n  eventType: string,\n  responder: ReactDOMEventResponder,\n  isPassive: boolean,\n): boolean {\n  const {targetEventTypes} = responder;\n  // Validate the target event type exists on the responder\n  if (targetEventTypes !== null) {\n    return responderEventTypesContainType(\n      targetEventTypes,\n      eventType,\n      isPassive,\n    );\n  }\n  return false;\n}\n\nfunction traverseAndHandleEventResponderInstances(\n  topLevelType: string,\n  targetFiber: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: Document | Element,\n  eventSystemFlags: EventSystemFlags,\n): void {\n  const isPassiveEvent = (eventSystemFlags & IS_PASSIVE) !== 0;\n  const isPassiveSupported = (eventSystemFlags & PASSIVE_NOT_SUPPORTED) === 0;\n  const isPassive = isPassiveEvent || !isPassiveSupported;\n\n  // Trigger event responders in this order:\n  // - Bubble target responder phase\n  // - Root responder phase\n\n  const visitedResponders = new Set();\n  const responderEvent = createDOMResponderEvent(\n    topLevelType,\n    nativeEvent,\n    nativeEventTarget,\n    isPassiveEvent,\n  );\n  let node = targetFiber;\n  let insidePortal = false;\n  while (node !== null) {\n    const {dependencies, tag} = node;\n    if (tag === HostPortal) {\n      insidePortal = true;\n    } else if (\n      (tag === HostComponent || tag === ScopeComponent) &&\n      dependencies !== null\n    ) {\n      const respondersMap = dependencies.responders;\n      if (respondersMap !== null) {\n        const responderInstances = Array.from(respondersMap.values());\n        for (let i = 0, length = responderInstances.length; i < length; i++) {\n          const responderInstance = responderInstances[i];\n          const {props, responder, state} = responderInstance;\n          if (\n            !visitedResponders.has(responder) &&\n            validateResponderTargetEventTypes(\n              topLevelType,\n              responder,\n              isPassive,\n            ) &&\n            (!insidePortal || responder.targetPortalPropagation)\n          ) {\n            visitedResponders.add(responder);\n            const onEvent = responder.onEvent;\n            if (onEvent !== null) {\n              currentInstance = responderInstance;\n              onEvent(responderEvent, eventResponderContext, props, state);\n              if (currentPropagationBehavior === PropagateToNextResponder) {\n                visitedResponders.delete(responder);\n                currentPropagationBehavior = DoNotPropagateToNextResponder;\n              }\n            }\n          }\n        }\n      }\n    }\n    node = node.return;\n  }\n  // Root phase\n  const passive = rootEventTypesToEventResponderInstances.get(topLevelType);\n  const rootEventResponderInstances = [];\n  if (passive !== undefined) {\n    rootEventResponderInstances.push(...Array.from(passive));\n  }\n  if (!isPassive) {\n    const active = rootEventTypesToEventResponderInstances.get(\n      topLevelType + '_active',\n    );\n    if (active !== undefined) {\n      rootEventResponderInstances.push(...Array.from(active));\n    }\n  }\n  if (rootEventResponderInstances.length > 0) {\n    const responderInstances = Array.from(rootEventResponderInstances);\n\n    for (let i = 0; i < responderInstances.length; i++) {\n      const responderInstance = responderInstances[i];\n      const {props, responder, state} = responderInstance;\n      const onRootEvent = responder.onRootEvent;\n      if (onRootEvent !== null) {\n        currentInstance = responderInstance;\n        onRootEvent(responderEvent, eventResponderContext, props, state);\n      }\n    }\n  }\n}\n\nexport function mountEventResponder(\n  responder: ReactDOMEventResponder,\n  responderInstance: ReactDOMEventResponderInstance,\n  props: Object,\n  state: Object,\n) {\n  const onMount = responder.onMount;\n  if (onMount !== null) {\n    const previousInstance = currentInstance;\n    currentInstance = responderInstance;\n    try {\n      onMount(eventResponderContext, props, state);\n    } finally {\n      currentInstance = previousInstance;\n    }\n  }\n}\n\nexport function unmountEventResponder(\n  responderInstance: ReactDOMEventResponderInstance,\n): void {\n  const responder = ((responderInstance.responder: any): ReactDOMEventResponder);\n  const onUnmount = responder.onUnmount;\n  if (onUnmount !== null) {\n    let {props, state} = responderInstance;\n    const previousInstance = currentInstance;\n    currentInstance = responderInstance;\n    try {\n      onUnmount(eventResponderContext, props, state);\n    } finally {\n      currentInstance = previousInstance;\n    }\n  }\n  const rootEventTypesSet = responderInstance.rootEventTypes;\n  if (rootEventTypesSet !== null) {\n    const rootEventTypes = Array.from(rootEventTypesSet);\n\n    for (let i = 0; i < rootEventTypes.length; i++) {\n      const topLevelEventType = rootEventTypes[i];\n      let rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(\n        topLevelEventType,\n      );\n      if (rootEventResponderInstances !== undefined) {\n        rootEventResponderInstances.delete(responderInstance);\n      }\n    }\n  }\n}\n\nfunction validateResponderContext(): void {\n  invariant(\n    currentInstance !== null,\n    'An event responder context was used outside of an event cycle.',\n  );\n}\n\nexport function DEPRECATED_dispatchEventForResponderEventSystem(\n  topLevelType: string,\n  targetFiber: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: Document | Element,\n  eventSystemFlags: EventSystemFlags,\n): void {\n  if (enableDeprecatedFlareAPI) {\n    const previousInstance = currentInstance;\n    const previousTimeStamp = currentTimeStamp;\n    const previousDocument = currentDocument;\n    const previousPropagationBehavior = currentPropagationBehavior;\n    currentPropagationBehavior = DoNotPropagateToNextResponder;\n    // nodeType 9 is DOCUMENT_NODE\n    currentDocument =\n      (nativeEventTarget: any).nodeType === 9\n        ? ((nativeEventTarget: any): Document)\n        : (nativeEventTarget: any).ownerDocument;\n    // We might want to control timeStamp another way here\n    currentTimeStamp = (nativeEvent: any).timeStamp;\n    try {\n      batchedEventUpdates(() => {\n        traverseAndHandleEventResponderInstances(\n          topLevelType,\n          targetFiber,\n          nativeEvent,\n          nativeEventTarget,\n          eventSystemFlags,\n        );\n      });\n    } finally {\n      currentInstance = previousInstance;\n      currentTimeStamp = previousTimeStamp;\n      currentDocument = previousDocument;\n      currentPropagationBehavior = previousPropagationBehavior;\n    }\n  }\n}\n\nexport function addRootEventTypesForResponderInstance(\n  responderInstance: ReactDOMEventResponderInstance,\n  rootEventTypes: Array<string>,\n): void {\n  for (let i = 0; i < rootEventTypes.length; i++) {\n    const rootEventType = rootEventTypes[i];\n    DEPRECATED_registerRootEventType(rootEventType, responderInstance);\n  }\n}\n\nfunction DEPRECATED_registerRootEventType(\n  rootEventType: string,\n  eventResponderInstance: ReactDOMEventResponderInstance,\n): void {\n  let rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(\n    rootEventType,\n  );\n  if (rootEventResponderInstances === undefined) {\n    rootEventResponderInstances = new Set();\n    rootEventTypesToEventResponderInstances.set(\n      rootEventType,\n      rootEventResponderInstances,\n    );\n  }\n  let rootEventTypesSet = eventResponderInstance.rootEventTypes;\n  if (rootEventTypesSet === null) {\n    rootEventTypesSet = eventResponderInstance.rootEventTypes = new Set();\n  }\n  invariant(\n    !rootEventTypesSet.has(rootEventType),\n    'addRootEventTypes() found a duplicate root event ' +\n      'type of \"%s\". This might be because the event type exists in the event responder \"rootEventTypes\" ' +\n      'array or because of a previous addRootEventTypes() using this root event type.',\n    rootEventType,\n  );\n  rootEventTypesSet.add(rootEventType);\n  rootEventResponderInstances.add(eventResponderInstance);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const FundamentalComponent = 20;\nexport const ScopeComponent = 21;\nexport const Block = 22;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableDeprecatedFlareAPI} from 'shared/ReactFeatureFlags';\n\ntype PropertyType = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nexport const RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the whitelist are presumed to have this type.\nexport const STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nexport const BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nexport const BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nexport const OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nexport const NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nexport const POSITIVE_NUMERIC = 6;\n\nexport type PropertyInfo = {|\n  +acceptsBooleans: boolean,\n  +attributeName: string,\n  +attributeNamespace: string | null,\n  +mustUseProperty: boolean,\n  +propertyName: string,\n  +type: PropertyType,\n  +sanitizeURL: boolean,\n|};\n\n/* eslint-disable max-len */\nexport const ATTRIBUTE_NAME_START_CHAR =\n  ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nexport const ATTRIBUTE_NAME_CHAR =\n  ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\nexport const ID_ATTRIBUTE_NAME = 'data-reactid';\nexport const ROOT_ATTRIBUTE_NAME = 'data-reactroot';\nexport const VALID_ATTRIBUTE_NAME_REGEX = new RegExp(\n  '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$',\n);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst illegalAttributeNameCache = {};\nconst validatedAttributeNameCache = {};\n\nexport function isAttributeNameSafe(attributeName: string): boolean {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  if (__DEV__) {\n    console.error('Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nexport function shouldIgnoreAttribute(\n  name: string,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function shouldRemoveAttributeWithWarning(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol': // eslint-disable-line\n      return true;\n    case 'boolean': {\n      if (isCustomComponentTag) {\n        return false;\n      }\n      if (propertyInfo !== null) {\n        return !propertyInfo.acceptsBooleans;\n      } else {\n        const prefix = name.toLowerCase().slice(0, 5);\n        return prefix !== 'data-' && prefix !== 'aria-';\n      }\n    }\n    default:\n      return false;\n  }\n}\n\nexport function shouldRemoveAttribute(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (\n    shouldRemoveAttributeWithWarning(\n      name,\n      value,\n      propertyInfo,\n      isCustomComponentTag,\n    )\n  ) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (propertyInfo !== null) {\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || (value: any) < 1;\n    }\n  }\n  return false;\n}\n\nexport function getPropertyInfo(name: string): PropertyInfo | null {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(\n  name: string,\n  type: PropertyType,\n  mustUseProperty: boolean,\n  attributeName: string,\n  attributeNamespace: string | null,\n  sanitizeURL: boolean,\n) {\n  this.acceptsBooleans =\n    type === BOOLEANISH_STRING ||\n    type === BOOLEAN ||\n    type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nconst properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\nconst reservedProps = [\n  'children',\n  'dangerouslySetInnerHTML',\n  // TODO: This prevents the assignment of defaultValue to regular\n  // elements (not just inputs). Now that ReactDOMInput assigns to the\n  // defaultValue property -- do we need this?\n  'defaultValue',\n  'defaultChecked',\n  'innerHTML',\n  'suppressContentEditableWarning',\n  'suppressHydrationWarning',\n  'style',\n];\nif (enableDeprecatedFlareAPI) {\n  reservedProps.push('DEPRECATED_flareListeners');\n}\n\nreservedProps.forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    RESERVED,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n  ['acceptCharset', 'accept-charset'],\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['httpEquiv', 'http-equiv'],\n].forEach(([name, attributeName]) => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n  'autoReverse',\n  'externalResourcesRequired',\n  'focusable',\n  'preserveAlpha',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are HTML boolean attributes.\n[\n  'allowFullScreen',\n  'async',\n  // Note: there is a special case that prevents it from being written to the DOM\n  // on the client side because the browsers are inconsistent. Instead we call focus().\n  'autoFocus',\n  'autoPlay',\n  'controls',\n  'default',\n  'defer',\n  'disabled',\n  'disablePictureInPicture',\n  'formNoValidate',\n  'hidden',\n  'loop',\n  'noModule',\n  'noValidate',\n  'open',\n  'playsInline',\n  'readOnly',\n  'required',\n  'reversed',\n  'scoped',\n  'seamless',\n  // Microdata\n  'itemScope',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n  'checked',\n  // Note: `option.selected` is not updated if `select.multiple` is\n  // disabled with `removeAttribute`. We have special logic for handling this.\n  'multiple',\n  'muted',\n  'selected',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    true, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n  'capture',\n  'download',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    OVERLOADED_BOOLEAN,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are HTML attributes that must be positive numbers.\n[\n  'cols',\n  'rows',\n  'size',\n  'span',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    POSITIVE_NUMERIC,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    NUMERIC,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\nconst capitalize = token => token[1].toUpperCase();\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML whitelist.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n[\n  'accent-height',\n  'alignment-baseline',\n  'arabic-form',\n  'baseline-shift',\n  'cap-height',\n  'clip-path',\n  'clip-rule',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'dominant-baseline',\n  'enable-background',\n  'fill-opacity',\n  'fill-rule',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'glyph-name',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'horiz-adv-x',\n  'horiz-origin-x',\n  'image-rendering',\n  'letter-spacing',\n  'lighting-color',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'overline-position',\n  'overline-thickness',\n  'paint-order',\n  'panose-1',\n  'pointer-events',\n  'rendering-intent',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'strikethrough-position',\n  'strikethrough-thickness',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'underline-position',\n  'underline-thickness',\n  'unicode-bidi',\n  'unicode-range',\n  'units-per-em',\n  'v-alphabetic',\n  'v-hanging',\n  'v-ideographic',\n  'v-mathematical',\n  'vector-effect',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'word-spacing',\n  'writing-mode',\n  'xmlns:xlink',\n  'x-height',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// String SVG attributes with the xlink namespace.\n[\n  'xlink:actuate',\n  'xlink:arcrole',\n  'xlink:role',\n  'xlink:show',\n  'xlink:title',\n  'xlink:type',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/1999/xlink',\n    false, // sanitizeURL\n  );\n});\n\n// String SVG attributes with the xml namespace.\n[\n  'xml:base',\n  'xml:lang',\n  'xml:space',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/XML/1998/namespace',\n    false, // sanitizeURL\n  );\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n  );\n});\n\n// These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\nconst xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord(\n  'xlinkHref',\n  STRING,\n  false, // mustUseProperty\n  'xlink:href',\n  'http://www.w3.org/1999/xlink',\n  true, // sanitizeURL\n);\n\n['src', 'href', 'action', 'formAction'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    true, // sanitizeURL\n  );\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// import * as React from 'react';\n\n// const ReactSharedInternals =\n//   React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nimport ReactSharedInternals from '../react/src/ReactSharedInternals';\n\n// Prevent newer renderers from RTE when used with older react package versions.\n// Current owner and dispatcher used to share the same ref,\n// but PR #14548 split them out to better support the react-debug-tools package.\nif (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {\n  ReactSharedInternals.ReactCurrentDispatcher = {\n    current: null,\n  };\n}\nif (!ReactSharedInternals.hasOwnProperty('ReactCurrentBatchConfig')) {\n  ReactSharedInternals.ReactCurrentBatchConfig = {\n    suspense: null,\n  };\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {disableJavaScriptURLs} from 'shared/ReactFeatureFlags';\n\nlet ReactDebugCurrentFrame = ((null: any): {getStackAddendum(): string, ...});\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\n// A javascript: URL can contain leading C0 control or \\u0020 SPACE,\n// and any newline or tab are filtered out as if they're not part of the URL.\n// https://url.spec.whatwg.org/#url-parsing\n// Tab or newline are defined as \\r\\n\\t:\n// https://infra.spec.whatwg.org/#ascii-tab-or-newline\n// A C0 control is a code point in the range \\u0000 NULL to \\u001F\n// INFORMATION SEPARATOR ONE, inclusive:\n// https://infra.spec.whatwg.org/#c0-control-or-space\n\n/* eslint-disable max-len */\nconst isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\n\nlet didWarn = false;\n\nfunction sanitizeURL(url: string) {\n  if (disableJavaScriptURLs) {\n    invariant(\n      !isJavaScriptProtocol.test(url),\n      'React has blocked a javascript: URL as a security precaution.%s',\n      __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n    );\n  } else if (__DEV__) {\n    if (!didWarn && isJavaScriptProtocol.test(url)) {\n      didWarn = true;\n      console.error(\n        'A future version of React will block javascript: URLs as a security precaution. ' +\n          'Use event handlers instead if you can. If you need to generate unsafe HTML try ' +\n          'using dangerouslySetInnerHTML instead. React was passed %s.',\n        JSON.stringify(url),\n      );\n    }\n  }\n}\n\nexport default sanitizeURL;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n  isAttributeNameSafe,\n  BOOLEAN,\n  OVERLOADED_BOOLEAN,\n} from '../shared/DOMProperty';\nimport sanitizeURL from '../shared/sanitizeURL';\nimport {\n  disableJavaScriptURLs,\n  enableTrustedTypesIntegration,\n} from 'shared/ReactFeatureFlags';\n\nimport type {PropertyInfo} from '../shared/DOMProperty';\n\n/**\n * Get the value for a property on a node. Only used in DEV for SSR validation.\n * The \"expected\" argument is used as a hint of what the expected value is.\n * Some properties have multiple equivalent values.\n */\nexport function getValueForProperty(\n  node: Element,\n  name: string,\n  expected: mixed,\n  propertyInfo: PropertyInfo,\n): mixed {\n  if (__DEV__) {\n    if (propertyInfo.mustUseProperty) {\n      const {propertyName} = propertyInfo;\n      return (node: any)[propertyName];\n    } else {\n      if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {\n        // If we haven't fully disabled javascript: URLs, and if\n        // the hydration is successful of a javascript: URL, we\n        // still want to warn on the client.\n        sanitizeURL('' + (expected: any));\n      }\n\n      const attributeName = propertyInfo.attributeName;\n\n      let stringValue = null;\n\n      if (propertyInfo.type === OVERLOADED_BOOLEAN) {\n        if (node.hasAttribute(attributeName)) {\n          const value = node.getAttribute(attributeName);\n          if (value === '') {\n            return true;\n          }\n          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n            return value;\n          }\n          if (value === '' + (expected: any)) {\n            return expected;\n          }\n          return value;\n        }\n      } else if (node.hasAttribute(attributeName)) {\n        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n          // We had an attribute but shouldn't have had one, so read it\n          // for the error message.\n          return node.getAttribute(attributeName);\n        }\n        if (propertyInfo.type === BOOLEAN) {\n          // If this was a boolean, it doesn't matter what the value is\n          // the fact that we have it is the same as the expected.\n          return expected;\n        }\n        // Even if this property uses a namespace we use getAttribute\n        // because we assume its namespaced name is the same as our config.\n        // To use getAttributeNS we need the local name which we don't have\n        // in our config atm.\n        stringValue = node.getAttribute(attributeName);\n      }\n\n      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n        return stringValue === null ? expected : stringValue;\n      } else if (stringValue === '' + (expected: any)) {\n        return expected;\n      } else {\n        return stringValue;\n      }\n    }\n  }\n}\n\n/**\n * Get the value for a attribute on a node. Only used in DEV for SSR validation.\n * The third argument is used as a hint of what the expected value is. Some\n * attributes have multiple equivalent values.\n */\nexport function getValueForAttribute(\n  node: Element,\n  name: string,\n  expected: mixed,\n): mixed {\n  if (__DEV__) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (!node.hasAttribute(name)) {\n      return expected === undefined ? undefined : null;\n    }\n    const value = node.getAttribute(name);\n    if (value === '' + (expected: any)) {\n      return expected;\n    }\n    return value;\n  }\n}\n\n/**\n * Sets the value for a property on a node.\n *\n * @param {DOMElement} node\n * @param {string} name\n * @param {*} value\n */\nexport function setValueForProperty(\n  node: Element,\n  name: string,\n  value: mixed,\n  isCustomComponentTag: boolean,\n) {\n  const propertyInfo = getPropertyInfo(name);\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n    return;\n  }\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n    value = null;\n  }\n  // If the prop isn't in the special list, treat it as a simple attribute.\n  if (isCustomComponentTag || propertyInfo === null) {\n    if (isAttributeNameSafe(name)) {\n      const attributeName = name;\n      if (value === null) {\n        node.removeAttribute(attributeName);\n      } else {\n        node.setAttribute(\n          attributeName,\n          enableTrustedTypesIntegration ? (value: any) : '' + (value: any),\n        );\n      }\n    }\n    return;\n  }\n  const {mustUseProperty} = propertyInfo;\n  if (mustUseProperty) {\n    const {propertyName} = propertyInfo;\n    if (value === null) {\n      const {type} = propertyInfo;\n      (node: any)[propertyName] = type === BOOLEAN ? false : '';\n    } else {\n      // Contrary to `setAttribute`, object properties are properly\n      // `toString`ed by IE8/9.\n      (node: any)[propertyName] = value;\n    }\n    return;\n  }\n  // The rest are treated as attributes with special cases.\n  const {attributeName, attributeNamespace} = propertyInfo;\n  if (value === null) {\n    node.removeAttribute(attributeName);\n  } else {\n    const {type} = propertyInfo;\n    let attributeValue;\n    if (type === BOOLEAN || (type === OVERLOADED_BOOLEAN && value === true)) {\n      // If attribute type is boolean, we know for sure it won't be an execution sink\n      // and we won't require Trusted Type here.\n      attributeValue = '';\n    } else {\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\n      // ('' + value) makes it output the correct toString()-value.\n      if (enableTrustedTypesIntegration) {\n        attributeValue = (value: any);\n      } else {\n        attributeValue = '' + (value: any);\n      }\n      if (propertyInfo.sanitizeURL) {\n        sanitizeURL(attributeValue.toString());\n      }\n    }\n    if (attributeNamespace) {\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n    } else {\n      node.setAttribute(attributeName, attributeValue);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  HostRoot,\n  HostPortal,\n  HostText,\n  Fragment,\n  ContextProvider,\n  ContextConsumer,\n} from 'shared/ReactWorkTags';\nimport describeComponentFrame from 'shared/describeComponentFrame';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction describeFiber(fiber: Fiber): string {\n  switch (fiber.tag) {\n    case HostRoot:\n    case HostPortal:\n    case HostText:\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n      return '';\n    default:\n      const owner = fiber._debugOwner;\n      const source = fiber._debugSource;\n      const name = getComponentName(fiber.type);\n      let ownerName = null;\n      if (owner) {\n        ownerName = getComponentName(owner.type);\n      }\n      return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  let info = '';\n  let node = workInProgress;\n  do {\n    info += describeFiber(node);\n    node = node.return;\n  } while (node);\n  return info;\n}\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentName(owner.type);\n    }\n  }\n  return null;\n}\n\nexport function getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport opaque type ToStringValue =\n  | boolean\n  | number\n  | Object\n  | string\n  | null\n  | void;\n\n// Flow does not allow string concatenation of most non-string types. To work\n// around this limitation, we use an opaque type that can only be obtained by\n// passing the value through getToStringValue first.\nexport function toString(value: ToStringValue): string {\n  return '' + (value: any);\n}\n\nexport function getToStringValue(value: mixed): ToStringValue {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'object':\n    case 'string':\n    case 'undefined':\n      return value;\n    default:\n      // function, symbol are assigned as empty strings\n      return '';\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport checkPropTypes from 'prop-types/checkPropTypes';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {enableDeprecatedFlareAPI} from 'shared/ReactFeatureFlags';\n\nlet ReactDebugCurrentFrame = null;\n\nconst ReactControlledValuePropTypes = {\n  checkPropTypes: null,\n};\n\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\n  const hasReadOnlyValue = {\n    button: true,\n    checkbox: true,\n    image: true,\n    hidden: true,\n    radio: true,\n    reset: true,\n    submit: true,\n  };\n\n  const propTypes = {\n    value: function(props, propName, componentName) {\n      if (\n        hasReadOnlyValue[props.type] ||\n        props.onChange ||\n        props.readOnly ||\n        props.disabled ||\n        props[propName] == null ||\n        (enableDeprecatedFlareAPI && props.DEPRECATED_flareListeners)\n      ) {\n        return null;\n      }\n      return new Error(\n        'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.',\n      );\n    },\n    checked: function(props, propName, componentName) {\n      if (\n        props.onChange ||\n        props.readOnly ||\n        props.disabled ||\n        props[propName] == null ||\n        (enableDeprecatedFlareAPI && props.DEPRECATED_flareListeners)\n      ) {\n        return null;\n      }\n      return new Error(\n        'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.',\n      );\n    },\n  };\n\n  /**\n   * Provide a linked `value` attribute for controlled forms. You should not use\n   * this outside of the ReactDOM controlled form components.\n   */\n  ReactControlledValuePropTypes.checkPropTypes = function(tagName, props) {\n    checkPropTypes(\n      propTypes,\n      props,\n      'prop',\n      tagName,\n      ReactDebugCurrentFrame.getStackAddendum,\n    );\n  };\n}\n\nexport default ReactControlledValuePropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ntype ValueTracker = {|\n  getValue(): string,\n  setValue(value: string): void,\n  stopTracking(): void,\n|};\ntype WrapperState = {_valueTracker?: ?ValueTracker, ...};\ntype ElementWithValueTracker = HTMLInputElement & WrapperState;\n\nfunction isCheckable(elem: HTMLInputElement) {\n  const type = elem.type;\n  const nodeName = elem.nodeName;\n  return (\n    nodeName &&\n    nodeName.toLowerCase() === 'input' &&\n    (type === 'checkbox' || type === 'radio')\n  );\n}\n\nfunction getTracker(node: ElementWithValueTracker) {\n  return node._valueTracker;\n}\n\nfunction detachTracker(node: ElementWithValueTracker) {\n  node._valueTracker = null;\n}\n\nfunction getValueFromNode(node: HTMLInputElement): string {\n  let value = '';\n  if (!node) {\n    return value;\n  }\n\n  if (isCheckable(node)) {\n    value = node.checked ? 'true' : 'false';\n  } else {\n    value = node.value;\n  }\n\n  return value;\n}\n\nfunction trackValueOnNode(node: any): ?ValueTracker {\n  const valueField = isCheckable(node) ? 'checked' : 'value';\n  const descriptor = Object.getOwnPropertyDescriptor(\n    node.constructor.prototype,\n    valueField,\n  );\n\n  let currentValue = '' + node[valueField];\n\n  // if someone has already defined a value or Safari, then bail\n  // and don't track value will cause over reporting of changes,\n  // but it's better then a hard failure\n  // (needed for certain tests that spyOn input values and Safari)\n  if (\n    node.hasOwnProperty(valueField) ||\n    typeof descriptor === 'undefined' ||\n    typeof descriptor.get !== 'function' ||\n    typeof descriptor.set !== 'function'\n  ) {\n    return;\n  }\n  const {get, set} = descriptor;\n  Object.defineProperty(node, valueField, {\n    configurable: true,\n    get: function() {\n      return get.call(this);\n    },\n    set: function(value) {\n      currentValue = '' + value;\n      set.call(this, value);\n    },\n  });\n  // We could've passed this the first time\n  // but it triggers a bug in IE11 and Edge 14/15.\n  // Calling defineProperty() again should be equivalent.\n  // https://github.com/facebook/react/issues/11768\n  Object.defineProperty(node, valueField, {\n    enumerable: descriptor.enumerable,\n  });\n\n  const tracker = {\n    getValue() {\n      return currentValue;\n    },\n    setValue(value) {\n      currentValue = '' + value;\n    },\n    stopTracking() {\n      detachTracker(node);\n      delete node[valueField];\n    },\n  };\n  return tracker;\n}\n\nexport function track(node: ElementWithValueTracker) {\n  if (getTracker(node)) {\n    return;\n  }\n\n  // TODO: Once it's just Fiber we can move this to node._wrapperState\n  node._valueTracker = trackValueOnNode(node);\n}\n\nexport function updateValueIfChanged(node: ElementWithValueTracker) {\n  if (!node) {\n    return false;\n  }\n\n  const tracker = getTracker(node);\n  // if there is no tracker at this point it's unlikely\n  // that trying again will succeed\n  if (!tracker) {\n    return true;\n  }\n\n  const lastValue = tracker.getValue();\n  const nextValue = getValueFromNode(node);\n  if (nextValue !== lastValue) {\n    tracker.setValue(nextValue);\n    return true;\n  }\n  return false;\n}\n\nexport function stopTracking(node: ElementWithValueTracker) {\n  const tracker = getTracker(node);\n  if (tracker) {\n    tracker.stopTracking();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport invariant from 'shared/invariant';\n\nimport {setValueForProperty} from './DOMPropertyOperations';\nimport {getFiberCurrentPropsFromNode} from './ReactDOMComponentTree';\nimport {getToStringValue, toString} from './ToStringValue';\nimport ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\nimport {updateValueIfChanged} from './inputValueTracking';\nimport {disableInputAttributeSyncing} from 'shared/ReactFeatureFlags';\n\nimport type {ToStringValue} from './ToStringValue';\n\ntype InputWithWrapperState = HTMLInputElement & {\n  _wrapperState: {\n    initialValue: ToStringValue,\n    initialChecked: ?boolean,\n    controlled?: boolean,\n    ...\n  },\n  ...\n};\n\nlet didWarnValueDefaultValue = false;\nlet didWarnCheckedDefaultChecked = false;\nlet didWarnControlledToUncontrolled = false;\nlet didWarnUncontrolledToControlled = false;\n\nfunction isControlled(props) {\n  const usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  const checked = props.checked;\n\n  const hostProps = Object.assign({}, props, {\n    defaultChecked: undefined,\n    defaultValue: undefined,\n    value: undefined,\n    checked: checked != null ? checked : node._wrapperState.initialChecked,\n  });\n\n  return hostProps;\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  if (__DEV__) {\n    ReactControlledValuePropTypes.checkPropTypes('input', props);\n\n    if (\n      props.checked !== undefined &&\n      props.defaultChecked !== undefined &&\n      !didWarnCheckedDefaultChecked\n    ) {\n      console.error(\n        '%s contains an input of type %s with both checked and defaultChecked props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the checked prop, or the defaultChecked prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n        props.type,\n      );\n      didWarnCheckedDefaultChecked = true;\n    }\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValueDefaultValue\n    ) {\n      console.error(\n        '%s contains an input of type %s with both value and defaultValue props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n        props.type,\n      );\n      didWarnValueDefaultValue = true;\n    }\n  }\n\n  const node = ((element: any): InputWithWrapperState);\n  const defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n\n  node._wrapperState = {\n    initialChecked:\n      props.checked != null ? props.checked : props.defaultChecked,\n    initialValue: getToStringValue(\n      props.value != null ? props.value : defaultValue,\n    ),\n    controlled: isControlled(props),\n  };\n}\n\nexport function updateChecked(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  const checked = props.checked;\n  if (checked != null) {\n    setValueForProperty(node, 'checked', checked, false);\n  }\n}\n\nexport function updateWrapper(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  if (__DEV__) {\n    const controlled = isControlled(props);\n\n    if (\n      !node._wrapperState.controlled &&\n      controlled &&\n      !didWarnUncontrolledToControlled\n    ) {\n      console.error(\n        'A component is changing an uncontrolled input of type %s to be controlled. ' +\n          'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +\n          'Decide between using a controlled or uncontrolled input ' +\n          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',\n        props.type,\n      );\n      didWarnUncontrolledToControlled = true;\n    }\n    if (\n      node._wrapperState.controlled &&\n      !controlled &&\n      !didWarnControlledToUncontrolled\n    ) {\n      console.error(\n        'A component is changing a controlled input of type %s to be uncontrolled. ' +\n          'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +\n          'Decide between using a controlled or uncontrolled input ' +\n          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',\n        props.type,\n      );\n      didWarnControlledToUncontrolled = true;\n    }\n  }\n\n  updateChecked(element, props);\n\n  const value = getToStringValue(props.value);\n  const type = props.type;\n\n  if (value != null) {\n    if (type === 'number') {\n      if (\n        (value === 0 && node.value === '') ||\n        // We explicitly want to coerce to number here if possible.\n        // eslint-disable-next-line\n        node.value != (value: any)\n      ) {\n        node.value = toString((value: any));\n      }\n    } else if (node.value !== toString((value: any))) {\n      node.value = toString((value: any));\n    }\n  } else if (type === 'submit' || type === 'reset') {\n    // Submit/reset inputs need the attribute removed completely to avoid\n    // blank-text buttons.\n    node.removeAttribute('value');\n    return;\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the value attribute, React only assigns a new value\n    // whenever the defaultValue React prop has changed. When not present,\n    // React does nothing\n    if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  } else {\n    // When syncing the value attribute, the value comes from a cascade of\n    // properties:\n    //  1. The value React property\n    //  2. The defaultValue React property\n    //  3. Otherwise there should be no change\n    if (props.hasOwnProperty('value')) {\n      setDefaultValue(node, props.type, value);\n    } else if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the attribute is directly\n    // controllable from the defaultValue React property. It needs to be\n    // updated as new props come in.\n    if (props.defaultChecked == null) {\n      node.removeAttribute('checked');\n    } else {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, it only changes when it needs\n    // to be removed, such as transitioning from a checkbox into a text input\n    if (props.checked == null && props.defaultChecked != null) {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  }\n}\n\nexport function postMountWrapper(\n  element: Element,\n  props: Object,\n  isHydrating: boolean,\n) {\n  const node = ((element: any): InputWithWrapperState);\n\n  // Do not assign value if it is already set. This prevents user text input\n  // from being lost during SSR hydration.\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n    const type = props.type;\n    const isButton = type === 'submit' || type === 'reset';\n\n    // Avoid setting value attribute on submit/reset inputs as it overrides the\n    // default value provided by the browser. See: #12872\n    if (isButton && (props.value === undefined || props.value === null)) {\n      return;\n    }\n\n    const initialValue = toString(node._wrapperState.initialValue);\n\n    // Do not assign value if it is already set. This prevents user text input\n    // from being lost during SSR hydration.\n    if (!isHydrating) {\n      if (disableInputAttributeSyncing) {\n        const value = getToStringValue(props.value);\n\n        // When not syncing the value attribute, the value property points\n        // directly to the React prop. Only assign it if it exists.\n        if (value != null) {\n          // Always assign on buttons so that it is possible to assign an\n          // empty string to clear button text.\n          //\n          // Otherwise, do not re-assign the value property if is empty. This\n          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from\n          // prematurely marking required inputs as invalid. Equality is compared\n          // to the current value in case the browser provided value is not an\n          // empty string.\n          if (isButton || value !== node.value) {\n            node.value = toString(value);\n          }\n        }\n      } else {\n        // When syncing the value attribute, the value property should use\n        // the wrapperState._initialValue property. This uses:\n        //\n        //   1. The value React property when present\n        //   2. The defaultValue React property when present\n        //   3. An empty string\n        if (initialValue !== node.value) {\n          node.value = initialValue;\n        }\n      }\n    }\n\n    if (disableInputAttributeSyncing) {\n      // When not syncing the value attribute, assign the value attribute\n      // directly from the defaultValue React property (when present)\n      const defaultValue = getToStringValue(props.defaultValue);\n      if (defaultValue != null) {\n        node.defaultValue = toString(defaultValue);\n      }\n    } else {\n      // Otherwise, the value attribute is synchronized to the property,\n      // so we assign defaultValue to the same thing as the value property\n      // assignment step above.\n      node.defaultValue = initialValue;\n    }\n  }\n\n  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n  // this is needed to work around a chrome bug where setting defaultChecked\n  // will sometimes influence the value of checked (even after detachment).\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n  // We need to temporarily unset name to avoid disrupting radio button groups.\n  const name = node.name;\n  if (name !== '') {\n    node.name = '';\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the checked property\n    // never gets assigned. It must be manually set. We don't want\n    // to do this when hydrating so that existing user input isn't\n    // modified\n    if (!isHydrating) {\n      updateChecked(element, props);\n    }\n\n    // Only assign the checked attribute if it is defined. This saves\n    // a DOM write when controlling the checked attribute isn't needed\n    // (text inputs, submit/reset)\n    if (props.hasOwnProperty('defaultChecked')) {\n      node.defaultChecked = !node.defaultChecked;\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, both the checked property and\n    // attribute are assigned at the same time using defaultChecked. This uses:\n    //\n    //   1. The checked React property when present\n    //   2. The defaultChecked React property when present\n    //   3. Otherwise, false\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !!node._wrapperState.initialChecked;\n  }\n\n  if (name !== '') {\n    node.name = name;\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  updateWrapper(node, props);\n  updateNamedCousins(node, props);\n}\n\nfunction updateNamedCousins(rootNode, props) {\n  const name = props.name;\n  if (props.type === 'radio' && name != null) {\n    let queryRoot: Element = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = ((queryRoot.parentNode: any): Element);\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form. It might not even be in the\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\n    // miss anything.\n    const group = queryRoot.querySelectorAll(\n      'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]',\n    );\n\n    for (let i = 0; i < group.length; i++) {\n      const otherNode = ((group[i]: any): HTMLInputElement);\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      const otherProps = getFiberCurrentPropsFromNode(otherNode);\n      invariant(\n        otherProps,\n        'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.',\n      );\n\n      // We need update the tracked value on the named cousin since the value\n      // was changed but the input saw no event or value set\n      updateValueIfChanged(otherNode);\n\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      updateWrapper(otherNode, otherProps);\n    }\n  }\n}\n\n// In Chrome, assigning defaultValue to certain input types triggers input validation.\n// For number inputs, the display value loses trailing decimal points. For email inputs,\n// Chrome raises \"The specified value <x> is not a valid email address\".\n//\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\n// when the user is inputting text\n//\n// https://github.com/facebook/react/issues/7253\nexport function setDefaultValue(\n  node: InputWithWrapperState,\n  type: ?string,\n  value: *,\n) {\n  if (\n    // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n    type !== 'number' ||\n    node.ownerDocument.activeElement !== node\n  ) {\n    if (value == null) {\n      node.defaultValue = toString(node._wrapperState.initialValue);\n    } else if (node.defaultValue !== toString(value)) {\n      node.defaultValue = toString(value);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport {getToStringValue, toString} from './ToStringValue';\n\nlet didWarnSelectedSetOnOption = false;\nlet didWarnInvalidChild = false;\n\nfunction flattenChildren(children) {\n  let content = '';\n\n  // Flatten children. We'll warn if they are invalid\n  // during validateProps() which runs for hydration too.\n  // Note that this would throw on non-element objects.\n  // Elements are stringified (which is normally irrelevant\n  // but matters for <fbt>).\n  React.Children.forEach(children, function(child) {\n    if (child == null) {\n      return;\n    }\n    content += child;\n    // Note: we don't warn about invalid children here.\n    // Instead, this is done separately below so that\n    // it happens during the hydration codepath too.\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\n\nexport function validateProps(element: Element, props: Object) {\n  if (__DEV__) {\n    // This mirrors the codepath above, but runs for hydration too.\n    // Warn about invalid children here so that client and hydration are consistent.\n    // TODO: this seems like it could cause a DEV-only throw for hydration\n    // if children contains a non-element object. We should try to avoid that.\n    if (typeof props.children === 'object' && props.children !== null) {\n      React.Children.forEach(props.children, function(child) {\n        if (child == null) {\n          return;\n        }\n        if (typeof child === 'string' || typeof child === 'number') {\n          return;\n        }\n        if (typeof child.type !== 'string') {\n          return;\n        }\n        if (!didWarnInvalidChild) {\n          didWarnInvalidChild = true;\n          console.error(\n            'Only strings and numbers are supported as <option> children.',\n          );\n        }\n      });\n    }\n\n    // TODO: Remove support for `selected` in <option>.\n    if (props.selected != null && !didWarnSelectedSetOnOption) {\n      console.error(\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n          'setting `selected` on <option>.',\n      );\n      didWarnSelectedSetOnOption = true;\n    }\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  // value=\"\" should make a value attribute (#6219)\n  if (props.value != null) {\n    element.setAttribute('value', toString(getToStringValue(props.value)));\n  }\n}\n\nexport function getHostProps(element: Element, props: Object) {\n  const hostProps = {children: undefined, ...props};\n  const content = flattenChildren(props.children);\n\n  if (content) {\n    hostProps.children = content;\n  }\n\n  return hostProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\n\nimport ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\nimport {getToStringValue, toString} from './ToStringValue';\n\nlet didWarnValueDefaultValue;\n\nif (__DEV__) {\n  didWarnValueDefaultValue = false;\n}\n\ntype SelectWithWrapperState = HTMLSelectElement & {|\n  _wrapperState: {|wasMultiple: boolean|},\n|};\n\nfunction getDeclarationErrorAddendum() {\n  const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n  if (ownerName) {\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\n  }\n  return '';\n}\n\nconst valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n */\nfunction checkSelectPropTypes(props) {\n  if (__DEV__) {\n    ReactControlledValuePropTypes.checkPropTypes('select', props);\n\n    for (let i = 0; i < valuePropNames.length; i++) {\n      const propName = valuePropNames[i];\n      if (props[propName] == null) {\n        continue;\n      }\n      const isArray = Array.isArray(props[propName]);\n      if (props.multiple && !isArray) {\n        console.error(\n          'The `%s` prop supplied to <select> must be an array if ' +\n            '`multiple` is true.%s',\n          propName,\n          getDeclarationErrorAddendum(),\n        );\n      } else if (!props.multiple && isArray) {\n        console.error(\n          'The `%s` prop supplied to <select> must be a scalar ' +\n            'value if `multiple` is false.%s',\n          propName,\n          getDeclarationErrorAddendum(),\n        );\n      }\n    }\n  }\n}\n\nfunction updateOptions(\n  node: HTMLSelectElement,\n  multiple: boolean,\n  propValue: any,\n  setDefaultSelected: boolean,\n) {\n  type IndexableHTMLOptionsCollection = HTMLOptionsCollection & {\n    [key: number]: HTMLOptionElement,\n    ...,\n  };\n  const options: IndexableHTMLOptionsCollection = node.options;\n\n  if (multiple) {\n    let selectedValues = (propValue: Array<string>);\n    let selectedValue = {};\n    for (let i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n    for (let i = 0; i < options.length; i++) {\n      const selected = selectedValue.hasOwnProperty('$' + options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n      if (selected && setDefaultSelected) {\n        options[i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    let selectedValue = toString(getToStringValue((propValue: any)));\n    let defaultSelected = null;\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        if (setDefaultSelected) {\n          options[i].defaultSelected = true;\n        }\n        return;\n      }\n      if (defaultSelected === null && !options[i].disabled) {\n        defaultSelected = options[i];\n      }\n    }\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  return Object.assign({}, props, {\n    value: undefined,\n  });\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  if (__DEV__) {\n    checkSelectPropTypes(props);\n  }\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple,\n  };\n\n  if (__DEV__) {\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValueDefaultValue\n    ) {\n      console.error(\n        'Select elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled select ' +\n          'element and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n      );\n      didWarnValueDefaultValue = true;\n    }\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  node.multiple = !!props.multiple;\n  const value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\n\nexport function postUpdateWrapper(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  const wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n\n  const value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nimport ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport {getToStringValue, toString} from './ToStringValue';\nimport type {ToStringValue} from './ToStringValue';\n\nimport {disableTextareaChildren} from 'shared/ReactFeatureFlags';\n\nlet didWarnValDefaultVal = false;\n\ntype TextAreaWithWrapperState = HTMLTextAreaElement & {|\n  _wrapperState: {|initialValue: ToStringValue|},\n|};\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  invariant(\n    props.dangerouslySetInnerHTML == null,\n    '`dangerouslySetInnerHTML` does not make sense on <textarea>.',\n  );\n\n  // Always set children to the same thing. In IE9, the selection range will\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\n  // to only set the value if/when the value differs from the node value (which would\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n  // solution. The value can be a boolean or object so that's why it's forced\n  // to be a string.\n  const hostProps = {\n    ...props,\n    value: undefined,\n    defaultValue: undefined,\n    children: toString(node._wrapperState.initialValue),\n  };\n\n  return hostProps;\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  if (__DEV__) {\n    ReactControlledValuePropTypes.checkPropTypes('textarea', props);\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValDefaultVal\n    ) {\n      console.error(\n        '%s contains a textarea with both value and defaultValue props. ' +\n          'Textarea elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled textarea ' +\n          'and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n      );\n      didWarnValDefaultVal = true;\n    }\n  }\n\n  let initialValue = props.value;\n\n  // Only bother fetching default value if we're going to use it\n  if (initialValue == null) {\n    let {children, defaultValue} = props;\n    if (children != null) {\n      if (__DEV__) {\n        console.error(\n          'Use the `defaultValue` or `value` props instead of setting ' +\n            'children on <textarea>.',\n        );\n      }\n      if (!disableTextareaChildren) {\n        invariant(\n          defaultValue == null,\n          'If you supply `defaultValue` on a <textarea>, do not pass children.',\n        );\n        if (Array.isArray(children)) {\n          invariant(\n            children.length <= 1,\n            '<textarea> can only have at most one child.',\n          );\n          children = children[0];\n        }\n\n        defaultValue = children;\n      }\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    initialValue = defaultValue;\n  }\n\n  node._wrapperState = {\n    initialValue: getToStringValue(initialValue),\n  };\n}\n\nexport function updateWrapper(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  const value = getToStringValue(props.value);\n  const defaultValue = getToStringValue(props.defaultValue);\n  if (value != null) {\n    // Cast `value` to a string to ensure the value is set correctly. While\n    // browsers typically do this as necessary, jsdom doesn't.\n    const newValue = toString(value);\n    // To avoid side effects (such as losing text selection), only set value if changed\n    if (newValue !== node.value) {\n      node.value = newValue;\n    }\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\n      node.defaultValue = newValue;\n    }\n  }\n  if (defaultValue != null) {\n    node.defaultValue = toString(defaultValue);\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  // This is in postMount because we need access to the DOM node, which is not\n  // available until after the component has mounted.\n  const textContent = node.textContent;\n\n  // Only set node.value if textContent is equal to the expected\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n  // will populate textContent as well.\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n  if (textContent === node._wrapperState.initialValue) {\n    if (textContent !== '' && textContent !== null) {\n      node.value = textContent;\n    }\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  // DOM component is still mounted; update\n  updateWrapper(element, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nconst MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nexport const Namespaces = {\n  html: HTML_NAMESPACE,\n  mathml: MATH_NAMESPACE,\n  svg: SVG_NAMESPACE,\n};\n\n// Assumes there is no parent namespace.\nexport function getIntrinsicNamespace(type: string): string {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n    case 'math':\n      return MATH_NAMESPACE;\n    default:\n      return HTML_NAMESPACE;\n  }\n}\n\nexport function getChildNamespace(\n  parentNamespace: string | null,\n  type: string,\n): string {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  }\n  // By default, pass namespace below.\n  return parentNamespace;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {Namespaces} from '../shared/DOMNamespaces';\nimport createMicrosoftUnsafeLocalFunction from '../shared/createMicrosoftUnsafeLocalFunction';\nimport {enableTrustedTypesIntegration} from 'shared/ReactFeatureFlags';\n\n// SVG temp container for IE lacking innerHTML\nlet reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nconst setInnerHTML = createMicrosoftUnsafeLocalFunction(function(\n  node: Element,\n  html: {valueOf(): {toString(): string, ...}, ...},\n): void {\n  if (node.namespaceURI === Namespaces.svg) {\n    if (__DEV__) {\n      if (enableTrustedTypesIntegration) {\n        // TODO: reconsider the text of this warning and when it should show\n        // before enabling the feature flag.\n        if (typeof trustedTypes !== 'undefined') {\n          console.error(\n            \"Using 'dangerouslySetInnerHTML' in an svg element with \" +\n              'Trusted Types enabled in an Internet Explorer will cause ' +\n              'the trusted value to be converted to string. Assigning string ' +\n              \"to 'innerHTML' will throw an error if Trusted Types are enforced. \" +\n              \"You can try to wrap your svg element inside a div and use 'dangerouslySetInnerHTML' \" +\n              'on the enclosing div instead.',\n          );\n        }\n      }\n    }\n    if (!('innerHTML' in node)) {\n      // IE does not have innerHTML for SVG nodes, so instead we inject the\n      // new markup in a temp node and then move the child nodes across into\n      // the target node\n      reusableSVGContainer =\n        reusableSVGContainer || document.createElement('div');\n      reusableSVGContainer.innerHTML =\n        '<svg>' + html.valueOf().toString() + '</svg>';\n      const svgNode = reusableSVGContainer.firstChild;\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n      while (svgNode.firstChild) {\n        node.appendChild(svgNode.firstChild);\n      }\n      return;\n    }\n  }\n  node.innerHTML = (html: any);\n});\n\nexport default setInnerHTML;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* globals MSApp */\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\nconst createMicrosoftUnsafeLocalFunction = function(func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function(arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function() {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nexport default createMicrosoftUnsafeLocalFunction;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Set the textContent property of a node. For text updates, it's faster\n * to set the `nodeValue` of the Text node directly instead of using\n * `.textContent` which will remove the existing node and create a new one.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nlet setTextContent = function(node: Element, text: string): void {\n  if (text) {\n    let firstChild = node.firstChild;\n\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      firstChild.nodeType === TEXT_NODE\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nexport default setTextContent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * HTML nodeType values that represent the type of the node\n */\n\nexport const ELEMENT_NODE = 1;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_NODE = 9;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd'),\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nconst prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nlet style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n    }\n  }\n\n  return eventName;\n}\n\nexport default getVendorPrefixedEventName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\n\nimport {\n  unsafeCastStringToDOMTopLevelType,\n  unsafeCastDOMTopLevelTypeToString,\n} from 'legacy-events/TopLevelEventTypes';\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\n\n/**\n * To identify top level events in ReactDOM, we use constants defined by this\n * module. This is the only module that uses the unsafe* methods to express\n * that the constants actually correspond to the browser event names. This lets\n * us save some bundle size by avoiding a top level type -> event name map.\n * The rest of ReactDOM code should import top level types from this file.\n */\nexport const TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\nexport const TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationend'),\n);\nexport const TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationiteration'),\n);\nexport const TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationstart'),\n);\nexport const TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\nexport const TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\nexport const TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType(\n  'canplaythrough',\n);\nexport const TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\nexport const TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\nexport const TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\nexport const TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\nexport const TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType(\n  'compositionend',\n);\nexport const TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType(\n  'compositionstart',\n);\nexport const TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType(\n  'compositionupdate',\n);\nexport const TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType(\n  'contextmenu',\n);\nexport const TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\nexport const TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\nexport const TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\nexport const TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\nexport const TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\nexport const TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\nexport const TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\nexport const TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\nexport const TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\nexport const TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\nexport const TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\nexport const TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\nexport const TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'durationchange',\n);\nexport const TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\nexport const TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\nexport const TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\nexport const TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\nexport const TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\nexport const TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(\n  'gotpointercapture',\n);\nexport const TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\nexport const TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\nexport const TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\nexport const TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\nexport const TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\nexport const TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\nexport const TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\nexport const TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\nexport const TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType(\n  'loadedmetadata',\n);\nexport const TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(\n  'lostpointercapture',\n);\nexport const TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\nexport const TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\nexport const TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\nexport const TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\nexport const TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\nexport const TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\nexport const TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\nexport const TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\nexport const TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\nexport const TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType(\n  'pointercancel',\n);\nexport const TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType(\n  'pointerdown',\n);\nexport const TOP_POINTER_ENTER = unsafeCastStringToDOMTopLevelType(\n  'pointerenter',\n);\nexport const TOP_POINTER_LEAVE = unsafeCastStringToDOMTopLevelType(\n  'pointerleave',\n);\nexport const TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType(\n  'pointermove',\n);\nexport const TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\nexport const TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType(\n  'pointerover',\n);\nexport const TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\nexport const TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\nexport const TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\nexport const TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\nexport const TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\nexport const TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\nexport const TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\nexport const TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'selectionchange',\n);\nexport const TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\nexport const TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\nexport const TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\nexport const TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\nexport const TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\nexport const TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\nexport const TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType(\n  'touchcancel',\n);\nexport const TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\nexport const TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\nexport const TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\nexport const TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('transitionend'),\n);\nexport const TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'volumechange',\n);\nexport const TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\nexport const TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');\n\n// List of events that need to be individually attached to media elements.\n// Note that events in this list will *not* be listened to at the top level\n// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\nexport const mediaEventTypes = [\n  TOP_ABORT,\n  TOP_CAN_PLAY,\n  TOP_CAN_PLAY_THROUGH,\n  TOP_DURATION_CHANGE,\n  TOP_EMPTIED,\n  TOP_ENCRYPTED,\n  TOP_ENDED,\n  TOP_ERROR,\n  TOP_LOADED_DATA,\n  TOP_LOADED_METADATA,\n  TOP_LOAD_START,\n  TOP_PAUSE,\n  TOP_PLAY,\n  TOP_PLAYING,\n  TOP_PROGRESS,\n  TOP_RATE_CHANGE,\n  TOP_SEEKED,\n  TOP_SEEKING,\n  TOP_STALLED,\n  TOP_SUSPEND,\n  TOP_TIME_UPDATE,\n  TOP_VOLUME_CHANGE,\n  TOP_WAITING,\n];\n\nexport function getRawEventName(topLevelType: DOMTopLevelEventType): string {\n  return unsafeCastDOMTopLevelTypeToString(topLevelType);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n// prettier-ignore\nconst elementListenerMap:\n  // $FlowFixMe Work around Flow bug\n  | WeakMap\n  | Map<\n      Document | Element | Node,\n      Map<DOMTopLevelEventType | string, null | (any => void)>,\n    > = new PossiblyWeakMap();\n\nexport function getListenerMapForElement(\n  element: Document | Element | Node,\n): Map<DOMTopLevelEventType | string, null | (any => void)> {\n  let listenerMap = elementListenerMap.get(element);\n  if (listenerMap === undefined) {\n    listenerMap = new Map();\n    elementListenerMap.set(element, listenerMap);\n  }\n  return listenerMap;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternalFiber = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternalFiber;\n}\n\nexport function has(key) {\n  return key._reactInternalFiber !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternalFiber = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type SideEffectTag = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoEffect = /*              */ 0b0000000000000; // 0\nexport const PerformedWork = /*         */ 0b0000000000001; // 1\n\n// You can change the rest (and add more).\nexport const Placement = /*             */ 0b0000000000010; // 2\nexport const Update = /*                */ 0b0000000000100; // 4\nexport const PlacementAndUpdate = /*    */ 0b0000000000110; // 6\nexport const Deletion = /*              */ 0b0000000001000; // 8\nexport const ContentReset = /*          */ 0b0000000010000; // 16\nexport const Callback = /*              */ 0b0000000100000; // 32\nexport const DidCapture = /*            */ 0b0000001000000; // 64\nexport const Ref = /*                   */ 0b0000010000000; // 128\nexport const Snapshot = /*              */ 0b0000100000000; // 256\nexport const Passive = /*               */ 0b0001000000000; // 512\nexport const Hydrating = /*             */ 0b0010000000000; // 1024\nexport const HydratingAndUpdate = /*    */ 0b0010000000100; // 1028\n\n// Passive & Update & Callback & Ref & Snapshot\nexport const LifecycleEffectMask = /*   */ 0b0001110100100; // 932\n\n// Union of all host effects\nexport const HostEffectMask = /*        */ 0b0011111111111; // 2047\n\nexport const Incomplete = /*            */ 0b0100000000000; // 2048\nexport const ShouldCapture = /*         */ 0b1000000000000; // 4096\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\n\nimport invariant from 'shared/invariant';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  FundamentalComponent,\n  SuspenseComponent,\n} from 'shared/ReactWorkTags';\nimport {NoEffect, Placement, Hydrating} from 'shared/ReactSideEffectTags';\nimport {enableFundamentalAPI} from 'shared/ReactFeatureFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.effectTag & (Placement | Hydrating)) !== NoEffect) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(ownerFiber.type) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    getNearestMountedFiber(fiber) === fiber,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  let alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n    invariant(\n      nearestMounted !== null,\n      'Unable to find node on an unmounted component.',\n    );\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    let parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    let parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (\n      node.tag === HostComponent ||\n      node.tag === HostText ||\n      (enableFundamentalAPI && node.tag === FundamentalComponent)\n    ) {\n      return node;\n    } else if (node.child && node.tag !== HostPortal) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto<T>(\n  current: ?(Array<T> | T),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nexport default accumulateInto;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated<T>(\n  arr: ?(Array<T> | T),\n  cb: (elem: T) => void,\n  scope: ?any,\n) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nexport default forEachAccumulated;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport {rethrowCaughtError} from 'shared/ReactErrorUtils';\n\nimport type {ReactSyntheticEvent} from './ReactSyntheticEventType';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\nimport {executeDispatchesInOrder} from './EventPluginUtils';\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nlet eventQueue: ?(Array<ReactSyntheticEvent> | ReactSyntheticEvent) = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nconst executeDispatchesAndRelease = function(event: ReactSyntheticEvent) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nconst executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nexport function runEventsInBatch(\n  events: Array<ReactSyntheticEvent> | ReactSyntheticEvent | null,\n) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  }\n\n  // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n  const processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n  invariant(\n    !eventQueue,\n    'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.',\n  );\n  // This would be a good time to rethrow if any of the event handlers threw.\n  rethrowCaughtError();\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nexport default getEventTarget;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const eventName = 'on' + eventNameSuffix;\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nexport default isEventSupported;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from 'legacy-events/PluginModuleType';\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\nimport type {EventSystemFlags} from 'legacy-events/EventSystemFlags';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {PluginModule} from 'legacy-events/PluginModuleType';\nimport type {ReactSyntheticEvent} from 'legacy-events/ReactSyntheticEventType';\nimport type {TopLevelType} from 'legacy-events/TopLevelEventTypes';\n\nimport {HostRoot, HostComponent, HostText} from 'shared/ReactWorkTags';\nimport {IS_FIRST_ANCESTOR} from 'legacy-events/EventSystemFlags';\nimport {batchedEventUpdates} from 'legacy-events/ReactGenericBatching';\nimport {runEventsInBatch} from 'legacy-events/EventBatching';\nimport {plugins} from 'legacy-events/EventPluginRegistry';\nimport accumulateInto from 'legacy-events/accumulateInto';\nimport {registrationNameDependencies} from 'legacy-events/EventPluginRegistry';\n\nimport getEventTarget from './getEventTarget';\nimport {getClosestInstanceFromNode} from '../client/ReactDOMComponentTree';\nimport {trapCapturedEvent, trapBubbledEvent} from './ReactDOMEventListener';\nimport {getListenerMapForElement} from './DOMEventListenerMap';\nimport isEventSupported from './isEventSupported';\nimport {\n  TOP_BLUR,\n  TOP_CANCEL,\n  TOP_CLOSE,\n  TOP_FOCUS,\n  TOP_INVALID,\n  TOP_RESET,\n  TOP_SCROLL,\n  TOP_SUBMIT,\n  getRawEventName,\n  mediaEventTypes,\n} from './DOMTopLevelEventTypes';\n\n/**\n * Summary of `DOMEventPluginSystem` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactDOMEventListener, which is injected and can therefore support\n *    pluggable event sources. This is the only work that occurs in the main\n *    thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginRegistry`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginRegistry` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginRegistry` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|PluginRegistry|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nconst CALLBACK_BOOKKEEPING_POOL_SIZE = 10;\nconst callbackBookkeepingPool = [];\n\ntype BookKeepingInstance = {|\n  topLevelType: DOMTopLevelEventType | null,\n  eventSystemFlags: EventSystemFlags,\n  nativeEvent: AnyNativeEvent | null,\n  targetInst: Fiber | null,\n  ancestors: Array<Fiber | null>,\n|};\n\nfunction releaseTopLevelCallbackBookKeeping(\n  instance: BookKeepingInstance,\n): void {\n  instance.topLevelType = null;\n  instance.nativeEvent = null;\n  instance.targetInst = null;\n  instance.ancestors.length = 0;\n  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {\n    callbackBookkeepingPool.push(instance);\n  }\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction getTopLevelCallbackBookKeeping(\n  topLevelType: DOMTopLevelEventType,\n  nativeEvent: AnyNativeEvent,\n  targetInst: Fiber | null,\n  eventSystemFlags: EventSystemFlags,\n): BookKeepingInstance {\n  if (callbackBookkeepingPool.length) {\n    const instance = callbackBookkeepingPool.pop();\n    instance.topLevelType = topLevelType;\n    instance.eventSystemFlags = eventSystemFlags;\n    instance.nativeEvent = nativeEvent;\n    instance.targetInst = targetInst;\n    return instance;\n  }\n  return {\n    topLevelType,\n    eventSystemFlags,\n    nativeEvent,\n    targetInst,\n    ancestors: [],\n  };\n}\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findRootContainerNode(inst) {\n  if (inst.tag === HostRoot) {\n    return inst.stateNode.containerInfo;\n  }\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst.return) {\n    inst = inst.return;\n  }\n  if (inst.tag !== HostRoot) {\n    // This can happen if we're in a detached tree.\n    return null;\n  }\n  return inst.stateNode.containerInfo;\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\nfunction extractPluginEvents(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n): Array<ReactSyntheticEvent> | ReactSyntheticEvent | null {\n  let events = null;\n  for (let i = 0; i < plugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    const possiblePlugin: PluginModule<AnyNativeEvent> = plugins[i];\n    if (possiblePlugin) {\n      const extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget,\n        eventSystemFlags,\n      );\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n  return events;\n}\n\nfunction runExtractedPluginEventsInBatch(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n) {\n  const events = extractPluginEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n  );\n  runEventsInBatch(events);\n}\n\nfunction handleTopLevel(bookKeeping: BookKeepingInstance) {\n  let targetInst = bookKeeping.targetInst;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  let ancestor = targetInst;\n  do {\n    if (!ancestor) {\n      const ancestors = bookKeeping.ancestors;\n      ((ancestors: any): Array<Fiber | null>).push(ancestor);\n      break;\n    }\n    const root = findRootContainerNode(ancestor);\n    if (!root) {\n      break;\n    }\n    const tag = ancestor.tag;\n    if (tag === HostComponent || tag === HostText) {\n      bookKeeping.ancestors.push(ancestor);\n    }\n    ancestor = getClosestInstanceFromNode(root);\n  } while (ancestor);\n\n  for (let i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    const eventTarget = getEventTarget(bookKeeping.nativeEvent);\n    const topLevelType = ((bookKeeping.topLevelType: any): DOMTopLevelEventType);\n    const nativeEvent = ((bookKeeping.nativeEvent: any): AnyNativeEvent);\n    let eventSystemFlags = bookKeeping.eventSystemFlags;\n\n    // If this is the first ancestor, we mark it on the system flags\n    if (i === 0) {\n      eventSystemFlags |= IS_FIRST_ANCESTOR;\n    }\n\n    runExtractedPluginEventsInBatch(\n      topLevelType,\n      targetInst,\n      nativeEvent,\n      eventTarget,\n      eventSystemFlags,\n    );\n  }\n}\n\nexport function dispatchEventForLegacyPluginEventSystem(\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  nativeEvent: AnyNativeEvent,\n  targetInst: null | Fiber,\n): void {\n  const bookKeeping = getTopLevelCallbackBookKeeping(\n    topLevelType,\n    nativeEvent,\n    targetInst,\n    eventSystemFlags,\n  );\n\n  try {\n    // Event queue being processed in the same cycle allows\n    // `preventDefault`.\n    batchedEventUpdates(handleTopLevel, bookKeeping);\n  } finally {\n    releaseTopLevelCallbackBookKeeping(bookKeeping);\n  }\n}\n\n/**\n * We listen for bubbled touch events on the document object.\n *\n * Firefox v8.01 (and possibly others) exhibited strange behavior when\n * mounting `onmousemove` events at some node that was not the document\n * element. The symptoms were that if your mouse is not moving over something\n * contained within that mount point (for example on the background) the\n * top-level listeners for `onmousemove` won't be called. However, if you\n * register the `mousemove` on the document object, then it will of course\n * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n * top-level listeners to the document object only, at least for these\n * movement types of events and possibly all events.\n *\n * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n *\n * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n * they bubble to document.\n *\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @param {object} mountAt Container where to mount the listener\n */\nexport function legacyListenToEvent(\n  registrationName: string,\n  mountAt: Document | Element | Node,\n): void {\n  const listenerMap = getListenerMapForElement(mountAt);\n  const dependencies = registrationNameDependencies[registrationName];\n\n  for (let i = 0; i < dependencies.length; i++) {\n    const dependency = dependencies[i];\n    legacyListenToTopLevelEvent(dependency, mountAt, listenerMap);\n  }\n}\n\nexport function legacyListenToTopLevelEvent(\n  topLevelType: DOMTopLevelEventType,\n  mountAt: Document | Element | Node,\n  listenerMap: Map<DOMTopLevelEventType | string, null | (any => void)>,\n): void {\n  if (!listenerMap.has(topLevelType)) {\n    switch (topLevelType) {\n      case TOP_SCROLL:\n        trapCapturedEvent(TOP_SCROLL, mountAt);\n        break;\n      case TOP_FOCUS:\n      case TOP_BLUR:\n        trapCapturedEvent(TOP_FOCUS, mountAt);\n        trapCapturedEvent(TOP_BLUR, mountAt);\n        // We set the flag for a single dependency later in this function,\n        // but this ensures we mark both as attached rather than just one.\n        listenerMap.set(TOP_BLUR, null);\n        listenerMap.set(TOP_FOCUS, null);\n        break;\n      case TOP_CANCEL:\n      case TOP_CLOSE:\n        if (isEventSupported(getRawEventName(topLevelType))) {\n          trapCapturedEvent(topLevelType, mountAt);\n        }\n        break;\n      case TOP_INVALID:\n      case TOP_SUBMIT:\n      case TOP_RESET:\n        // We listen to them on the target DOM elements.\n        // Some of them bubble so we don't want them to fire twice.\n        break;\n      default:\n        // By default, listen on the top level to all non-media events.\n        // Media events don't bubble so adding the listener wouldn't do anything.\n        const isMediaEvent = mediaEventTypes.indexOf(topLevelType) !== -1;\n        if (!isMediaEvent) {\n          trapBubbledEvent(topLevelType, mountAt);\n        }\n        break;\n    }\n    listenerMap.set(topLevelType, null);\n  }\n}\n\nexport function isListeningToAllDependencies(\n  registrationName: string,\n  mountAt: Document | Element,\n): boolean {\n  const listenerMap = getListenerMapForElement(mountAt);\n  const dependencies = registrationNameDependencies[registrationName];\n\n  for (let i = 0; i < dependencies.length; i++) {\n    const dependency = dependencies[i];\n    if (!listenerMap.has(dependency)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type EventSystemFlags = number;\n\nexport const PLUGIN_EVENT_SYSTEM = 1;\nexport const RESPONDER_EVENT_SYSTEM = 1 << 1;\nexport const IS_PASSIVE = 1 << 2;\nexport const IS_ACTIVE = 1 << 3;\nexport const PASSIVE_NOT_SUPPORTED = 1 << 4;\nexport const IS_REPLAYED = 1 << 5;\nexport const IS_FIRST_ANCESTOR = 1 << 6;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from 'legacy-events/PluginModuleType';\nimport type {Container, SuspenseInstance} from '../client/ReactDOMHostConfig';\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\nimport type {EventSystemFlags} from 'legacy-events/EventSystemFlags';\nimport type {FiberRoot} from 'react-reconciler/src/ReactFiberRoot';\n\nimport {\n  enableDeprecatedFlareAPI,\n  enableSelectiveHydration,\n} from 'shared/ReactFeatureFlags';\nimport {\n  unstable_runWithPriority as runWithPriority,\n  unstable_scheduleCallback as scheduleCallback,\n  unstable_NormalPriority as NormalPriority,\n  unstable_getCurrentPriorityLevel as getCurrentPriorityLevel,\n} from 'scheduler';\nimport {\n  getNearestMountedFiber,\n  getContainerFromFiber,\n  getSuspenseInstanceFromFiber,\n} from 'react-reconciler/reflection';\nimport {\n  attemptToDispatchEvent,\n  addResponderEventSystemEvent,\n} from './ReactDOMEventListener';\nimport {getListenerMapForElement} from './DOMEventListenerMap';\nimport {\n  getInstanceFromNode,\n  getClosestInstanceFromNode,\n} from '../client/ReactDOMComponentTree';\nimport {unsafeCastDOMTopLevelTypeToString} from 'legacy-events/TopLevelEventTypes';\nimport {HostRoot, SuspenseComponent} from 'shared/ReactWorkTags';\n\nlet attemptSynchronousHydration: (fiber: Object) => void;\n\nexport function setAttemptSynchronousHydration(fn: (fiber: Object) => void) {\n  attemptSynchronousHydration = fn;\n}\n\nlet attemptUserBlockingHydration: (fiber: Object) => void;\n\nexport function setAttemptUserBlockingHydration(fn: (fiber: Object) => void) {\n  attemptUserBlockingHydration = fn;\n}\n\nlet attemptContinuousHydration: (fiber: Object) => void;\n\nexport function setAttemptContinuousHydration(fn: (fiber: Object) => void) {\n  attemptContinuousHydration = fn;\n}\n\nlet attemptHydrationAtCurrentPriority: (fiber: Object) => void;\n\nexport function setAttemptHydrationAtCurrentPriority(\n  fn: (fiber: Object) => void,\n) {\n  attemptHydrationAtCurrentPriority = fn;\n}\n\n// TODO: Upgrade this definition once we're on a newer version of Flow that\n// has this definition built-in.\ntype PointerEvent = Event & {\n  pointerId: number,\n  relatedTarget: EventTarget | null,\n  ...\n};\n\nimport {\n  TOP_MOUSE_DOWN,\n  TOP_MOUSE_UP,\n  TOP_TOUCH_CANCEL,\n  TOP_TOUCH_END,\n  TOP_TOUCH_START,\n  TOP_AUX_CLICK,\n  TOP_DOUBLE_CLICK,\n  TOP_POINTER_CANCEL,\n  TOP_POINTER_DOWN,\n  TOP_POINTER_UP,\n  TOP_DRAG_END,\n  TOP_DRAG_START,\n  TOP_DROP,\n  TOP_COMPOSITION_END,\n  TOP_COMPOSITION_START,\n  TOP_KEY_DOWN,\n  TOP_KEY_PRESS,\n  TOP_KEY_UP,\n  TOP_INPUT,\n  TOP_TEXT_INPUT,\n  TOP_CLOSE,\n  TOP_CANCEL,\n  TOP_COPY,\n  TOP_CUT,\n  TOP_PASTE,\n  TOP_CLICK,\n  TOP_CHANGE,\n  TOP_CONTEXT_MENU,\n  TOP_RESET,\n  TOP_SUBMIT,\n  TOP_DRAG_ENTER,\n  TOP_DRAG_LEAVE,\n  TOP_MOUSE_OVER,\n  TOP_MOUSE_OUT,\n  TOP_POINTER_OVER,\n  TOP_POINTER_OUT,\n  TOP_GOT_POINTER_CAPTURE,\n  TOP_LOST_POINTER_CAPTURE,\n  TOP_FOCUS,\n  TOP_BLUR,\n} from './DOMTopLevelEventTypes';\nimport {IS_REPLAYED} from 'legacy-events/EventSystemFlags';\nimport {legacyListenToTopLevelEvent} from './DOMLegacyEventPluginSystem';\n\ntype QueuedReplayableEvent = {|\n  blockedOn: null | Container | SuspenseInstance,\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  nativeEvent: AnyNativeEvent,\n  container: Document | Element | Node,\n|};\n\nlet hasScheduledReplayAttempt = false;\n\n// The queue of discrete events to be replayed.\nlet queuedDiscreteEvents: Array<QueuedReplayableEvent> = [];\n\n// Indicates if any continuous event targets are non-null for early bailout.\nlet hasAnyQueuedContinuousEvents: boolean = false;\n// The last of each continuous event type. We only need to replay the last one\n// if the last target was dehydrated.\nlet queuedFocus: null | QueuedReplayableEvent = null;\nlet queuedDrag: null | QueuedReplayableEvent = null;\nlet queuedMouse: null | QueuedReplayableEvent = null;\n// For pointer events there can be one latest event per pointerId.\nlet queuedPointers: Map<number, QueuedReplayableEvent> = new Map();\nlet queuedPointerCaptures: Map<number, QueuedReplayableEvent> = new Map();\n// We could consider replaying selectionchange and touchmoves too.\n\ntype QueuedHydrationTarget = {|\n  blockedOn: null | Container | SuspenseInstance,\n  target: Node,\n  priority: number,\n|};\nlet queuedExplicitHydrationTargets: Array<QueuedHydrationTarget> = [];\n\nexport function hasQueuedDiscreteEvents(): boolean {\n  return queuedDiscreteEvents.length > 0;\n}\n\nexport function hasQueuedContinuousEvents(): boolean {\n  return hasAnyQueuedContinuousEvents;\n}\n\nconst discreteReplayableEvents = [\n  TOP_MOUSE_DOWN,\n  TOP_MOUSE_UP,\n  TOP_TOUCH_CANCEL,\n  TOP_TOUCH_END,\n  TOP_TOUCH_START,\n  TOP_AUX_CLICK,\n  TOP_DOUBLE_CLICK,\n  TOP_POINTER_CANCEL,\n  TOP_POINTER_DOWN,\n  TOP_POINTER_UP,\n  TOP_DRAG_END,\n  TOP_DRAG_START,\n  TOP_DROP,\n  TOP_COMPOSITION_END,\n  TOP_COMPOSITION_START,\n  TOP_KEY_DOWN,\n  TOP_KEY_PRESS,\n  TOP_KEY_UP,\n  TOP_INPUT,\n  TOP_TEXT_INPUT,\n  TOP_CLOSE,\n  TOP_CANCEL,\n  TOP_COPY,\n  TOP_CUT,\n  TOP_PASTE,\n  TOP_CLICK,\n  TOP_CHANGE,\n  TOP_CONTEXT_MENU,\n  TOP_RESET,\n  TOP_SUBMIT,\n];\n\nconst continuousReplayableEvents = [\n  TOP_FOCUS,\n  TOP_BLUR,\n  TOP_DRAG_ENTER,\n  TOP_DRAG_LEAVE,\n  TOP_MOUSE_OVER,\n  TOP_MOUSE_OUT,\n  TOP_POINTER_OVER,\n  TOP_POINTER_OUT,\n  TOP_GOT_POINTER_CAPTURE,\n  TOP_LOST_POINTER_CAPTURE,\n];\n\nexport function isReplayableDiscreteEvent(\n  eventType: DOMTopLevelEventType,\n): boolean {\n  return discreteReplayableEvents.indexOf(eventType) > -1;\n}\n\nfunction trapReplayableEventForDocument(\n  topLevelType: DOMTopLevelEventType,\n  document: Document,\n  listenerMap: Map<DOMTopLevelEventType | string, null | (any => void)>,\n) {\n  legacyListenToTopLevelEvent(topLevelType, document, listenerMap);\n  if (enableDeprecatedFlareAPI) {\n    // Trap events for the responder system.\n    const topLevelTypeString = unsafeCastDOMTopLevelTypeToString(topLevelType);\n    // TODO: Ideally we shouldn't need these to be active but\n    // if we only have a passive listener, we at least need it\n    // to still pretend to be active so that Flare gets those\n    // events.\n    const activeEventKey = topLevelTypeString + '_active';\n    if (!listenerMap.has(activeEventKey)) {\n      const listener = addResponderEventSystemEvent(\n        document,\n        topLevelTypeString,\n        false,\n      );\n      listenerMap.set(activeEventKey, listener);\n    }\n  }\n}\n\nexport function eagerlyTrapReplayableEvents(\n  container: Container,\n  document: Document,\n) {\n  const listenerMapForDoc = getListenerMapForElement(document);\n  // Discrete\n  discreteReplayableEvents.forEach(topLevelType => {\n    trapReplayableEventForDocument(topLevelType, document, listenerMapForDoc);\n  });\n  // Continuous\n  continuousReplayableEvents.forEach(topLevelType => {\n    trapReplayableEventForDocument(topLevelType, document, listenerMapForDoc);\n  });\n}\n\nfunction createQueuedReplayableEvent(\n  blockedOn: null | Container | SuspenseInstance,\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  container: Document | Element | Node,\n  nativeEvent: AnyNativeEvent,\n): QueuedReplayableEvent {\n  return {\n    blockedOn,\n    topLevelType,\n    eventSystemFlags: eventSystemFlags | IS_REPLAYED,\n    nativeEvent,\n    container,\n  };\n}\n\nexport function queueDiscreteEvent(\n  blockedOn: null | Container | SuspenseInstance,\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  container: Document | Element | Node,\n  nativeEvent: AnyNativeEvent,\n): void {\n  const queuedEvent = createQueuedReplayableEvent(\n    blockedOn,\n    topLevelType,\n    eventSystemFlags,\n    container,\n    nativeEvent,\n  );\n  queuedDiscreteEvents.push(queuedEvent);\n  if (enableSelectiveHydration) {\n    if (queuedDiscreteEvents.length === 1) {\n      // If this was the first discrete event, we might be able to\n      // synchronously unblock it so that preventDefault still works.\n      while (queuedEvent.blockedOn !== null) {\n        let fiber = getInstanceFromNode(queuedEvent.blockedOn);\n        if (fiber === null) {\n          break;\n        }\n        attemptSynchronousHydration(fiber);\n        if (queuedEvent.blockedOn === null) {\n          // We got unblocked by hydration. Let's try again.\n          replayUnblockedEvents();\n          // If we're reblocked, on an inner boundary, we might need\n          // to attempt hydrating that one.\n          continue;\n        } else {\n          // We're still blocked from hydration, we have to give up\n          // and replay later.\n          break;\n        }\n      }\n    }\n  }\n}\n\n// Resets the replaying for this type of continuous event to no event.\nexport function clearIfContinuousEvent(\n  topLevelType: DOMTopLevelEventType,\n  nativeEvent: AnyNativeEvent,\n): void {\n  switch (topLevelType) {\n    case TOP_FOCUS:\n    case TOP_BLUR:\n      queuedFocus = null;\n      break;\n    case TOP_DRAG_ENTER:\n    case TOP_DRAG_LEAVE:\n      queuedDrag = null;\n      break;\n    case TOP_MOUSE_OVER:\n    case TOP_MOUSE_OUT:\n      queuedMouse = null;\n      break;\n    case TOP_POINTER_OVER:\n    case TOP_POINTER_OUT: {\n      let pointerId = ((nativeEvent: any): PointerEvent).pointerId;\n      queuedPointers.delete(pointerId);\n      break;\n    }\n    case TOP_GOT_POINTER_CAPTURE:\n    case TOP_LOST_POINTER_CAPTURE: {\n      let pointerId = ((nativeEvent: any): PointerEvent).pointerId;\n      queuedPointerCaptures.delete(pointerId);\n      break;\n    }\n  }\n}\n\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent: null | QueuedReplayableEvent,\n  blockedOn: null | Container | SuspenseInstance,\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  container: Document | Element | Node,\n  nativeEvent: AnyNativeEvent,\n): QueuedReplayableEvent {\n  if (\n    existingQueuedEvent === null ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  ) {\n    let queuedEvent = createQueuedReplayableEvent(\n      blockedOn,\n      topLevelType,\n      eventSystemFlags,\n      container,\n      nativeEvent,\n    );\n    if (blockedOn !== null) {\n      let fiber = getInstanceFromNode(blockedOn);\n      if (fiber !== null) {\n        // Attempt to increase the priority of this target.\n        attemptContinuousHydration(fiber);\n      }\n    }\n    return queuedEvent;\n  }\n  // If we have already queued this exact event, then it's because\n  // the different event systems have different DOM event listeners.\n  // We can accumulate the flags and store a single event to be\n  // replayed.\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  return existingQueuedEvent;\n}\n\nexport function queueIfContinuousEvent(\n  blockedOn: null | Container | SuspenseInstance,\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  container: Document | Element | Node,\n  nativeEvent: AnyNativeEvent,\n): boolean {\n  // These set relatedTarget to null because the replayed event will be treated as if we\n  // moved from outside the window (no target) onto the target once it hydrates.\n  // Instead of mutating we could clone the event.\n  switch (topLevelType) {\n    case TOP_FOCUS: {\n      const focusEvent = ((nativeEvent: any): FocusEvent);\n      queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n        queuedFocus,\n        blockedOn,\n        topLevelType,\n        eventSystemFlags,\n        container,\n        focusEvent,\n      );\n      return true;\n    }\n    case TOP_DRAG_ENTER: {\n      const dragEvent = ((nativeEvent: any): DragEvent);\n      queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n        queuedDrag,\n        blockedOn,\n        topLevelType,\n        eventSystemFlags,\n        container,\n        dragEvent,\n      );\n      return true;\n    }\n    case TOP_MOUSE_OVER: {\n      const mouseEvent = ((nativeEvent: any): MouseEvent);\n      queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n        queuedMouse,\n        blockedOn,\n        topLevelType,\n        eventSystemFlags,\n        container,\n        mouseEvent,\n      );\n      return true;\n    }\n    case TOP_POINTER_OVER: {\n      const pointerEvent = ((nativeEvent: any): PointerEvent);\n      const pointerId = pointerEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          topLevelType,\n          eventSystemFlags,\n          container,\n          pointerEvent,\n        ),\n      );\n      return true;\n    }\n    case TOP_GOT_POINTER_CAPTURE: {\n      const pointerEvent = ((nativeEvent: any): PointerEvent);\n      const pointerId = pointerEvent.pointerId;\n      queuedPointerCaptures.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointerCaptures.get(pointerId) || null,\n          blockedOn,\n          topLevelType,\n          eventSystemFlags,\n          container,\n          pointerEvent,\n        ),\n      );\n      return true;\n    }\n  }\n  return false;\n}\n\n// Check if this target is unblocked. Returns true if it's unblocked.\nfunction attemptExplicitHydrationTarget(\n  queuedTarget: QueuedHydrationTarget,\n): void {\n  // TODO: This function shares a lot of logic with attemptToDispatchEvent.\n  // Try to unify them. It's a bit tricky since it would require two return\n  // values.\n  let targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (targetInst !== null) {\n    let nearestMounted = getNearestMountedFiber(targetInst);\n    if (nearestMounted !== null) {\n      const tag = nearestMounted.tag;\n      if (tag === SuspenseComponent) {\n        let instance = getSuspenseInstanceFromFiber(nearestMounted);\n        if (instance !== null) {\n          // We're blocked on hydrating this boundary.\n          // Increase its priority.\n          queuedTarget.blockedOn = instance;\n          runWithPriority(queuedTarget.priority, () => {\n            attemptHydrationAtCurrentPriority(nearestMounted);\n          });\n          return;\n        }\n      } else if (tag === HostRoot) {\n        const root: FiberRoot = nearestMounted.stateNode;\n        if (root.hydrate) {\n          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);\n          // We don't currently have a way to increase the priority of\n          // a root other than sync.\n          return;\n        }\n      }\n    }\n  }\n  queuedTarget.blockedOn = null;\n}\n\nexport function queueExplicitHydrationTarget(target: Node): void {\n  if (enableSelectiveHydration) {\n    let priority = getCurrentPriorityLevel();\n    const queuedTarget: QueuedHydrationTarget = {\n      blockedOn: null,\n      target: target,\n      priority: priority,\n    };\n    let i = 0;\n    for (; i < queuedExplicitHydrationTargets.length; i++) {\n      if (priority <= queuedExplicitHydrationTargets[i].priority) {\n        break;\n      }\n    }\n    queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);\n    if (i === 0) {\n      attemptExplicitHydrationTarget(queuedTarget);\n    }\n  }\n}\n\nfunction attemptReplayContinuousQueuedEvent(\n  queuedEvent: QueuedReplayableEvent,\n): boolean {\n  if (queuedEvent.blockedOn !== null) {\n    return false;\n  }\n  let nextBlockedOn = attemptToDispatchEvent(\n    queuedEvent.topLevelType,\n    queuedEvent.eventSystemFlags,\n    queuedEvent.container,\n    queuedEvent.nativeEvent,\n  );\n  if (nextBlockedOn !== null) {\n    // We're still blocked. Try again later.\n    let fiber = getInstanceFromNode(nextBlockedOn);\n    if (fiber !== null) {\n      attemptContinuousHydration(fiber);\n    }\n    queuedEvent.blockedOn = nextBlockedOn;\n    return false;\n  }\n  return true;\n}\n\nfunction attemptReplayContinuousQueuedEventInMap(\n  queuedEvent: QueuedReplayableEvent,\n  key: number,\n  map: Map<number, QueuedReplayableEvent>,\n): void {\n  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {\n    map.delete(key);\n  }\n}\n\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = false;\n  // First replay discrete events.\n  while (queuedDiscreteEvents.length > 0) {\n    let nextDiscreteEvent = queuedDiscreteEvents[0];\n    if (nextDiscreteEvent.blockedOn !== null) {\n      // We're still blocked.\n      // Increase the priority of this boundary to unblock\n      // the next discrete event.\n      let fiber = getInstanceFromNode(nextDiscreteEvent.blockedOn);\n      if (fiber !== null) {\n        attemptUserBlockingHydration(fiber);\n      }\n      break;\n    }\n    let nextBlockedOn = attemptToDispatchEvent(\n      nextDiscreteEvent.topLevelType,\n      nextDiscreteEvent.eventSystemFlags,\n      nextDiscreteEvent.container,\n      nextDiscreteEvent.nativeEvent,\n    );\n    if (nextBlockedOn !== null) {\n      // We're still blocked. Try again later.\n      nextDiscreteEvent.blockedOn = nextBlockedOn;\n    } else {\n      // We've successfully replayed the first event. Let's try the next one.\n      queuedDiscreteEvents.shift();\n    }\n  }\n  // Next replay any continuous events.\n  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {\n    queuedFocus = null;\n  }\n  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {\n    queuedDrag = null;\n  }\n  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {\n    queuedMouse = null;\n  }\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\n\nfunction scheduleCallbackIfUnblocked(\n  queuedEvent: QueuedReplayableEvent,\n  unblocked: Container | SuspenseInstance,\n) {\n  if (queuedEvent.blockedOn === unblocked) {\n    queuedEvent.blockedOn = null;\n    if (!hasScheduledReplayAttempt) {\n      hasScheduledReplayAttempt = true;\n      // Schedule a callback to attempt replaying as many events as are\n      // now unblocked. This first might not actually be unblocked yet.\n      // We could check it early to avoid scheduling an unnecessary callback.\n      scheduleCallback(NormalPriority, replayUnblockedEvents);\n    }\n  }\n}\n\nexport function retryIfBlockedOn(\n  unblocked: Container | SuspenseInstance,\n): void {\n  // Mark anything that was blocked on this as no longer blocked\n  // and eligible for a replay.\n  if (queuedDiscreteEvents.length > 0) {\n    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);\n    // This is a exponential search for each boundary that commits. I think it's\n    // worth it because we expect very few discrete events to queue up and once\n    // we are actually fully unblocked it will be fast to replay them.\n    for (let i = 1; i < queuedDiscreteEvents.length; i++) {\n      let queuedEvent = queuedDiscreteEvents[i];\n      if (queuedEvent.blockedOn === unblocked) {\n        queuedEvent.blockedOn = null;\n      }\n    }\n  }\n\n  if (queuedFocus !== null) {\n    scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  }\n  if (queuedDrag !== null) {\n    scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  }\n  if (queuedMouse !== null) {\n    scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  }\n  const unblock = queuedEvent =>\n    scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n\n  for (let i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    let queuedTarget = queuedExplicitHydrationTargets[i];\n    if (queuedTarget.blockedOn === unblocked) {\n      queuedTarget.blockedOn = null;\n    }\n  }\n\n  while (queuedExplicitHydrationTargets.length > 0) {\n    let nextExplicitTarget = queuedExplicitHydrationTargets[0];\n    if (nextExplicitTarget.blockedOn !== null) {\n      // We're still blocked.\n      break;\n    } else {\n      attemptExplicitHydrationTarget(nextExplicitTarget);\n      if (nextExplicitTarget.blockedOn === null) {\n        // We're unblocked.\n        queuedExplicitHydrationTargets.shift();\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function addEventBubbleListener(\n  element: Document | Element | Node,\n  eventType: string,\n  listener: Function,\n): void {\n  element.addEventListener(eventType, listener, false);\n}\n\nexport function addEventCaptureListener(\n  element: Document | Element | Node,\n  eventType: string,\n  listener: Function,\n): void {\n  element.addEventListener(eventType, listener, true);\n}\n\nexport function addEventCaptureListenerWithPassiveFlag(\n  element: Document | Element | Node,\n  eventType: string,\n  listener: Function,\n  passive: boolean,\n): void {\n  element.addEventListener(eventType, listener, {\n    capture: true,\n    passive,\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {EventPriority} from 'shared/ReactTypes';\nimport type {\n  TopLevelType,\n  DOMTopLevelEventType,\n} from 'legacy-events/TopLevelEventTypes';\nimport type {DispatchConfig} from 'legacy-events/ReactSyntheticEventType';\n\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport {\n  DiscreteEvent,\n  UserBlockingEvent,\n  ContinuousEvent,\n} from 'shared/ReactTypes';\n\n// Needed for SimpleEventPlugin, rather than\n// do it in two places, which duplicates logic\n// and increases the bundle size, we do it all\n// here once. If we remove or refactor the\n// SimpleEventPlugin, we should also remove or\n// update the below line.\nexport const simpleEventPluginEventTypes = {};\n\nexport const topLevelEventsToDispatchConfig: Map<\n  TopLevelType,\n  DispatchConfig,\n> = new Map();\n\nconst eventPriorities = new Map();\n\n// We store most of the events in this module in pairs of two strings so we can re-use\n// the code required to apply the same logic for event prioritization and that of the\n// SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code\n// duplication (for which there would be quite a bit). For the events that are not needed\n// for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an\n// array of top level events.\n\n// Lastly, we ignore prettier so we can keep the formatting sane.\n\n// prettier-ignore\nconst discreteEventPairsForSimpleEventPlugin = [\n  DOMTopLevelEventTypes.TOP_BLUR, 'blur',\n  DOMTopLevelEventTypes.TOP_CANCEL, 'cancel',\n  DOMTopLevelEventTypes.TOP_CLICK, 'click',\n  DOMTopLevelEventTypes.TOP_CLOSE, 'close',\n  DOMTopLevelEventTypes.TOP_CONTEXT_MENU, 'contextMenu',\n  DOMTopLevelEventTypes.TOP_COPY, 'copy',\n  DOMTopLevelEventTypes.TOP_CUT, 'cut',\n  DOMTopLevelEventTypes.TOP_AUX_CLICK, 'auxClick',\n  DOMTopLevelEventTypes.TOP_DOUBLE_CLICK, 'doubleClick',\n  DOMTopLevelEventTypes.TOP_DRAG_END, 'dragEnd',\n  DOMTopLevelEventTypes.TOP_DRAG_START, 'dragStart',\n  DOMTopLevelEventTypes.TOP_DROP, 'drop',\n  DOMTopLevelEventTypes.TOP_FOCUS, 'focus',\n  DOMTopLevelEventTypes.TOP_INPUT, 'input',\n  DOMTopLevelEventTypes.TOP_INVALID, 'invalid',\n  DOMTopLevelEventTypes.TOP_KEY_DOWN, 'keyDown',\n  DOMTopLevelEventTypes.TOP_KEY_PRESS, 'keyPress',\n  DOMTopLevelEventTypes.TOP_KEY_UP, 'keyUp',\n  DOMTopLevelEventTypes.TOP_MOUSE_DOWN, 'mouseDown',\n  DOMTopLevelEventTypes.TOP_MOUSE_UP, 'mouseUp',\n  DOMTopLevelEventTypes.TOP_PASTE, 'paste',\n  DOMTopLevelEventTypes.TOP_PAUSE, 'pause',\n  DOMTopLevelEventTypes.TOP_PLAY, 'play',\n  DOMTopLevelEventTypes.TOP_POINTER_CANCEL, 'pointerCancel',\n  DOMTopLevelEventTypes.TOP_POINTER_DOWN, 'pointerDown',\n  DOMTopLevelEventTypes.TOP_POINTER_UP, 'pointerUp',\n  DOMTopLevelEventTypes.TOP_RATE_CHANGE, 'rateChange',\n  DOMTopLevelEventTypes.TOP_RESET, 'reset',\n  DOMTopLevelEventTypes.TOP_SEEKED, 'seeked',\n  DOMTopLevelEventTypes.TOP_SUBMIT, 'submit',\n  DOMTopLevelEventTypes.TOP_TOUCH_CANCEL, 'touchCancel',\n  DOMTopLevelEventTypes.TOP_TOUCH_END, 'touchEnd',\n  DOMTopLevelEventTypes.TOP_TOUCH_START, 'touchStart',\n  DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, 'volumeChange',\n];\n\nconst otherDiscreteEvents = [\n  DOMTopLevelEventTypes.TOP_CHANGE,\n  DOMTopLevelEventTypes.TOP_SELECTION_CHANGE,\n  DOMTopLevelEventTypes.TOP_TEXT_INPUT,\n  DOMTopLevelEventTypes.TOP_COMPOSITION_START,\n  DOMTopLevelEventTypes.TOP_COMPOSITION_END,\n  DOMTopLevelEventTypes.TOP_COMPOSITION_UPDATE,\n];\n\n// prettier-ignore\nconst userBlockingPairsForSimpleEventPlugin = [\n  DOMTopLevelEventTypes.TOP_DRAG, 'drag',\n  DOMTopLevelEventTypes.TOP_DRAG_ENTER, 'dragEnter',\n  DOMTopLevelEventTypes.TOP_DRAG_EXIT, 'dragExit',\n  DOMTopLevelEventTypes.TOP_DRAG_LEAVE, 'dragLeave',\n  DOMTopLevelEventTypes.TOP_DRAG_OVER, 'dragOver',\n  DOMTopLevelEventTypes.TOP_MOUSE_MOVE, 'mouseMove',\n  DOMTopLevelEventTypes.TOP_MOUSE_OUT, 'mouseOut',\n  DOMTopLevelEventTypes.TOP_MOUSE_OVER, 'mouseOver',\n  DOMTopLevelEventTypes.TOP_POINTER_MOVE, 'pointerMove',\n  DOMTopLevelEventTypes.TOP_POINTER_OUT, 'pointerOut',\n  DOMTopLevelEventTypes.TOP_POINTER_OVER, 'pointerOver',\n  DOMTopLevelEventTypes.TOP_SCROLL, 'scroll',\n  DOMTopLevelEventTypes.TOP_TOGGLE, 'toggle',\n  DOMTopLevelEventTypes.TOP_TOUCH_MOVE, 'touchMove',\n  DOMTopLevelEventTypes.TOP_WHEEL, 'wheel',\n];\n\n// prettier-ignore\nconst continuousPairsForSimpleEventPlugin = [\n  DOMTopLevelEventTypes.TOP_ABORT, 'abort',\n  DOMTopLevelEventTypes.TOP_ANIMATION_END, 'animationEnd',\n  DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION, 'animationIteration',\n  DOMTopLevelEventTypes.TOP_ANIMATION_START, 'animationStart',\n  DOMTopLevelEventTypes.TOP_CAN_PLAY, 'canPlay',\n  DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, 'canPlayThrough',\n  DOMTopLevelEventTypes.TOP_DURATION_CHANGE, 'durationChange',\n  DOMTopLevelEventTypes.TOP_EMPTIED, 'emptied',\n  DOMTopLevelEventTypes.TOP_ENCRYPTED, 'encrypted',\n  DOMTopLevelEventTypes.TOP_ENDED, 'ended',\n  DOMTopLevelEventTypes.TOP_ERROR, 'error',\n  DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture',\n  DOMTopLevelEventTypes.TOP_LOAD, 'load',\n  DOMTopLevelEventTypes.TOP_LOADED_DATA, 'loadedData',\n  DOMTopLevelEventTypes.TOP_LOADED_METADATA, 'loadedMetadata',\n  DOMTopLevelEventTypes.TOP_LOAD_START, 'loadStart',\n  DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture',\n  DOMTopLevelEventTypes.TOP_PLAYING, 'playing',\n  DOMTopLevelEventTypes.TOP_PROGRESS, 'progress',\n  DOMTopLevelEventTypes.TOP_SEEKING, 'seeking',\n  DOMTopLevelEventTypes.TOP_STALLED, 'stalled',\n  DOMTopLevelEventTypes.TOP_SUSPEND, 'suspend',\n  DOMTopLevelEventTypes.TOP_TIME_UPDATE, 'timeUpdate',\n  DOMTopLevelEventTypes.TOP_TRANSITION_END, 'transitionEnd',\n  DOMTopLevelEventTypes.TOP_WAITING, 'waiting',\n];\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\n\nfunction processSimpleEventPluginPairsByPriority(\n  eventTypes: Array<DOMTopLevelEventType | string>,\n  priority: EventPriority,\n): void {\n  // As the event types are in pairs of two, we need to iterate\n  // through in twos. The events are in pairs of two to save code\n  // and improve init perf of processing this array, as it will\n  // result in far fewer object allocations and property accesses\n  // if we only use three arrays to process all the categories of\n  // instead of tuples.\n  for (let i = 0; i < eventTypes.length; i += 2) {\n    const topEvent = ((eventTypes[i]: any): DOMTopLevelEventType);\n    const event = ((eventTypes[i + 1]: any): string);\n    const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n    const onEvent = 'on' + capitalizedEvent;\n\n    const config = {\n      phasedRegistrationNames: {\n        bubbled: onEvent,\n        captured: onEvent + 'Capture',\n      },\n      dependencies: [topEvent],\n      eventPriority: priority,\n    };\n    eventPriorities.set(topEvent, priority);\n    topLevelEventsToDispatchConfig.set(topEvent, config);\n    simpleEventPluginEventTypes[event] = config;\n  }\n}\n\nfunction processTopEventPairsByPriority(\n  eventTypes: Array<DOMTopLevelEventType | string>,\n  priority: EventPriority,\n): void {\n  for (let i = 0; i < eventTypes.length; i++) {\n    eventPriorities.set(eventTypes[i], priority);\n  }\n}\n\n// SimpleEventPlugin\nprocessSimpleEventPluginPairsByPriority(\n  discreteEventPairsForSimpleEventPlugin,\n  DiscreteEvent,\n);\nprocessSimpleEventPluginPairsByPriority(\n  userBlockingPairsForSimpleEventPlugin,\n  UserBlockingEvent,\n);\nprocessSimpleEventPluginPairsByPriority(\n  continuousPairsForSimpleEventPlugin,\n  ContinuousEvent,\n);\n// Not used by SimpleEventPlugin\nprocessTopEventPairsByPriority(otherDiscreteEvents, DiscreteEvent);\n\nexport function getEventPriorityForPluginSystem(\n  topLevelType: TopLevelType,\n): EventPriority {\n  const priority = eventPriorities.get(topLevelType);\n  // Default to a ContinuousEvent. Note: we might\n  // want to warn if we can't detect the priority\n  // for the event.\n  return priority === undefined ? ContinuousEvent : priority;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type ReactNode =\n  | React$Element<any>\n  | ReactPortal\n  | ReactText\n  | ReactFragment\n  | ReactProvider<any>\n  | ReactConsumer<any>;\n\nexport type ReactEmpty = null | void | boolean;\n\nexport type ReactFragment = ReactEmpty | Iterable<React$Node>;\n\nexport type ReactNodeList = ReactEmpty | React$Node;\n\nexport type ReactText = string | number;\n\nexport type ReactProvider<T> = {\n  $$typeof: Symbol | number,\n  type: ReactProviderType<T>,\n  key: null | string,\n  ref: null,\n  props: {\n    value: T,\n    children?: ReactNodeList,\n    ...\n  },\n  ...\n};\n\nexport type ReactProviderType<T> = {\n  $$typeof: Symbol | number,\n  _context: ReactContext<T>,\n  ...\n};\n\nexport type ReactConsumer<T> = {\n  $$typeof: Symbol | number,\n  type: ReactContext<T>,\n  key: null | string,\n  ref: null,\n  props: {\n    children: (value: T) => ReactNodeList,\n    unstable_observedBits?: number,\n    ...\n  },\n  ...\n};\n\nexport type ReactContext<T> = {\n  $$typeof: Symbol | number,\n  Consumer: ReactContext<T>,\n  Provider: ReactProviderType<T>,\n  _calculateChangedBits: ((a: T, b: T) => number) | null,\n  _currentValue: T,\n  _currentValue2: T,\n  _threadCount: number,\n  // DEV only\n  _currentRenderer?: Object | null,\n  _currentRenderer2?: Object | null,\n  ...\n};\n\nexport type ReactPortal = {\n  $$typeof: Symbol | number,\n  key: null | string,\n  containerInfo: any,\n  children: ReactNodeList,\n  // TODO: figure out the API for cross-renderer implementation.\n  implementation: any,\n  ...\n};\n\nexport type RefObject = {|\n  current: any,\n|};\n\nexport type ReactEventResponderInstance<E, C> = {|\n  fiber: Object,\n  props: Object,\n  responder: ReactEventResponder<E, C>,\n  rootEventTypes: null | Set<string>,\n  state: Object,\n|};\n\nexport type ReactEventResponderListener<E, C> = {|\n  props: Object,\n  responder: ReactEventResponder<E, C>,\n|};\n\nexport type ReactEventResponder<E, C> = {\n  $$typeof: Symbol | number,\n  displayName: string,\n  targetEventTypes: null | Array<string>,\n  targetPortalPropagation: boolean,\n  rootEventTypes: null | Array<string>,\n  getInitialState: null | ((props: Object) => Object),\n  onEvent:\n    | null\n    | ((event: E, context: C, props: Object, state: Object) => void),\n  onRootEvent:\n    | null\n    | ((event: E, context: C, props: Object, state: Object) => void),\n  onMount: null | ((context: C, props: Object, state: Object) => void),\n  onUnmount: null | ((context: C, props: Object, state: Object) => void),\n  ...\n};\n\nexport type EventPriority = 0 | 1 | 2;\n\nexport const DiscreteEvent: EventPriority = 0;\nexport const UserBlockingEvent: EventPriority = 1;\nexport const ContinuousEvent: EventPriority = 2;\n\nexport type ReactFundamentalComponentInstance<C, H> = {|\n  currentFiber: mixed,\n  instance: mixed,\n  prevProps: null | Object,\n  props: Object,\n  impl: ReactFundamentalImpl<C, H>,\n  state: Object,\n|};\n\nexport type ReactFundamentalImpl<C, H> = {\n  displayName: string,\n  reconcileChildren: boolean,\n  getInitialState?: (props: Object) => Object,\n  getInstance: (context: C, props: Object, state: Object) => H,\n  getServerSideString?: (context: C, props: Object) => string,\n  getServerSideStringClose?: (context: C, props: Object) => string,\n  onMount: (context: C, instance: mixed, props: Object, state: Object) => void,\n  shouldUpdate?: (\n    context: C,\n    prevProps: null | Object,\n    nextProps: Object,\n    state: Object,\n  ) => boolean,\n  onUpdate?: (\n    context: C,\n    instance: mixed,\n    prevProps: null | Object,\n    nextProps: Object,\n    state: Object,\n  ) => void,\n  onUnmount?: (\n    context: C,\n    instance: mixed,\n    props: Object,\n    state: Object,\n  ) => void,\n  onHydrate?: (context: C, props: Object, state: Object) => boolean,\n  onFocus?: (context: C, props: Object, state: Object) => boolean,\n  ...\n};\n\nexport type ReactFundamentalComponent<C, H> = {|\n  $$typeof: Symbol | number,\n  impl: ReactFundamentalImpl<C, H>,\n|};\n\nexport type ReactScope = {|\n  $$typeof: Symbol | number,\n|};\n\nexport type ReactScopeQuery = (\n  type: string,\n  props: {[string]: mixed, ...},\n  instance: mixed,\n) => boolean;\n\nexport type ReactScopeMethods = {|\n  DO_NOT_USE_queryAllNodes(ReactScopeQuery): null | Array<Object>,\n  DO_NOT_USE_queryFirstNode(ReactScopeQuery): null | Object,\n  containsNode(Object): boolean,\n  getChildContextValues: <T>(context: ReactContext<T>) => Array<T>,\n|};\n\nexport type ReactScopeInstance = {|\n  fiber: Object,\n  methods: null | ReactScopeMethods,\n|};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from 'legacy-events/PluginModuleType';\nimport type {FiberRoot} from 'react-reconciler/src/ReactFiberRoot';\nimport type {Container, SuspenseInstance} from '../client/ReactDOMHostConfig';\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nimport {\n  discreteUpdates,\n  flushDiscreteUpdatesIfNeeded,\n} from 'legacy-events/ReactGenericBatching';\nimport {DEPRECATED_dispatchEventForResponderEventSystem} from './DeprecatedDOMEventResponderSystem';\nimport {\n  isReplayableDiscreteEvent,\n  queueDiscreteEvent,\n  hasQueuedDiscreteEvents,\n  clearIfContinuousEvent,\n  queueIfContinuousEvent,\n} from './ReactDOMEventReplaying';\nimport {\n  getNearestMountedFiber,\n  getContainerFromFiber,\n  getSuspenseInstanceFromFiber,\n} from 'react-reconciler/reflection';\nimport {HostRoot, SuspenseComponent} from 'shared/ReactWorkTags';\nimport {\n  type EventSystemFlags,\n  PLUGIN_EVENT_SYSTEM,\n  RESPONDER_EVENT_SYSTEM,\n  IS_PASSIVE,\n  IS_ACTIVE,\n  PASSIVE_NOT_SUPPORTED,\n} from 'legacy-events/EventSystemFlags';\n\nimport {\n  addEventBubbleListener,\n  addEventCaptureListener,\n  addEventCaptureListenerWithPassiveFlag,\n} from './EventListener';\nimport getEventTarget from './getEventTarget';\nimport {getClosestInstanceFromNode} from '../client/ReactDOMComponentTree';\nimport {getRawEventName} from './DOMTopLevelEventTypes';\nimport {passiveBrowserEventsSupported} from './checkPassiveEvents';\n\nimport {enableDeprecatedFlareAPI} from 'shared/ReactFeatureFlags';\nimport {\n  UserBlockingEvent,\n  ContinuousEvent,\n  DiscreteEvent,\n} from 'shared/ReactTypes';\nimport {getEventPriorityForPluginSystem} from './DOMEventProperties';\nimport {dispatchEventForLegacyPluginEventSystem} from './DOMLegacyEventPluginSystem';\n\nconst {\n  unstable_UserBlockingPriority: UserBlockingPriority,\n  unstable_runWithPriority: runWithPriority,\n} = Scheduler;\n\n// TODO: can we stop exporting these?\nexport let _enabled = true;\n\nexport function setEnabled(enabled: ?boolean) {\n  _enabled = !!enabled;\n}\n\nexport function isEnabled() {\n  return _enabled;\n}\n\nexport function trapBubbledEvent(\n  topLevelType: DOMTopLevelEventType,\n  element: Document | Element | Node,\n): void {\n  trapEventForPluginEventSystem(element, topLevelType, false);\n}\n\nexport function trapCapturedEvent(\n  topLevelType: DOMTopLevelEventType,\n  element: Document | Element | Node,\n): void {\n  trapEventForPluginEventSystem(element, topLevelType, true);\n}\n\nexport function addResponderEventSystemEvent(\n  document: Document,\n  topLevelType: string,\n  passive: boolean,\n): any => void {\n  let eventFlags = RESPONDER_EVENT_SYSTEM;\n\n  // If passive option is not supported, then the event will be\n  // active and not passive, but we flag it as using not being\n  // supported too. This way the responder event plugins know,\n  // and can provide polyfills if needed.\n  if (passive) {\n    if (passiveBrowserEventsSupported) {\n      eventFlags |= IS_PASSIVE;\n    } else {\n      eventFlags |= IS_ACTIVE;\n      eventFlags |= PASSIVE_NOT_SUPPORTED;\n      passive = false;\n    }\n  } else {\n    eventFlags |= IS_ACTIVE;\n  }\n  // Check if interactive and wrap in discreteUpdates\n  const listener = dispatchEvent.bind(\n    null,\n    ((topLevelType: any): DOMTopLevelEventType),\n    eventFlags,\n    document,\n  );\n  if (passiveBrowserEventsSupported) {\n    addEventCaptureListenerWithPassiveFlag(\n      document,\n      topLevelType,\n      listener,\n      passive,\n    );\n  } else {\n    addEventCaptureListener(document, topLevelType, listener);\n  }\n  return listener;\n}\n\nexport function removeActiveResponderEventSystemEvent(\n  document: Document,\n  topLevelType: string,\n  listener: any => void,\n) {\n  if (passiveBrowserEventsSupported) {\n    document.removeEventListener(topLevelType, listener, {\n      capture: true,\n      passive: false,\n    });\n  } else {\n    document.removeEventListener(topLevelType, listener, true);\n  }\n}\n\nfunction trapEventForPluginEventSystem(\n  container: Document | Element | Node,\n  topLevelType: DOMTopLevelEventType,\n  capture: boolean,\n): void {\n  let listener;\n  switch (getEventPriorityForPluginSystem(topLevelType)) {\n    case DiscreteEvent:\n      listener = dispatchDiscreteEvent.bind(\n        null,\n        topLevelType,\n        PLUGIN_EVENT_SYSTEM,\n        container,\n      );\n      break;\n    case UserBlockingEvent:\n      listener = dispatchUserBlockingUpdate.bind(\n        null,\n        topLevelType,\n        PLUGIN_EVENT_SYSTEM,\n        container,\n      );\n      break;\n    case ContinuousEvent:\n    default:\n      listener = dispatchEvent.bind(\n        null,\n        topLevelType,\n        PLUGIN_EVENT_SYSTEM,\n        container,\n      );\n      break;\n  }\n\n  const rawEventName = getRawEventName(topLevelType);\n  if (capture) {\n    addEventCaptureListener(container, rawEventName, listener);\n  } else {\n    addEventBubbleListener(container, rawEventName, listener);\n  }\n}\n\nfunction dispatchDiscreteEvent(\n  topLevelType,\n  eventSystemFlags,\n  container,\n  nativeEvent,\n) {\n  flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);\n  discreteUpdates(\n    dispatchEvent,\n    topLevelType,\n    eventSystemFlags,\n    container,\n    nativeEvent,\n  );\n}\n\nfunction dispatchUserBlockingUpdate(\n  topLevelType,\n  eventSystemFlags,\n  container,\n  nativeEvent,\n) {\n  runWithPriority(\n    UserBlockingPriority,\n    dispatchEvent.bind(\n      null,\n      topLevelType,\n      eventSystemFlags,\n      container,\n      nativeEvent,\n    ),\n  );\n}\n\nexport function dispatchEvent(\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  container: Document | Element | Node,\n  nativeEvent: AnyNativeEvent,\n): void {\n  if (!_enabled) {\n    return;\n  }\n  if (hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(topLevelType)) {\n    // If we already have a queue of discrete events, and this is another discrete\n    // event, then we can't dispatch it regardless of its target, since they\n    // need to dispatch in order.\n    queueDiscreteEvent(\n      null, // Flags that we're not actually blocked on anything as far as we know.\n      topLevelType,\n      eventSystemFlags,\n      container,\n      nativeEvent,\n    );\n    return;\n  }\n\n  const blockedOn = attemptToDispatchEvent(\n    topLevelType,\n    eventSystemFlags,\n    container,\n    nativeEvent,\n  );\n\n  if (blockedOn === null) {\n    // We successfully dispatched this event.\n    clearIfContinuousEvent(topLevelType, nativeEvent);\n    return;\n  }\n\n  if (isReplayableDiscreteEvent(topLevelType)) {\n    // This this to be replayed later once the target is available.\n    queueDiscreteEvent(\n      blockedOn,\n      topLevelType,\n      eventSystemFlags,\n      container,\n      nativeEvent,\n    );\n    return;\n  }\n\n  if (\n    queueIfContinuousEvent(\n      blockedOn,\n      topLevelType,\n      eventSystemFlags,\n      container,\n      nativeEvent,\n    )\n  ) {\n    return;\n  }\n\n  // We need to clear only if we didn't queue because\n  // queueing is accummulative.\n  clearIfContinuousEvent(topLevelType, nativeEvent);\n\n  // This is not replayable so we'll invoke it but without a target,\n  // in case the event system needs to trace it.\n  if (enableDeprecatedFlareAPI) {\n    if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {\n      dispatchEventForLegacyPluginEventSystem(\n        topLevelType,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n      );\n    }\n    if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {\n      // React Flare event system\n      DEPRECATED_dispatchEventForResponderEventSystem(\n        (topLevelType: any),\n        null,\n        nativeEvent,\n        getEventTarget(nativeEvent),\n        eventSystemFlags,\n      );\n    }\n  } else {\n    dispatchEventForLegacyPluginEventSystem(\n      topLevelType,\n      eventSystemFlags,\n      nativeEvent,\n      null,\n    );\n  }\n}\n\n// Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.\nexport function attemptToDispatchEvent(\n  topLevelType: DOMTopLevelEventType,\n  eventSystemFlags: EventSystemFlags,\n  container: Document | Element | Node,\n  nativeEvent: AnyNativeEvent,\n): null | Container | SuspenseInstance {\n  // TODO: Warn if _enabled is false.\n\n  const nativeEventTarget = getEventTarget(nativeEvent);\n  let targetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n  if (targetInst !== null) {\n    let nearestMounted = getNearestMountedFiber(targetInst);\n    if (nearestMounted === null) {\n      // This tree has been unmounted already. Dispatch without a target.\n      targetInst = null;\n    } else {\n      const tag = nearestMounted.tag;\n      if (tag === SuspenseComponent) {\n        let instance = getSuspenseInstanceFromFiber(nearestMounted);\n        if (instance !== null) {\n          // Queue the event to be replayed later. Abort dispatching since we\n          // don't want this event dispatched twice through the event system.\n          // TODO: If this is the first discrete event in the queue. Schedule an increased\n          // priority for this boundary.\n          return instance;\n        }\n        // This shouldn't happen, something went wrong but to avoid blocking\n        // the whole system, dispatch the event without a target.\n        // TODO: Warn.\n        targetInst = null;\n      } else if (tag === HostRoot) {\n        const root: FiberRoot = nearestMounted.stateNode;\n        if (root.hydrate) {\n          // If this happens during a replay something went wrong and it might block\n          // the whole system.\n          return getContainerFromFiber(nearestMounted);\n        }\n        targetInst = null;\n      } else if (nearestMounted !== targetInst) {\n        // If we get an event (ex: img onload) before committing that\n        // component's mount, ignore it for now (that is, treat it as if it was an\n        // event on a non-React tree). We might also consider queueing events and\n        // dispatching them after the mount.\n        targetInst = null;\n      }\n    }\n  }\n\n  if (enableDeprecatedFlareAPI) {\n    if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {\n      dispatchEventForLegacyPluginEventSystem(\n        topLevelType,\n        eventSystemFlags,\n        nativeEvent,\n        targetInst,\n      );\n    }\n    if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {\n      // React Flare event system\n      DEPRECATED_dispatchEventForResponderEventSystem(\n        (topLevelType: any),\n        targetInst,\n        nativeEvent,\n        nativeEventTarget,\n        eventSystemFlags,\n      );\n    }\n  } else {\n    dispatchEventForLegacyPluginEventSystem(\n      topLevelType,\n      eventSystemFlags,\n      nativeEvent,\n      targetInst,\n    );\n  }\n  // We're not blocked on anything.\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// List derived from Gecko source code:\n// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js\nexport const shorthandToLonghand = {\n  animation: [\n    'animationDelay',\n    'animationDirection',\n    'animationDuration',\n    'animationFillMode',\n    'animationIterationCount',\n    'animationName',\n    'animationPlayState',\n    'animationTimingFunction',\n  ],\n  background: [\n    'backgroundAttachment',\n    'backgroundClip',\n    'backgroundColor',\n    'backgroundImage',\n    'backgroundOrigin',\n    'backgroundPositionX',\n    'backgroundPositionY',\n    'backgroundRepeat',\n    'backgroundSize',\n  ],\n  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],\n  border: [\n    'borderBottomColor',\n    'borderBottomStyle',\n    'borderBottomWidth',\n    'borderImageOutset',\n    'borderImageRepeat',\n    'borderImageSlice',\n    'borderImageSource',\n    'borderImageWidth',\n    'borderLeftColor',\n    'borderLeftStyle',\n    'borderLeftWidth',\n    'borderRightColor',\n    'borderRightStyle',\n    'borderRightWidth',\n    'borderTopColor',\n    'borderTopStyle',\n    'borderTopWidth',\n  ],\n  borderBlockEnd: [\n    'borderBlockEndColor',\n    'borderBlockEndStyle',\n    'borderBlockEndWidth',\n  ],\n  borderBlockStart: [\n    'borderBlockStartColor',\n    'borderBlockStartStyle',\n    'borderBlockStartWidth',\n  ],\n  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],\n  borderColor: [\n    'borderBottomColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderTopColor',\n  ],\n  borderImage: [\n    'borderImageOutset',\n    'borderImageRepeat',\n    'borderImageSlice',\n    'borderImageSource',\n    'borderImageWidth',\n  ],\n  borderInlineEnd: [\n    'borderInlineEndColor',\n    'borderInlineEndStyle',\n    'borderInlineEndWidth',\n  ],\n  borderInlineStart: [\n    'borderInlineStartColor',\n    'borderInlineStartStyle',\n    'borderInlineStartWidth',\n  ],\n  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],\n  borderRadius: [\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n  ],\n  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],\n  borderStyle: [\n    'borderBottomStyle',\n    'borderLeftStyle',\n    'borderRightStyle',\n    'borderTopStyle',\n  ],\n  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n  borderWidth: [\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderRightWidth',\n    'borderTopWidth',\n  ],\n  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],\n  columns: ['columnCount', 'columnWidth'],\n  flex: ['flexBasis', 'flexGrow', 'flexShrink'],\n  flexFlow: ['flexDirection', 'flexWrap'],\n  font: [\n    'fontFamily',\n    'fontFeatureSettings',\n    'fontKerning',\n    'fontLanguageOverride',\n    'fontSize',\n    'fontSizeAdjust',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantAlternates',\n    'fontVariantCaps',\n    'fontVariantEastAsian',\n    'fontVariantLigatures',\n    'fontVariantNumeric',\n    'fontVariantPosition',\n    'fontWeight',\n    'lineHeight',\n  ],\n  fontVariant: [\n    'fontVariantAlternates',\n    'fontVariantCaps',\n    'fontVariantEastAsian',\n    'fontVariantLigatures',\n    'fontVariantNumeric',\n    'fontVariantPosition',\n  ],\n  gap: ['columnGap', 'rowGap'],\n  grid: [\n    'gridAutoColumns',\n    'gridAutoFlow',\n    'gridAutoRows',\n    'gridTemplateAreas',\n    'gridTemplateColumns',\n    'gridTemplateRows',\n  ],\n  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],\n  gridColumn: ['gridColumnEnd', 'gridColumnStart'],\n  gridColumnGap: ['columnGap'],\n  gridGap: ['columnGap', 'rowGap'],\n  gridRow: ['gridRowEnd', 'gridRowStart'],\n  gridRowGap: ['rowGap'],\n  gridTemplate: [\n    'gridTemplateAreas',\n    'gridTemplateColumns',\n    'gridTemplateRows',\n  ],\n  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marker: ['markerEnd', 'markerMid', 'markerStart'],\n  mask: [\n    'maskClip',\n    'maskComposite',\n    'maskImage',\n    'maskMode',\n    'maskOrigin',\n    'maskPositionX',\n    'maskPositionY',\n    'maskRepeat',\n    'maskSize',\n  ],\n  maskPosition: ['maskPositionX', 'maskPositionY'],\n  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],\n  overflow: ['overflowX', 'overflowY'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  placeContent: ['alignContent', 'justifyContent'],\n  placeItems: ['alignItems', 'justifyItems'],\n  placeSelf: ['alignSelf', 'justifySelf'],\n  textDecoration: [\n    'textDecorationColor',\n    'textDecorationLine',\n    'textDecorationStyle',\n  ],\n  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],\n  transition: [\n    'transitionDelay',\n    'transitionDuration',\n    'transitionProperty',\n    'transitionTimingFunction',\n  ],\n  wordWrap: ['overflowWrap'],\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {isUnitlessNumber} from './CSSProperty';\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  const isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  if (\n    !isCustomProperty &&\n    typeof value === 'number' &&\n    value !== 0 &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  ) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\n\nexport default dangerousStyleValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\nexport default function hyphenateStyleName(name: string): string {\n  return name\n    .replace(uppercasePattern, '-$1')\n    .toLowerCase()\n    .replace(msPattern, '-ms-');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet warnValidStyle = () => {};\n\nif (__DEV__) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  const badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  const msPattern = /^-ms-/;\n  const hyphenPattern = /-(.)/g;\n\n  // style values shouldn't contain a semicolon\n  const badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  const warnedStyleNames = {};\n  const warnedStyleValues = {};\n  let warnedForNaNValue = false;\n  let warnedForInfinityValue = false;\n\n  const camelize = function(string) {\n    return string.replace(hyphenPattern, function(_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  const warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    console.error(\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      // As Andi Smith suggests\n      // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n      // is converted to lowercase `ms`.\n      camelize(name.replace(msPattern, 'ms-')),\n    );\n  };\n\n  const warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    console.error(\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1),\n    );\n  };\n\n  const warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    console.error(\n      \"Style property values shouldn't contain a semicolon. \" +\n        'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, ''),\n    );\n  };\n\n  const warnStyleValueIsNaN = function(name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    console.error(\n      '`NaN` is an invalid value for the `%s` css style property.',\n      name,\n    );\n  };\n\n  const warnStyleValueIsInfinity = function(name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n    console.error(\n      '`Infinity` is an invalid value for the `%s` css style property.',\n      name,\n    );\n  };\n\n  warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nexport default warnValidStyle;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {shorthandToLonghand} from './CSSShorthandProperty';\n\nimport dangerousStyleValue from './dangerousStyleValue';\nimport hyphenateStyleName from './hyphenateStyleName';\nimport warnValidStyle from './warnValidStyle';\n\nimport {warnAboutShorthandPropertyCollision} from 'shared/ReactFeatureFlags';\n\n/**\n * Operations for dealing with CSS properties.\n */\n\n/**\n * This creates a string that is expected to be equivalent to the style\n * attribute generated by server-side rendering. It by-passes warnings and\n * security checks so it's not safe to use this value for anything other than\n * comparison. It is only used in DEV for SSR validation.\n */\nexport function createDangerousStringForStyles(styles) {\n  if (__DEV__) {\n    let serialized = '';\n    let delimiter = '';\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      const styleValue = styles[styleName];\n      if (styleValue != null) {\n        const isCustomProperty = styleName.indexOf('--') === 0;\n        serialized +=\n          delimiter +\n          (isCustomProperty ? styleName : hyphenateStyleName(styleName)) +\n          ':';\n        serialized += dangerousStyleValue(\n          styleName,\n          styleValue,\n          isCustomProperty,\n        );\n\n        delimiter = ';';\n      }\n    }\n    return serialized || null;\n  }\n}\n\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\nexport function setValueForStyles(node, styles) {\n  const style = node.style;\n  for (let styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    const isCustomProperty = styleName.indexOf('--') === 0;\n    if (__DEV__) {\n      if (!isCustomProperty) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n    }\n    const styleValue = dangerousStyleValue(\n      styleName,\n      styles[styleName],\n      isCustomProperty,\n    );\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nfunction isValueEmpty(value) {\n  return value == null || typeof value === 'boolean' || value === '';\n}\n\n/**\n * Given {color: 'red', overflow: 'hidden'} returns {\n *   color: 'color',\n *   overflowX: 'overflow',\n *   overflowY: 'overflow',\n * }. This can be read as \"the overflowY property was set by the overflow\n * shorthand\". That is, the values are the property that each was derived from.\n */\nfunction expandShorthandMap(styles) {\n  const expanded = {};\n  for (const key in styles) {\n    const longhands = shorthandToLonghand[key] || [key];\n    for (let i = 0; i < longhands.length; i++) {\n      expanded[longhands[i]] = key;\n    }\n  }\n  return expanded;\n}\n\n/**\n * When mixing shorthand and longhand property names, we warn during updates if\n * we expect an incorrect result to occur. In particular, we warn for:\n *\n * Updating a shorthand property (longhand gets overwritten):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\n *   becomes .style.font = 'baz'\n * Removing a shorthand property (longhand gets lost too):\n *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\n *   becomes .style.font = ''\n * Removing a longhand property (should revert to shorthand; doesn't):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\n *   becomes .style.fontVariant = ''\n */\nexport function validateShorthandPropertyCollisionInDev(\n  styleUpdates,\n  nextStyles,\n) {\n  if (__DEV__) {\n    if (!warnAboutShorthandPropertyCollision) {\n      return;\n    }\n\n    if (!nextStyles) {\n      return;\n    }\n\n    const expandedUpdates = expandShorthandMap(styleUpdates);\n    const expandedStyles = expandShorthandMap(nextStyles);\n    const warnedAbout = {};\n    for (const key in expandedUpdates) {\n      const originalKey = expandedUpdates[key];\n      const correctOriginalKey = expandedStyles[key];\n      if (correctOriginalKey && originalKey !== correctOriginalKey) {\n        const warningKey = originalKey + ',' + correctOriginalKey;\n        if (warnedAbout[warningKey]) {\n          continue;\n        }\n        warnedAbout[warningKey] = true;\n        console.error(\n          '%s a style property during rerender (%s) when a ' +\n            'conflicting property is set (%s) can lead to styling bugs. To ' +\n            \"avoid this, don't mix shorthand and non-shorthand properties \" +\n            'for the same value; instead, replace the shorthand with ' +\n            'separate values.',\n          isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating',\n          originalKey,\n          correctOriginalKey,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport omittedCloseTags from './omittedCloseTags';\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nconst voidElementTags = {\n  menuitem: true,\n  ...omittedCloseTags,\n};\n\nexport default voidElementTags;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nconst omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\nexport default omittedCloseTags;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\n// TODO: We can remove this if we add invariantWithStack()\n// or add stack by default to invariants where possible.\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport voidElementTags from './voidElementTags';\n\nconst HTML = '__html';\n\nlet ReactDebugCurrentFrame = null;\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\nfunction assertValidProps(tag: string, props: ?Object) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[tag]) {\n    invariant(\n      props.children == null && props.dangerouslySetInnerHTML == null,\n      '%s is a void element tag and must neither have `children` nor ' +\n        'use `dangerouslySetInnerHTML`.%s',\n      tag,\n      __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n    );\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n    );\n    invariant(\n      typeof props.dangerouslySetInnerHTML === 'object' &&\n        HTML in props.dangerouslySetInnerHTML,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +\n        'for more information.',\n    );\n  }\n  if (__DEV__) {\n    if (\n      !props.suppressContentEditableWarning &&\n      props.contentEditable &&\n      props.children != null\n    ) {\n      console.error(\n        'A component is `contentEditable` and contains `children` managed by ' +\n          'React. It is now your responsibility to guarantee that none of ' +\n          'those nodes are unexpectedly modified or duplicated. This is ' +\n          'probably not intentional.',\n      );\n    }\n  }\n  invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n      \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n      'using JSX.%s',\n    __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n  );\n}\n\nexport default assertValidProps;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nfunction isCustomComponent(tagName: string, props: Object) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\nexport default isCustomComponent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// When adding attributes to the HTML or SVG whitelist, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nconst possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  disablepictureinpicture: 'disablePictureInPicture',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan',\n};\n\nexport default possibleStandardNames;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst ariaProperties = {\n  'aria-current': 0, // state\n  'aria-details': 0,\n  'aria-disabled': 0, // state\n  'aria-hidden': 0, // state\n  'aria-invalid': 0, // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0,\n};\n\nexport default ariaProperties;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {ATTRIBUTE_NAME_CHAR} from './DOMProperty';\nimport isCustomComponent from './isCustomComponent';\nimport validAriaProperties from './validAriaProperties';\n\nconst warnedProperties = {};\nconst rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nconst rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction validateProperty(tagName, name) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n      return true;\n    }\n\n    if (rARIACamel.test(name)) {\n      const ariaName = 'aria-' + name.slice(4).toLowerCase();\n      const correctName = validAriaProperties.hasOwnProperty(ariaName)\n        ? ariaName\n        : null;\n\n      // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n      if (correctName == null) {\n        console.error(\n          'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',\n          name,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n      // aria-* attributes should be lowercase; suggest the lowercase version.\n      if (name !== correctName) {\n        console.error(\n          'Invalid ARIA attribute `%s`. Did you mean `%s`?',\n          name,\n          correctName,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n\n    if (rARIA.test(name)) {\n      const lowerCasedName = name.toLowerCase();\n      const standardName = validAriaProperties.hasOwnProperty(lowerCasedName)\n        ? lowerCasedName\n        : null;\n\n      // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n      if (standardName == null) {\n        warnedProperties[name] = true;\n        return false;\n      }\n      // aria-* attributes should be lowercase; suggest the lowercase version.\n      if (name !== standardName) {\n        console.error(\n          'Unknown ARIA attribute `%s`. Did you mean `%s`?',\n          name,\n          standardName,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  if (__DEV__) {\n    const invalidProps = [];\n\n    for (const key in props) {\n      const isValid = validateProperty(type, key);\n      if (!isValid) {\n        invalidProps.push(key);\n      }\n    }\n\n    const unknownPropString = invalidProps\n      .map(prop => '`' + prop + '`')\n      .join(', ');\n\n    if (invalidProps.length === 1) {\n      console.error(\n        'Invalid aria prop %s on <%s> tag. ' +\n          'For details, see https://fb.me/invalid-aria-prop',\n        unknownPropString,\n        type,\n      );\n    } else if (invalidProps.length > 1) {\n      console.error(\n        'Invalid aria props %s on <%s> tag. ' +\n          'For details, see https://fb.me/invalid-aria-prop',\n        unknownPropString,\n        type,\n      );\n    }\n  }\n}\n\nexport function validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnInvalidARIAProps(type, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet didWarnValueNull = false;\n\nexport function validateProperties(type, props) {\n  if (__DEV__) {\n    if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n      return;\n    }\n\n    if (props != null && props.value === null && !didWarnValueNull) {\n      didWarnValueNull = true;\n      if (type === 'select' && props.multiple) {\n        console.error(\n          '`value` prop on `%s` should not be null. ' +\n            'Consider using an empty array when `multiple` is set to `true` ' +\n            'to clear the component or `undefined` for uncontrolled components.',\n          type,\n        );\n      } else {\n        console.error(\n          '`value` prop on `%s` should not be null. ' +\n            'Consider using an empty string to clear the component or `undefined` ' +\n            'for uncontrolled components.',\n          type,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  registrationNameModules,\n  possibleRegistrationNames,\n} from 'legacy-events/EventPluginRegistry';\n\nimport {\n  ATTRIBUTE_NAME_CHAR,\n  BOOLEAN,\n  RESERVED,\n  shouldRemoveAttributeWithWarning,\n  getPropertyInfo,\n} from './DOMProperty';\nimport isCustomComponent from './isCustomComponent';\nimport possibleStandardNames from './possibleStandardNames';\n\nlet validateProperty = () => {};\n\nif (__DEV__) {\n  const warnedProperties = {};\n  const hasOwnProperty = Object.prototype.hasOwnProperty;\n  const EVENT_NAME_REGEX = /^on./;\n  const INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  const rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  const rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty = function(tagName, name, value, canUseEventSystem) {\n    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n      return true;\n    }\n\n    const lowerCasedName = name.toLowerCase();\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      console.error(\n        'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +\n          'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +\n          'are not needed/supported by React.',\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    // We can't rely on the event system being injected on the server.\n    if (canUseEventSystem) {\n      if (registrationNameModules.hasOwnProperty(name)) {\n        return true;\n      }\n      const registrationName = possibleRegistrationNames.hasOwnProperty(\n        lowerCasedName,\n      )\n        ? possibleRegistrationNames[lowerCasedName]\n        : null;\n      if (registrationName != null) {\n        console.error(\n          'Invalid event handler property `%s`. Did you mean `%s`?',\n          name,\n          registrationName,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n      if (EVENT_NAME_REGEX.test(name)) {\n        console.error(\n          'Unknown event handler property `%s`. It will be ignored.',\n          name,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        console.error(\n          'Invalid event handler property `%s`. ' +\n            'React events use the camelCase naming convention, for example `onClick`.',\n          name,\n        );\n      }\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    // Let the ARIA attribute hook validate ARIA attributes\n    if (rARIA.test(name) || rARIACamel.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      console.error(\n        'Directly setting property `innerHTML` is not permitted. ' +\n          'For more information, lookup documentation on `dangerouslySetInnerHTML`.',\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      console.error(\n        'The `aria` attribute is reserved for future use in React. ' +\n          'Pass individual `aria-` attributes instead.',\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (\n      lowerCasedName === 'is' &&\n      value !== null &&\n      value !== undefined &&\n      typeof value !== 'string'\n    ) {\n      console.error(\n        'Received a `%s` for a string attribute `is`. If this is expected, cast ' +\n          'the value to a string.',\n        typeof value,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      console.error(\n        'Received NaN for the `%s` attribute. If this is expected, cast ' +\n          'the value to a string.',\n        name,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    const propertyInfo = getPropertyInfo(name);\n    const isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;\n\n    // Known attributes should match the casing specified in the property config.\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      const standardName = possibleStandardNames[lowerCasedName];\n      if (standardName !== name) {\n        console.error(\n          'Invalid DOM property `%s`. Did you mean `%s`?',\n          name,\n          standardName,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      console.error(\n        'React does not recognize the `%s` prop on a DOM element. If you ' +\n          'intentionally want it to appear in the DOM as a custom ' +\n          'attribute, spell it as lowercase `%s` instead. ' +\n          'If you accidentally passed it from a parent component, remove ' +\n          'it from the DOM element.',\n        name,\n        lowerCasedName,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (\n      typeof value === 'boolean' &&\n      shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)\n    ) {\n      if (value) {\n        console.error(\n          'Received `%s` for a non-boolean attribute `%s`.\\n\\n' +\n            'If you want to write it to the DOM, pass a string instead: ' +\n            '%s=\"%s\" or %s={value.toString()}.',\n          value,\n          name,\n          name,\n          value,\n          name,\n        );\n      } else {\n        console.error(\n          'Received `%s` for a non-boolean attribute `%s`.\\n\\n' +\n            'If you want to write it to the DOM, pass a string instead: ' +\n            '%s=\"%s\" or %s={value.toString()}.\\n\\n' +\n            'If you used to conditionally omit it with %s={condition && value}, ' +\n            'pass %s={condition ? value : undefined} instead.',\n          value,\n          name,\n          name,\n          value,\n          name,\n          name,\n          name,\n        );\n      }\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    // Now that we've validated casing, do not validate\n    // data types for reserved props\n    if (isReserved) {\n      return true;\n    }\n\n    // Warn when a known attribute is a bad type\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties[name] = true;\n      return false;\n    }\n\n    // Warn when passing the strings 'false' or 'true' into a boolean prop\n    if (\n      (value === 'false' || value === 'true') &&\n      propertyInfo !== null &&\n      propertyInfo.type === BOOLEAN\n    ) {\n      console.error(\n        'Received the string `%s` for the boolean attribute `%s`. ' +\n          '%s ' +\n          'Did you mean %s={%s}?',\n        value,\n        name,\n        value === 'false'\n          ? 'The browser will interpret it as a truthy value.'\n          : 'Although this works, it will not work as expected if you pass the string \"false\".',\n        name,\n        value,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nconst warnUnknownProperties = function(type, props, canUseEventSystem) {\n  if (__DEV__) {\n    const unknownProps = [];\n    for (const key in props) {\n      const isValid = validateProperty(\n        type,\n        key,\n        props[key],\n        canUseEventSystem,\n      );\n      if (!isValid) {\n        unknownProps.push(key);\n      }\n    }\n\n    const unknownPropString = unknownProps\n      .map(prop => '`' + prop + '`')\n      .join(', ');\n    if (unknownProps.length === 1) {\n      console.error(\n        'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' +\n          'or pass a string or number value to keep it in the DOM. ' +\n          'For details, see https://fb.me/react-attribute-behavior',\n        unknownPropString,\n        type,\n      );\n    } else if (unknownProps.length > 1) {\n      console.error(\n        'Invalid values for props %s on <%s> tag. Either remove them from the element, ' +\n          'or pass a string or number value to keep them in the DOM. ' +\n          'For details, see https://fb.me/react-attribute-behavior',\n        unknownPropString,\n        type,\n      );\n    }\n  }\n};\n\nexport function validateProperties(type, props, canUseEventSystem) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnUnknownProperties(type, props, canUseEventSystem);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {registrationNameModules} from 'legacy-events/EventPluginRegistry';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport endsWith from 'shared/endsWith';\nimport {setListenToResponderEventTypes} from '../events/DeprecatedDOMEventResponderSystem';\n\nimport {\n  getValueForAttribute,\n  getValueForProperty,\n  setValueForProperty,\n} from './DOMPropertyOperations';\nimport {\n  initWrapperState as ReactDOMInputInitWrapperState,\n  getHostProps as ReactDOMInputGetHostProps,\n  postMountWrapper as ReactDOMInputPostMountWrapper,\n  updateChecked as ReactDOMInputUpdateChecked,\n  updateWrapper as ReactDOMInputUpdateWrapper,\n  restoreControlledState as ReactDOMInputRestoreControlledState,\n} from './ReactDOMInput';\nimport {\n  getHostProps as ReactDOMOptionGetHostProps,\n  postMountWrapper as ReactDOMOptionPostMountWrapper,\n  validateProps as ReactDOMOptionValidateProps,\n} from './ReactDOMOption';\nimport {\n  initWrapperState as ReactDOMSelectInitWrapperState,\n  getHostProps as ReactDOMSelectGetHostProps,\n  postMountWrapper as ReactDOMSelectPostMountWrapper,\n  restoreControlledState as ReactDOMSelectRestoreControlledState,\n  postUpdateWrapper as ReactDOMSelectPostUpdateWrapper,\n} from './ReactDOMSelect';\nimport {\n  initWrapperState as ReactDOMTextareaInitWrapperState,\n  getHostProps as ReactDOMTextareaGetHostProps,\n  postMountWrapper as ReactDOMTextareaPostMountWrapper,\n  updateWrapper as ReactDOMTextareaUpdateWrapper,\n  restoreControlledState as ReactDOMTextareaRestoreControlledState,\n} from './ReactDOMTextarea';\nimport {track} from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport {\n  TOP_ERROR,\n  TOP_INVALID,\n  TOP_LOAD,\n  TOP_RESET,\n  TOP_SUBMIT,\n  TOP_TOGGLE,\n} from '../events/DOMTopLevelEventTypes';\nimport {getListenerMapForElement} from '../events/DOMEventListenerMap';\nimport {\n  addResponderEventSystemEvent,\n  removeActiveResponderEventSystemEvent,\n  trapBubbledEvent,\n} from '../events/ReactDOMEventListener.js';\nimport {mediaEventTypes} from '../events/DOMTopLevelEventTypes';\nimport {\n  createDangerousStringForStyles,\n  setValueForStyles,\n  validateShorthandPropertyCollisionInDev,\n} from '../shared/CSSPropertyOperations';\nimport {Namespaces, getIntrinsicNamespace} from '../shared/DOMNamespaces';\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n} from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport {DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE} from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\n\nimport {\n  enableDeprecatedFlareAPI,\n  enableTrustedTypesIntegration,\n} from 'shared/ReactFeatureFlags';\nimport {legacyListenToEvent} from '../events/DOMLegacyEventPluginSystem';\n\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\n\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\nconst DEPRECATED_flareListeners = 'DEPRECATED_flareListeners';\n\nconst {html: HTML_NAMESPACE} = Namespaces;\n\nlet warnedUnknownTags;\nlet suppressHydrationWarning;\n\nlet validatePropertiesInDevelopment;\nlet warnForTextDifference;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\n\nlet normalizeMarkupForTextOrAttribute;\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // Chrome is the only major browser not shipping <time>. But as of July\n    // 2017 it intends to ship it due to widespread usage. We intentionally\n    // *don't* warn for <time> even if it's unrecognized by Chrome because\n    // it soon will be, and many apps have been using it anyway.\n    time: true,\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true,\n  };\n\n  validatePropertiesInDevelopment = function(type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, /* canUseEventSystem */ true);\n  };\n\n  // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  // HTML parsing normalizes CR and CRLF to LF.\n  // It also can turn \\u0000 into \\uFFFD inside attributes.\n  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n  // If we have a mismatch, it might be caused by that.\n  // We will still patch up in this case but not fire the warning.\n  const NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\n  const NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\n  normalizeMarkupForTextOrAttribute = function(markup: mixed): string {\n    const markupString =\n      typeof markup === 'string' ? markup : '' + (markup: any);\n    return markupString\n      .replace(NORMALIZE_NEWLINES_REGEX, '\\n')\n      .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n  };\n\n  warnForTextDifference = function(\n    serverText: string,\n    clientText: string | number,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n    const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n    if (normalizedServerText === normalizedClientText) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Text content did not match. Server: \"%s\" Client: \"%s\"',\n      normalizedServerText,\n      normalizedClientText,\n    );\n  };\n\n  warnForPropDifference = function(\n    propName: string,\n    serverValue: mixed,\n    clientValue: mixed,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(\n      clientValue,\n    );\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(\n      serverValue,\n    );\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Prop `%s` did not match. Server: %s Client: %s',\n      propName,\n      JSON.stringify(normalizedServerValue),\n      JSON.stringify(normalizedClientValue),\n    );\n  };\n\n  warnForExtraAttributes = function(attributeNames: Set<string>) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function(name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function(registrationName, listener) {\n    if (listener === false) {\n      console.error(\n        'Expected `%s` listener to be a function, instead got `false`.\\n\\n' +\n          'If you used to conditionally omit it with %s={condition && value}, ' +\n          'pass %s={condition ? value : undefined} instead.',\n        registrationName,\n        registrationName,\n        registrationName,\n      );\n    } else {\n      console.error(\n        'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n        registrationName,\n        typeof listener,\n      );\n    }\n  };\n\n  // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n  normalizeHTML = function(parent: Element, html: string) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement =\n      parent.namespaceURI === HTML_NAMESPACE\n        ? parent.ownerDocument.createElement(parent.tagName)\n        : parent.ownerDocument.createElementNS(\n            (parent.namespaceURI: any),\n            parent.tagName,\n          );\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\nfunction ensureListeningTo(\n  rootContainerElement: Element | Node,\n  registrationName: string,\n): void {\n  const isDocumentOrFragment =\n    rootContainerElement.nodeType === DOCUMENT_NODE ||\n    rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\n  const doc = isDocumentOrFragment\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n  legacyListenToEvent(registrationName, doc);\n}\n\nfunction getOwnerDocumentFromRootContainer(\n  rootContainerElement: Element | Document,\n): Document {\n  return rootContainerElement.nodeType === DOCUMENT_NODE\n    ? (rootContainerElement: any)\n    : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node: HTMLElement) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(\n  tag: string,\n  domElement: Element,\n  rootContainerElement: Element | Document,\n  nextProps: Object,\n  isCustomComponentTag: boolean,\n): void {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = nextProps[propKey];\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (\n      (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  wasCustomComponentTag: boolean,\n  isCustomComponentTag: boolean,\n): void {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(\n  type: string,\n  props: Object,\n  rootContainerElement: Element | Document,\n  parentNamespace: string,\n): Element {\n  let isCustomComponentTag;\n\n  // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n  const ownerDocument: Document = getOwnerDocumentFromRootContainer(\n    rootContainerElement,\n  );\n  let domElement: Element;\n  let namespaceURI = parentNamespace;\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props);\n      // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error(\n          '<%s /> is using incorrect casing. ' +\n            'Use PascalCase for React components, ' +\n            'or lowercase for HTML elements.',\n          type,\n        );\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error(\n            'Encountered a script tag while rendering React component. ' +\n              'Scripts inside React components are never executed when rendering ' +\n              'on the client. Consider using template tag instead ' +\n              '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).',\n          );\n          didWarnScriptTags = true;\n        }\n      }\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n      const firstChild = ((div.firstChild: any): HTMLScriptElement);\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {is: props.is});\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type);\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n      if (type === 'select') {\n        const node = ((domElement: any): HTMLSelectElement);\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (\n        !isCustomComponentTag &&\n        Object.prototype.toString.call(domElement) ===\n          '[object HTMLUnknownElement]' &&\n        !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)\n      ) {\n        warnedUnknownTags[type] = true;\n        console.error(\n          'The tag <%s> is unrecognized in this browser. ' +\n            'If you meant to render a React component, start its name with ' +\n            'an uppercase letter.',\n          type,\n        );\n      }\n    }\n  }\n\n  return domElement;\n}\n\nexport function createTextNode(\n  text: string,\n  rootContainerElement: Element | Document,\n): Text {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(\n    text,\n  );\n}\n\nexport function setInitialProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  rootContainerElement: Element | Document,\n): void {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  let props: Object;\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      props = rawProps;\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      props = rawProps;\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      props = rawProps;\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      props = rawProps;\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = ReactDOMOptionGetHostProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n\n  setInitialDOMProperties(\n    tag,\n    domElement,\n    rootContainerElement,\n    props,\n    isCustomComponentTag,\n  );\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n}\n\n// Calculate the diff between the two objects.\nexport function diffProperties(\n  domElement: Element,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n  rootContainerElement: Element | Document,\n): null | Array<mixed> {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload: null | Array<any> = null;\n\n  let lastProps: Object;\n  let nextProps: Object;\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'option':\n      lastProps = ReactDOMOptionGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMOptionGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n      if (\n        typeof lastProps.onClick !== 'function' &&\n        typeof nextProps.onClick === 'function'\n      ) {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n  for (propKey in lastProps) {\n    if (\n      nextProps.hasOwnProperty(propKey) ||\n      !lastProps.hasOwnProperty(propKey) ||\n      lastProps[propKey] == null\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\n      // Noop. This is handled by the clear text mechanism.\n    } else if (\n      (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // Noop. It doesn't work on updates anyway.\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n    if (\n      !nextProps.hasOwnProperty(propKey) ||\n      nextProp === lastProp ||\n      (nextProp == null && lastProp == null)\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (\n            lastProp.hasOwnProperty(styleName) &&\n            (!nextProp || !nextProp.hasOwnProperty(styleName))\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = '';\n          }\n        }\n        // Update styles that changed since `lastProp`.\n        for (styleName in nextProp) {\n          if (\n            nextProp.hasOwnProperty(styleName) &&\n            lastProp[styleName] !== nextProp[styleName]\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n          updatePayload.push(propKey, styleUpdates);\n        }\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {\n        // TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (\n        lastProp !== nextProp &&\n        (typeof nextProp === 'string' || typeof nextProp === 'number')\n      ) {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (\n      (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n  return updatePayload;\n}\n\n// Apply the diff.\nexport function updateProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n): void {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (\n    tag === 'input' &&\n    nextRawProps.type === 'radio' &&\n    nextRawProps.name != null\n  ) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps);\n  // Apply the diff.\n  updateDOMProperties(\n    domElement,\n    updatePayload,\n    wasCustomComponentTag,\n    isCustomComponentTag,\n  );\n\n  // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName: string): string | null {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n  return null;\n}\n\nexport function diffHydratedProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  parentNamespace: string,\n  rootContainerElement: Element | Document,\n): null | Array<mixed> {\n  let isCustomComponentTag;\n  let extraAttributeNames: Set<string>;\n\n  if (__DEV__) {\n    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n      switch (name) {\n        // Built-in SSR attribute is whitelisted\n        case 'data-reactroot':\n          break;\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n        case 'checked':\n          break;\n        case 'selected':\n          break;\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = rawProps[propKey];\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (\n      __DEV__ &&\n      // Convince Flow we've calculated it (it's DEV-only in this method.)\n      typeof isCustomComponentTag === 'boolean'\n    ) {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo = getPropertyInfo(propKey);\n      if (suppressHydrationWarning) {\n        // Don't bother comparing. We're ignoring all these warnings.\n      } else if (\n        (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n        propKey === SUPPRESS_HYDRATION_WARNING ||\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        propKey === 'value' ||\n        propKey === 'checked' ||\n        propKey === 'selected'\n      ) {\n        // Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n        const expectedHTML = normalizeHTML(\n          domElement,\n          nextHtml != null ? nextHtml : '',\n        );\n        if (expectedHTML !== serverHTML) {\n          warnForPropDifference(propKey, serverHTML, expectedHTML);\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (isCustomComponentTag) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\n        !shouldRemoveAttribute(\n          propKey,\n          nextProp,\n          propertyInfo,\n          isCustomComponentTag,\n        )\n      ) {\n        let isMismatchDueToBadCasing = false;\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(\n            domElement,\n            propKey,\n            nextProp,\n            propertyInfo,\n          );\n        } else {\n          let ownNamespace = parentNamespace;\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true;\n              // $FlowFixMe - Should be inferred as not undefined.\n              extraAttributeNames.delete(standardName);\n            }\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey);\n          }\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    // $FlowFixMe - Should be inferred as not undefined.\n    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\n      // $FlowFixMe - Should be inferred as not undefined.\n      warnForExtraAttributes(extraAttributeNames);\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  return updatePayload;\n}\n\nexport function diffHydratedText(textNode: Text, text: string): boolean {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\n\nexport function warnForUnmatchedText(textNode: Text, text: string) {\n  if (__DEV__) {\n    warnForTextDifference(textNode.nodeValue, text);\n  }\n}\n\nexport function warnForDeletedHydratableElement(\n  parentNode: Element | Document,\n  child: Element,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain a <%s> in <%s>.',\n      child.nodeName.toLowerCase(),\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForDeletedHydratableText(\n  parentNode: Element | Document,\n  child: Text,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain the text node \"%s\" in <%s>.',\n      child.nodeValue,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedElement(\n  parentNode: Element | Document,\n  tag: string,\n  props: Object,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching <%s> in <%s>.',\n      tag,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedText(\n  parentNode: Element | Document,\n  text: string,\n) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n      text,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function restoreControlledState(\n  domElement: Element,\n  tag: string,\n  props: Object,\n): void {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}\n\nexport function listenToEventResponderEventTypes(\n  eventTypes: Array<string>,\n  document: Document,\n): void {\n  if (enableDeprecatedFlareAPI) {\n    // Get the listening Map for this element. We use this to track\n    // what events we're listening to.\n    const listenerMap = getListenerMapForElement(document);\n\n    // Go through each target event type of the event responder\n    for (let i = 0, length = eventTypes.length; i < length; ++i) {\n      const eventType = eventTypes[i];\n      const isPassive = !endsWith(eventType, '_active');\n      const eventKey = isPassive ? eventType + '_passive' : eventType;\n      const targetEventType = isPassive\n        ? eventType\n        : eventType.substring(0, eventType.length - 7);\n      if (!listenerMap.has(eventKey)) {\n        if (isPassive) {\n          const activeKey = targetEventType + '_active';\n          // If we have an active event listener, do not register\n          // a passive event listener. We use the same active event\n          // listener.\n          if (listenerMap.has(activeKey)) {\n            continue;\n          }\n        } else {\n          // If we have a passive event listener, remove the\n          // existing passive event listener before we add the\n          // active event listener.\n          const passiveKey = targetEventType + '_passive';\n          const passiveListener = listenerMap.get(passiveKey);\n          if (passiveListener != null) {\n            removeActiveResponderEventSystemEvent(\n              document,\n              targetEventType,\n              passiveListener,\n            );\n          }\n        }\n        const eventListener = addResponderEventSystemEvent(\n          document,\n          targetEventType,\n          isPassive,\n        );\n        listenerMap.set(eventKey, eventListener);\n      }\n    }\n  }\n}\n\n// We can remove this once the event API is stable and out of a flag\nif (enableDeprecatedFlareAPI) {\n  setListenToResponderEventTypes(listenToEventResponderEventTypes);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport default function getActiveElement(doc: ?Document): ?Element {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root: Element, offset: number): ?Object {\n  let node = getLeafNode(root);\n  let nodeStart = 0;\n  let nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart,\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nexport default getNodeForCharacterOffset;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getNodeForCharacterOffset from './getNodeForCharacterOffset';\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * @param {DOMElement} outerNode\n * @return {?object}\n */\nexport function getOffsets(outerNode) {\n  const {ownerDocument} = outerNode;\n  const win = (ownerDocument && ownerDocument.defaultView) || window;\n  const selection = win.getSelection && win.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  const {anchorNode, anchorOffset, focusNode, focusOffset} = selection;\n\n  // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n  // expose properties, triggering a \"Permission denied error\" if any of its\n  // properties are accessed. The only seemingly possible way to avoid erroring\n  // is to access a property that typically works for non-anonymous divs and\n  // catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    anchorNode.nodeType;\n    focusNode.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  return getModernOffsetsFromPoints(\n    outerNode,\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n  );\n}\n\n/**\n * Returns {start, end} where `start` is the character/codepoint index of\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n * `end` is the index of (focusNode, focusOffset).\n *\n * Returns null if you pass in garbage input but we should probably just crash.\n *\n * Exported only for testing.\n */\nexport function getModernOffsetsFromPoints(\n  outerNode,\n  anchorNode,\n  anchorOffset,\n  focusNode,\n  focusOffset,\n) {\n  let length = 0;\n  let start = -1;\n  let end = -1;\n  let indexWithinAnchor = 0;\n  let indexWithinFocus = 0;\n  let node = outerNode;\n  let parentNode = null;\n\n  outer: while (true) {\n    let next = null;\n\n    while (true) {\n      if (\n        node === anchorNode &&\n        (anchorOffset === 0 || node.nodeType === TEXT_NODE)\n      ) {\n        start = length + anchorOffset;\n      }\n      if (\n        node === focusNode &&\n        (focusOffset === 0 || node.nodeType === TEXT_NODE)\n      ) {\n        end = length + focusOffset;\n      }\n\n      if (node.nodeType === TEXT_NODE) {\n        length += node.nodeValue.length;\n      }\n\n      if ((next = node.firstChild) === null) {\n        break;\n      }\n      // Moving from `node` to its first child `next`.\n      parentNode = node;\n      node = next;\n    }\n\n    while (true) {\n      if (node === outerNode) {\n        // If `outerNode` has children, this is always the second time visiting\n        // it. If it has no children, this is still the first loop, and the only\n        // valid selection is anchorNode and focusNode both equal to this node\n        // and both offsets 0, in which case we will have handled above.\n        break outer;\n      }\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n        start = length;\n      }\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n        end = length;\n      }\n      if ((next = node.nextSibling) !== null) {\n        break;\n      }\n      node = parentNode;\n      parentNode = node.parentNode;\n    }\n\n    // Moving from `node` to its next sibling `next`.\n    node = next;\n  }\n\n  if (start === -1 || end === -1) {\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\n    // actually inside the passed-in node.)\n    return null;\n  }\n\n  return {\n    start: start,\n    end: end,\n  };\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nexport function setOffsets(node, offsets) {\n  const doc = node.ownerDocument || document;\n  const win = (doc && doc.defaultView) || window;\n\n  // Edge fails with \"Object expected\" in some scenarios.\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n  // fails when pasting 100+ items)\n  if (!win.getSelection) {\n    return;\n  }\n\n  const selection = win.getSelection();\n  const length = node.textContent.length;\n  let start = Math.min(offsets.start, length);\n  let end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    let temp = end;\n    end = start;\n    start = temp;\n  }\n\n  const startMarker = getNodeForCharacterOffset(node, start);\n  const endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    if (\n      selection.rangeCount === 1 &&\n      selection.anchorNode === startMarker.node &&\n      selection.anchorOffset === startMarker.offset &&\n      selection.focusNode === endMarker.node &&\n      selection.focusOffset === endMarker.offset\n    ) {\n      return;\n    }\n    const range = doc.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getActiveElement from './getActiveElement';\n\nimport {getOffsets, setOffsets} from './ReactDOMSelection';\nimport {ELEMENT_NODE, TEXT_NODE} from '../shared/HTMLNodeType';\n\nfunction isTextNode(node) {\n  return node && node.nodeType === TEXT_NODE;\n}\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nfunction isInDocument(node) {\n  return (\n    node &&\n    node.ownerDocument &&\n    containsNode(node.ownerDocument.documentElement, node)\n  );\n}\n\nfunction isSameOriginFrame(iframe) {\n  try {\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n    // to throw, e.g. if it has a cross-origin src attribute.\n    // Safari will show an error in the console when the access results in \"Blocked a frame with origin\". e.g:\n    // iframe.contentDocument.defaultView;\n    // A safety way is to access one of the cross origin properties: Window or Location\n    // Which might result in \"SecurityError\" DOM Exception and it is compatible to Safari.\n    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl\n\n    return typeof iframe.contentWindow.location.href === 'string';\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getActiveElementDeep() {\n  let win = window;\n  let element = getActiveElement();\n  while (element instanceof win.HTMLIFrameElement) {\n    if (isSameOriginFrame(element)) {\n      win = element.contentWindow;\n    } else {\n      return element;\n    }\n    element = getActiveElement(win.document);\n  }\n  return element;\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\n\n/**\n * @hasSelectionCapabilities: we get the element types that support selection\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n * and `selectionEnd` rows.\n */\nexport function hasSelectionCapabilities(elem) {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((nodeName === 'input' &&\n      (elem.type === 'text' ||\n        elem.type === 'search' ||\n        elem.type === 'tel' ||\n        elem.type === 'url' ||\n        elem.type === 'password')) ||\n      nodeName === 'textarea' ||\n      elem.contentEditable === 'true')\n  );\n}\n\nexport function getSelectionInformation() {\n  const focusedElem = getActiveElementDeep();\n  return {\n    // Used by Flare\n    activeElementDetached: null,\n    focusedElem: focusedElem,\n    selectionRange: hasSelectionCapabilities(focusedElem)\n      ? getSelection(focusedElem)\n      : null,\n  };\n}\n\n/**\n * @restoreSelection: If any selection information was potentially lost,\n * restore it. This is useful when performing operations that could remove dom\n * nodes and place them back in, resulting in focus being lost.\n */\nexport function restoreSelection(priorSelectionInformation) {\n  const curFocusedElem = getActiveElementDeep();\n  const priorFocusedElem = priorSelectionInformation.focusedElem;\n  const priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n    if (\n      priorSelectionRange !== null &&\n      hasSelectionCapabilities(priorFocusedElem)\n    ) {\n      setSelection(priorFocusedElem, priorSelectionRange);\n    }\n\n    // Focusing a node can change the scroll position, which is undesirable\n    const ancestors = [];\n    let ancestor = priorFocusedElem;\n    while ((ancestor = ancestor.parentNode)) {\n      if (ancestor.nodeType === ELEMENT_NODE) {\n        ancestors.push({\n          element: ancestor,\n          left: ancestor.scrollLeft,\n          top: ancestor.scrollTop,\n        });\n      }\n    }\n\n    if (typeof priorFocusedElem.focus === 'function') {\n      priorFocusedElem.focus();\n    }\n\n    for (let i = 0; i < ancestors.length; i++) {\n      const info = ancestors[i];\n      info.element.scrollLeft = info.left;\n      info.element.scrollTop = info.top;\n    }\n  }\n}\n\n/**\n * @getSelection: Gets the selection bounds of a focused textarea, input or\n * contentEditable node.\n * -@input: Look up selection bounds of this input\n * -@return {start: selectionStart, end: selectionEnd}\n */\nexport function getSelection(input) {\n  let selection;\n\n  if ('selectionStart' in input) {\n    // Modern browser with input or textarea.\n    selection = {\n      start: input.selectionStart,\n      end: input.selectionEnd,\n    };\n  } else {\n    // Content editable or old IE textarea.\n    selection = getOffsets(input);\n  }\n\n  return selection || {start: 0, end: 0};\n}\n\n/**\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\n * the input.\n * -@input     Set selection bounds of this input or textarea\n * -@offsets   Object of same form that is returned from get*\n */\nexport function setSelection(input, offsets) {\n  let {start, end} = offsets;\n  if (end === undefined) {\n    end = start;\n  }\n\n  if ('selectionStart' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = Math.min(end, input.value.length);\n  } else {\n    setOffsets(input, offsets);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberStackInDev} from 'react-reconciler/src/ReactCurrentFiber';\n\nlet validateDOMNesting = () => {};\nlet updatedAncestorInfo = () => {};\n\nif (__DEV__) {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  const specialTags = [\n    'address',\n    'applet',\n    'area',\n    'article',\n    'aside',\n    'base',\n    'basefont',\n    'bgsound',\n    'blockquote',\n    'body',\n    'br',\n    'button',\n    'caption',\n    'center',\n    'col',\n    'colgroup',\n    'dd',\n    'details',\n    'dir',\n    'div',\n    'dl',\n    'dt',\n    'embed',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'frame',\n    'frameset',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'head',\n    'header',\n    'hgroup',\n    'hr',\n    'html',\n    'iframe',\n    'img',\n    'input',\n    'isindex',\n    'li',\n    'link',\n    'listing',\n    'main',\n    'marquee',\n    'menu',\n    'menuitem',\n    'meta',\n    'nav',\n    'noembed',\n    'noframes',\n    'noscript',\n    'object',\n    'ol',\n    'p',\n    'param',\n    'plaintext',\n    'pre',\n    'script',\n    'section',\n    'select',\n    'source',\n    'style',\n    'summary',\n    'table',\n    'tbody',\n    'td',\n    'template',\n    'textarea',\n    'tfoot',\n    'th',\n    'thead',\n    'title',\n    'tr',\n    'track',\n    'ul',\n    'wbr',\n    'xmp',\n  ];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  const inScopeTags = [\n    'applet',\n    'caption',\n    'html',\n    'table',\n    'td',\n    'th',\n    'marquee',\n    'object',\n    'template',\n\n    // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n    // TODO: Distinguish by namespace here -- for <title>, including it here\n    // errs on the side of fewer warnings\n    'foreignObject',\n    'desc',\n    'title',\n  ];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  const buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  const impliedEndTags = [\n    'dd',\n    'dt',\n    'li',\n    'option',\n    'optgroup',\n    'p',\n    'rp',\n    'rt',\n  ];\n\n  const emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null,\n  };\n\n  updatedAncestorInfo = function(oldInfo, tag) {\n    let ancestorInfo = {...(oldInfo || emptyAncestorInfo)};\n    let info = {tag};\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (\n      specialTags.indexOf(tag) !== -1 &&\n      tag !== 'address' &&\n      tag !== 'div' &&\n      tag !== 'p'\n    ) {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  const isTagValidWithParent = function(tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return (\n          tag === 'th' ||\n          tag === 'td' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return (\n          tag === 'tr' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return (\n          tag === 'caption' ||\n          tag === 'colgroup' ||\n          tag === 'tbody' ||\n          tag === 'tfoot' ||\n          tag === 'thead' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return (\n          tag === 'base' ||\n          tag === 'basefont' ||\n          tag === 'bgsound' ||\n          tag === 'link' ||\n          tag === 'meta' ||\n          tag === 'title' ||\n          tag === 'noscript' ||\n          tag === 'noframes' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body' || tag === 'frameset';\n      case 'frameset':\n        return tag === 'frame';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return (\n          parentTag !== 'h1' &&\n          parentTag !== 'h2' &&\n          parentTag !== 'h3' &&\n          parentTag !== 'h4' &&\n          parentTag !== 'h5' &&\n          parentTag !== 'h6'\n        );\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frameset':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  const findInvalidAncestorForTag = function(tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  const didWarn = {};\n\n  validateDOMNesting = function(childTag, childText, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    const parentInfo = ancestorInfo.current;\n    const parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      if (childTag != null) {\n        console.error(\n          'validateDOMNesting: when childText is passed, childTag should be null',\n        );\n      }\n      childTag = '#text';\n    }\n\n    const invalidParent = isTagValidWithParent(childTag, parentTag)\n      ? null\n      : parentInfo;\n    const invalidAncestor = invalidParent\n      ? null\n      : findInvalidAncestorForTag(childTag, ancestorInfo);\n    const invalidParentOrAncestor = invalidParent || invalidAncestor;\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    const ancestorTag = invalidParentOrAncestor.tag;\n    const addendum = getCurrentFiberStackInDev();\n\n    const warnKey =\n      !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;\n    if (didWarn[warnKey]) {\n      return;\n    }\n    didWarn[warnKey] = true;\n\n    let tagDisplayName = childTag;\n    let whitespaceInfo = '';\n    if (childTag === '#text') {\n      if (/\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo =\n          \" Make sure you don't have any extra whitespace between tags on \" +\n          'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      let info = '';\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info +=\n          ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' +\n          'the browser.';\n      }\n      console.error(\n        'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s',\n        tagDisplayName,\n        ancestorTag,\n        whitespaceInfo,\n        info,\n      );\n    } else {\n      console.error(\n        'validateDOMNesting(...): %s cannot appear as a descendant of ' +\n          '<%s>.',\n        tagDisplayName,\n        ancestorTag,\n      );\n    }\n  };\n}\n\nexport {updatedAncestorInfo, validateDOMNesting};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {RootType} from './ReactDOMRoot';\n\nimport {\n  precacheFiberNode,\n  updateFiberProps,\n  getClosestInstanceFromNode,\n} from './ReactDOMComponentTree';\nimport {\n  createElement,\n  createTextNode,\n  setInitialProperties,\n  diffProperties,\n  updateProperties,\n  diffHydratedProperties,\n  diffHydratedText,\n  trapClickOnNonInteractiveElement,\n  warnForUnmatchedText,\n  warnForDeletedHydratableElement,\n  warnForDeletedHydratableText,\n  warnForInsertedHydratedElement,\n  warnForInsertedHydratedText,\n  listenToEventResponderEventTypes,\n} from './ReactDOMComponent';\nimport {getSelectionInformation, restoreSelection} from './ReactInputSelection';\nimport setTextContent from './setTextContent';\nimport {validateDOMNesting, updatedAncestorInfo} from './validateDOMNesting';\nimport {\n  isEnabled as ReactBrowserEventEmitterIsEnabled,\n  setEnabled as ReactBrowserEventEmitterSetEnabled,\n} from '../events/ReactDOMEventListener';\nimport {getChildNamespace} from '../shared/DOMNamespaces';\nimport {\n  ELEMENT_NODE,\n  TEXT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\nimport dangerousStyleValue from '../shared/dangerousStyleValue';\n\nimport type {\n  ReactDOMEventResponder,\n  ReactDOMEventResponderInstance,\n  ReactDOMFundamentalComponentInstance,\n} from 'shared/ReactDOMTypes';\nimport {\n  mountEventResponder,\n  unmountEventResponder,\n  DEPRECATED_dispatchEventForResponderEventSystem,\n} from '../events/DeprecatedDOMEventResponderSystem';\nimport {retryIfBlockedOn} from '../events/ReactDOMEventReplaying';\n\nimport {\n  enableSuspenseServerRenderer,\n  enableDeprecatedFlareAPI,\n  enableFundamentalAPI,\n} from 'shared/ReactFeatureFlags';\nimport {HostComponent} from 'shared/ReactWorkTags';\nimport {\n  RESPONDER_EVENT_SYSTEM,\n  IS_PASSIVE,\n} from 'legacy-events/EventSystemFlags';\n\nexport type Type = string;\nexport type Props = {\n  autoFocus?: boolean,\n  children?: mixed,\n  hidden?: boolean,\n  suppressHydrationWarning?: boolean,\n  dangerouslySetInnerHTML?: mixed,\n  style?: {display?: string, ...},\n  bottom?: null | number,\n  left?: null | number,\n  right?: null | number,\n  top?: null | number,\n  ...\n};\nexport type EventTargetChildElement = {\n  type: string,\n  props: null | {\n    style?: {\n      position?: string,\n      zIndex?: number,\n      bottom?: string,\n      left?: string,\n      right?: string,\n      top?: string,\n      ...\n    },\n    ...\n  },\n  ...\n};\nexport type Container =\n  | (Element & {_reactRootContainer?: RootType, ...})\n  | (Document & {_reactRootContainer?: RootType, ...});\nexport type Instance = Element;\nexport type TextInstance = Text;\nexport type SuspenseInstance = Comment & {_reactRetry?: () => void, ...};\nexport type HydratableInstance = Instance | TextInstance | SuspenseInstance;\nexport type PublicInstance = Element | Text;\ntype HostContextDev = {\n  namespace: string,\n  ancestorInfo: mixed,\n  ...\n};\ntype HostContextProd = string;\nexport type HostContext = HostContextDev | HostContextProd;\nexport type UpdatePayload = Array<mixed>;\nexport type ChildSet = void; // Unused\nexport type TimeoutHandle = TimeoutID;\nexport type NoTimeout = -1;\n\ntype SelectionInformation = {|\n  activeElementDetached: null | HTMLElement,\n  focusedElem: null | HTMLElement,\n  selectionRange: mixed,\n|};\n\nlet SUPPRESS_HYDRATION_WARNING;\nif (__DEV__) {\n  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\n}\n\nconst SUSPENSE_START_DATA = '$';\nconst SUSPENSE_END_DATA = '/$';\nconst SUSPENSE_PENDING_START_DATA = '$?';\nconst SUSPENSE_FALLBACK_START_DATA = '$!';\n\nconst STYLE = 'style';\n\nlet eventsEnabled: ?boolean = null;\nlet selectionInformation: null | SelectionInformation = null;\n\nfunction shouldAutoFocusHostComponent(type: string, props: Props): boolean {\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      return !!props.autoFocus;\n  }\n  return false;\n}\n\nexport * from 'shared/HostConfigWithNoPersistence';\n\nexport function getRootHostContext(\n  rootContainerInstance: Container,\n): HostContext {\n  let type;\n  let namespace;\n  const nodeType = rootContainerInstance.nodeType;\n  switch (nodeType) {\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE: {\n      type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n      let root = (rootContainerInstance: any).documentElement;\n      namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n      break;\n    }\n    default: {\n      const container: any =\n        nodeType === COMMENT_NODE\n          ? rootContainerInstance.parentNode\n          : rootContainerInstance;\n      const ownNamespace = container.namespaceURI || null;\n      type = container.tagName;\n      namespace = getChildNamespace(ownNamespace, type);\n      break;\n    }\n  }\n  if (__DEV__) {\n    const validatedTag = type.toLowerCase();\n    const ancestorInfo = updatedAncestorInfo(null, validatedTag);\n    return {namespace, ancestorInfo};\n  }\n  return namespace;\n}\n\nexport function getChildHostContext(\n  parentHostContext: HostContext,\n  type: string,\n  rootContainerInstance: Container,\n): HostContext {\n  if (__DEV__) {\n    const parentHostContextDev = ((parentHostContext: any): HostContextDev);\n    const namespace = getChildNamespace(parentHostContextDev.namespace, type);\n    const ancestorInfo = updatedAncestorInfo(\n      parentHostContextDev.ancestorInfo,\n      type,\n    );\n    return {namespace, ancestorInfo};\n  }\n  const parentNamespace = ((parentHostContext: any): HostContextProd);\n  return getChildNamespace(parentNamespace, type);\n}\n\nexport function getPublicInstance(instance: Instance): * {\n  return instance;\n}\n\nexport function prepareForCommit(containerInfo: Container): void {\n  // true\n  eventsEnabled = ReactBrowserEventEmitterIsEnabled();\n  selectionInformation = getSelectionInformation();\n  ReactBrowserEventEmitterSetEnabled(false);\n}\n\nexport function resetAfterCommit(containerInfo: Container): void {\n  restoreSelection(selectionInformation);\n  ReactBrowserEventEmitterSetEnabled(eventsEnabled);\n  eventsEnabled = null;\n  if (enableDeprecatedFlareAPI) {\n    const activeElementDetached = (selectionInformation: any)\n      .activeElementDetached;\n    if (activeElementDetached !== null) {\n      dispatchDetachedBlur(activeElementDetached);\n    }\n  }\n  selectionInformation = null;\n}\n\nexport function createInstance(\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): Instance {\n  let parentNamespace: string;\n  if (__DEV__) {\n    // TODO: take namespace into account when validating.\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    validateDOMNesting(type, null, hostContextDev.ancestorInfo);\n    if (\n      typeof props.children === 'string' ||\n      typeof props.children === 'number'\n    ) {\n      const string = '' + props.children;\n      const ownAncestorInfo = updatedAncestorInfo(\n        hostContextDev.ancestorInfo,\n        type,\n      );\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n    parentNamespace = hostContextDev.namespace;\n  } else {\n    parentNamespace = ((hostContext: any): HostContextProd);\n  }\n  const domElement: Instance = createElement(\n    type,\n    props,\n    rootContainerInstance,\n    parentNamespace,\n  );\n  precacheFiberNode(internalInstanceHandle, domElement);\n  updateFiberProps(domElement, props);\n  return domElement;\n}\n\nexport function appendInitialChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance.appendChild(child);\n}\n\nexport function finalizeInitialChildren(\n  domElement: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  setInitialProperties(domElement, type, props, rootContainerInstance);\n  return shouldAutoFocusHostComponent(type, props);\n}\n\nexport function prepareUpdate(\n  domElement: Instance,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): null | Array<mixed> {\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    if (\n      typeof newProps.children !== typeof oldProps.children &&\n      (typeof newProps.children === 'string' ||\n        typeof newProps.children === 'number')\n    ) {\n      const string = '' + newProps.children;\n      const ownAncestorInfo = updatedAncestorInfo(\n        hostContextDev.ancestorInfo,\n        type,\n      );\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n  }\n  return diffProperties(\n    domElement,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n  );\n}\n\nexport function shouldSetTextContent(type: string, props: Props): boolean {\n  return (\n    type === 'textarea' ||\n    type === 'option' ||\n    type === 'noscript' ||\n    typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    (typeof props.dangerouslySetInnerHTML === 'object' &&\n      props.dangerouslySetInnerHTML !== null &&\n      props.dangerouslySetInnerHTML.__html != null)\n  );\n}\n\nexport function shouldDeprioritizeSubtree(type: string, props: Props): boolean {\n  return !!props.hidden;\n}\n\nexport function createTextInstance(\n  text: string,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): TextInstance {\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    validateDOMNesting(null, text, hostContextDev.ancestorInfo);\n  }\n  const textNode: TextInstance = createTextNode(text, rootContainerInstance);\n  precacheFiberNode(internalInstanceHandle, textNode);\n  return textNode;\n}\n\nexport const isPrimaryRenderer = true;\nexport const warnsIfNotActing = true;\n// This initialization code may run even on server environments\n// if a component just imports ReactDOM (e.g. for findDOMNode).\n// Some environments might not have setTimeout or clearTimeout.\nexport const scheduleTimeout: any =\n  typeof setTimeout === 'function' ? setTimeout : (undefined: any);\nexport const cancelTimeout: any =\n  typeof clearTimeout === 'function' ? clearTimeout : (undefined: any);\nexport const noTimeout = -1;\n\n// -------------------\n//     Mutation\n// -------------------\n\nexport const supportsMutation = true;\n\nexport function commitMount(\n  domElement: Instance,\n  type: string,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Despite the naming that might imply otherwise, this method only\n  // fires if there is an `Update` effect scheduled during mounting.\n  // This happens if `finalizeInitialChildren` returns `true` (which it\n  // does to implement the `autoFocus` attribute on the client). But\n  // there are also other cases when this might happen (such as patching\n  // up text content during hydration mismatch). So we'll check this again.\n  if (shouldAutoFocusHostComponent(type, newProps)) {\n    ((domElement: any):\n      | HTMLButtonElement\n      | HTMLInputElement\n      | HTMLSelectElement\n      | HTMLTextAreaElement).focus();\n  }\n}\n\nexport function commitUpdate(\n  domElement: Instance,\n  updatePayload: Array<mixed>,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Update the props handle so that we know which props are the ones with\n  // with current event handlers.\n  updateFiberProps(domElement, newProps);\n  // Apply the diff to the DOM node.\n  updateProperties(domElement, updatePayload, type, oldProps, newProps);\n}\n\nexport function resetTextContent(domElement: Instance): void {\n  setTextContent(domElement, '');\n}\n\nexport function commitTextUpdate(\n  textInstance: TextInstance,\n  oldText: string,\n  newText: string,\n): void {\n  textInstance.nodeValue = newText;\n}\n\nexport function appendChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance.appendChild(child);\n}\n\nexport function appendChildToContainer(\n  container: Container,\n  child: Instance | TextInstance,\n): void {\n  let parentNode;\n  if (container.nodeType === COMMENT_NODE) {\n    parentNode = (container.parentNode: any);\n    parentNode.insertBefore(child, container);\n  } else {\n    parentNode = container;\n    parentNode.appendChild(child);\n  }\n  // This container might be used for a portal.\n  // If something inside a portal is clicked, that click should bubble\n  // through the React tree. However, on Mobile Safari the click would\n  // never bubble through the *DOM* tree unless an ancestor with onclick\n  // event exists. So we wouldn't see it and dispatch it.\n  // This is why we ensure that non React root containers have inline onclick\n  // defined.\n  // https://github.com/facebook/react/issues/11918\n  const reactRootContainer = container._reactRootContainer;\n  if (\n    (reactRootContainer === null || reactRootContainer === undefined) &&\n    parentNode.onclick === null\n  ) {\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\n    trapClickOnNonInteractiveElement(((parentNode: any): HTMLElement));\n  }\n}\n\nexport function insertBefore(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance | SuspenseInstance,\n): void {\n  parentInstance.insertBefore(child, beforeChild);\n}\n\nexport function insertInContainerBefore(\n  container: Container,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance | SuspenseInstance,\n): void {\n  // 如果父容器是注释节点\n  if (container.nodeType === COMMENT_NODE) {\n    // 找到注释节点的父级节点 因为注释节点没法调用 insertBefore\n    (container.parentNode: any).insertBefore(child, beforeChild);\n  } else {\n    // 将 child 插入到 beforeChild 的前面\n    container.insertBefore(child, beforeChild);\n  }\n}\n\nfunction dispatchBeforeDetachedBlur(target: HTMLElement): void {\n  const targetInstance = getClosestInstanceFromNode(target);\n  ((selectionInformation: any): SelectionInformation).activeElementDetached = target;\n\n  DEPRECATED_dispatchEventForResponderEventSystem(\n    'beforeblur',\n    targetInstance,\n    ({\n      target,\n      timeStamp: Date.now(),\n    }: any),\n    target,\n    RESPONDER_EVENT_SYSTEM | IS_PASSIVE,\n  );\n}\n\nfunction dispatchDetachedBlur(target: HTMLElement): void {\n  DEPRECATED_dispatchEventForResponderEventSystem(\n    'blur',\n    null,\n    ({\n      isTargetAttached: false,\n      target,\n      timeStamp: Date.now(),\n    }: any),\n    target,\n    RESPONDER_EVENT_SYSTEM | IS_PASSIVE,\n  );\n}\n\n// This is a specific event for the React Flare\n// event system, so event responders can act\n// accordingly to a DOM node being unmounted that\n// previously had active document focus.\nexport function beforeRemoveInstance(\n  instance: Instance | TextInstance | SuspenseInstance,\n): void {\n  if (\n    enableDeprecatedFlareAPI &&\n    selectionInformation &&\n    instance === selectionInformation.focusedElem\n  ) {\n    dispatchBeforeDetachedBlur(((instance: any): HTMLElement));\n  }\n}\n\nexport function removeChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance | SuspenseInstance,\n): void {\n  parentInstance.removeChild(child);\n}\n\nexport function removeChildFromContainer(\n  container: Container,\n  child: Instance | TextInstance | SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    (container.parentNode: any).removeChild(child);\n  } else {\n    container.removeChild(child);\n  }\n}\n\nexport function clearSuspenseBoundary(\n  parentInstance: Instance,\n  suspenseInstance: SuspenseInstance,\n): void {\n  let node = suspenseInstance;\n  // Delete all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  do {\n    let nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && nextNode.nodeType === COMMENT_NODE) {\n      let data = ((nextNode: any).data: string);\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          parentInstance.removeChild(nextNode);\n          // Retry if any event replaying was blocked on this.\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        } else {\n          depth--;\n        }\n      } else if (\n        data === SUSPENSE_START_DATA ||\n        data === SUSPENSE_PENDING_START_DATA ||\n        data === SUSPENSE_FALLBACK_START_DATA\n      ) {\n        depth++;\n      }\n    }\n    node = nextNode;\n  } while (node);\n  // TODO: Warn, we didn't find the end comment boundary.\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(suspenseInstance);\n}\n\nexport function clearSuspenseBoundaryFromContainer(\n  container: Container,\n  suspenseInstance: SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    clearSuspenseBoundary((container.parentNode: any), suspenseInstance);\n  } else if (container.nodeType === ELEMENT_NODE) {\n    clearSuspenseBoundary((container: any), suspenseInstance);\n  } else {\n    // Document nodes should never contain suspense boundaries.\n  }\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(container);\n}\n\nfunction instanceContainsElem(instance: Instance, element: HTMLElement) {\n  let fiber = getClosestInstanceFromNode(element);\n  while (fiber !== null) {\n    if (fiber.tag === HostComponent && fiber.stateNode === element) {\n      return true;\n    }\n    fiber = fiber.return;\n  }\n  return false;\n}\n\nexport function hideInstance(instance: Instance): void {\n  // Ensure we trigger `onBeforeBlur` if the active focused elment\n  // is ether the instance of a child or the instance. We need\n  // to traverse the Fiber tree here rather than use node.contains()\n  // as the child node might be inside a Portal.\n  if (enableDeprecatedFlareAPI && selectionInformation) {\n    const focusedElem = selectionInformation.focusedElem;\n    if (focusedElem !== null && instanceContainsElem(instance, focusedElem)) {\n      dispatchBeforeDetachedBlur(((focusedElem: any): HTMLElement));\n    }\n  }\n  // TODO: Does this work for all element types? What about MathML? Should we\n  // pass host context to this method?\n  instance = ((instance: any): HTMLElement);\n  const style = instance.style;\n  if (typeof style.setProperty === 'function') {\n    style.setProperty('display', 'none', 'important');\n  } else {\n    style.display = 'none';\n  }\n}\n\nexport function hideTextInstance(textInstance: TextInstance): void {\n  textInstance.nodeValue = '';\n}\n\nexport function unhideInstance(instance: Instance, props: Props): void {\n  instance = ((instance: any): HTMLElement);\n  const styleProp = props[STYLE];\n  const display =\n    styleProp !== undefined &&\n    styleProp !== null &&\n    styleProp.hasOwnProperty('display')\n      ? styleProp.display\n      : null;\n  instance.style.display = dangerousStyleValue('display', display);\n}\n\nexport function unhideTextInstance(\n  textInstance: TextInstance,\n  text: string,\n): void {\n  textInstance.nodeValue = text;\n}\n\n// -------------------\n//     Hydration\n// -------------------\n\nexport const supportsHydration = true;\n\nexport function canHydrateInstance(\n  instance: HydratableInstance,\n  type: string,\n  props: Props,\n): null | Instance {\n  if (\n    instance.nodeType !== ELEMENT_NODE ||\n    type.toLowerCase() !== instance.nodeName.toLowerCase()\n  ) {\n    return null;\n  }\n  // This has now been refined to an element node.\n  return ((instance: any): Instance);\n}\n\nexport function canHydrateTextInstance(\n  instance: HydratableInstance,\n  text: string,\n): null | TextInstance {\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a text node.\n  return ((instance: any): TextInstance);\n}\n\nexport function canHydrateSuspenseInstance(\n  instance: HydratableInstance,\n): null | SuspenseInstance {\n  if (instance.nodeType !== COMMENT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a suspense node.\n  return ((instance: any): SuspenseInstance);\n}\n\nexport function isSuspenseInstancePending(instance: SuspenseInstance) {\n  return instance.data === SUSPENSE_PENDING_START_DATA;\n}\n\nexport function isSuspenseInstanceFallback(instance: SuspenseInstance) {\n  return instance.data === SUSPENSE_FALLBACK_START_DATA;\n}\n\nexport function registerSuspenseInstanceRetry(\n  instance: SuspenseInstance,\n  callback: () => void,\n) {\n  instance._reactRetry = callback;\n}\n\nfunction getNextHydratable(node) {\n  // Skip non-hydratable nodes.\n  for (; node != null; node = node.nextSibling) {\n    const nodeType = node.nodeType;\n    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {\n      break;\n    }\n    if (enableSuspenseServerRenderer) {\n      if (nodeType === COMMENT_NODE) {\n        const nodeData = (node: any).data;\n        if (\n          nodeData === SUSPENSE_START_DATA ||\n          nodeData === SUSPENSE_FALLBACK_START_DATA ||\n          nodeData === SUSPENSE_PENDING_START_DATA\n        ) {\n          break;\n        }\n      }\n    }\n  }\n  return (node: any);\n}\n\nexport function getNextHydratableSibling(\n  instance: HydratableInstance,\n): null | HydratableInstance {\n  return getNextHydratable(instance.nextSibling);\n}\n\nexport function getFirstHydratableChild(\n  parentInstance: Container | Instance,\n): null | HydratableInstance {\n  return getNextHydratable(parentInstance.firstChild);\n}\n\nexport function hydrateInstance(\n  instance: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): null | Array<mixed> {\n  precacheFiberNode(internalInstanceHandle, instance);\n  // TODO: Possibly defer this until the commit phase where all the events\n  // get attached.\n  updateFiberProps(instance, props);\n  let parentNamespace: string;\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    parentNamespace = hostContextDev.namespace;\n  } else {\n    parentNamespace = ((hostContext: any): HostContextProd);\n  }\n  return diffHydratedProperties(\n    instance,\n    type,\n    props,\n    parentNamespace,\n    rootContainerInstance,\n  );\n}\n\nexport function hydrateTextInstance(\n  textInstance: TextInstance,\n  text: string,\n  internalInstanceHandle: Object,\n): boolean {\n  precacheFiberNode(internalInstanceHandle, textInstance);\n  return diffHydratedText(textInstance, text);\n}\n\nexport function hydrateSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n  internalInstanceHandle: Object,\n) {\n  precacheFiberNode(internalInstanceHandle, suspenseInstance);\n}\n\nexport function getNextHydratableInstanceAfterSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n): null | HydratableInstance {\n  let node = suspenseInstance.nextSibling;\n  // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      let data = ((node: any).data: string);\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          return getNextHydratableSibling((node: any));\n        } else {\n          depth--;\n        }\n      } else if (\n        data === SUSPENSE_START_DATA ||\n        data === SUSPENSE_FALLBACK_START_DATA ||\n        data === SUSPENSE_PENDING_START_DATA\n      ) {\n        depth++;\n      }\n    }\n    node = node.nextSibling;\n  }\n  // TODO: Warn, we didn't find the end comment boundary.\n  return null;\n}\n\n// Returns the SuspenseInstance if this node is a direct child of a\n// SuspenseInstance. I.e. if its previous sibling is a Comment with\n// SUSPENSE_x_START_DATA. Otherwise, null.\nexport function getParentSuspenseInstance(\n  targetInstance: Instance,\n): null | SuspenseInstance {\n  let node = targetInstance.previousSibling;\n  // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      let data = ((node: any).data: string);\n      if (\n        data === SUSPENSE_START_DATA ||\n        data === SUSPENSE_FALLBACK_START_DATA ||\n        data === SUSPENSE_PENDING_START_DATA\n      ) {\n        if (depth === 0) {\n          return ((node: any): SuspenseInstance);\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_END_DATA) {\n        depth++;\n      }\n    }\n    node = node.previousSibling;\n  }\n  return null;\n}\n\nexport function commitHydratedContainer(container: Container): void {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(container);\n}\n\nexport function commitHydratedSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n): void {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(suspenseInstance);\n}\n\nexport function didNotMatchHydratedContainerTextInstance(\n  parentContainer: Container,\n  textInstance: TextInstance,\n  text: string,\n) {\n  if (__DEV__) {\n    warnForUnmatchedText(textInstance, text);\n  }\n}\n\nexport function didNotMatchHydratedTextInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  textInstance: TextInstance,\n  text: string,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForUnmatchedText(textInstance, text);\n  }\n}\n\nexport function didNotHydrateContainerInstance(\n  parentContainer: Container,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentContainer, (instance: any));\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentContainer, (instance: any));\n    }\n  }\n}\n\nexport function didNotHydrateInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  instance: HydratableInstance,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentInstance, (instance: any));\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentInstance, (instance: any));\n    }\n  }\n}\n\nexport function didNotFindHydratableContainerInstance(\n  parentContainer: Container,\n  type: string,\n  props: Props,\n) {\n  if (__DEV__) {\n    warnForInsertedHydratedElement(parentContainer, type, props);\n  }\n}\n\nexport function didNotFindHydratableContainerTextInstance(\n  parentContainer: Container,\n  text: string,\n) {\n  if (__DEV__) {\n    warnForInsertedHydratedText(parentContainer, text);\n  }\n}\n\nexport function didNotFindHydratableContainerSuspenseInstance(\n  parentContainer: Container,\n) {\n  if (__DEV__) {\n    // TODO: warnForInsertedHydratedSupsense(parentContainer);\n  }\n}\n\nexport function didNotFindHydratableInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  type: string,\n  props: Props,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForInsertedHydratedElement(parentInstance, type, props);\n  }\n}\n\nexport function didNotFindHydratableTextInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  text: string,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForInsertedHydratedText(parentInstance, text);\n  }\n}\n\nexport function didNotFindHydratableSuspenseInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    // TODO: warnForInsertedHydratedSuspense(parentInstance);\n  }\n}\n\nexport function DEPRECATED_mountResponderInstance(\n  responder: ReactDOMEventResponder,\n  responderInstance: ReactDOMEventResponderInstance,\n  responderProps: Object,\n  responderState: Object,\n  instance: Instance,\n): ReactDOMEventResponderInstance {\n  // Listen to events\n  const doc = instance.ownerDocument;\n  const {targetEventTypes} = ((responder: any): ReactDOMEventResponder);\n  if (targetEventTypes !== null) {\n    listenToEventResponderEventTypes(targetEventTypes, doc);\n  }\n  mountEventResponder(\n    responder,\n    responderInstance,\n    responderProps,\n    responderState,\n  );\n  return responderInstance;\n}\n\nexport function DEPRECATED_unmountResponderInstance(\n  responderInstance: ReactDOMEventResponderInstance,\n): void {\n  if (enableDeprecatedFlareAPI) {\n    // TODO stop listening to targetEventTypes\n    unmountEventResponder(responderInstance);\n  }\n}\n\nexport function getFundamentalComponentInstance(\n  fundamentalInstance: ReactDOMFundamentalComponentInstance,\n): Instance {\n  if (enableFundamentalAPI) {\n    const {currentFiber, impl, props, state} = fundamentalInstance;\n    const instance = impl.getInstance(null, props, state);\n    precacheFiberNode(currentFiber, instance);\n    return instance;\n  }\n  // Because of the flag above, this gets around the Flow error;\n  return (null: any);\n}\n\nexport function mountFundamentalComponent(\n  fundamentalInstance: ReactDOMFundamentalComponentInstance,\n): void {\n  if (enableFundamentalAPI) {\n    const {impl, instance, props, state} = fundamentalInstance;\n    const onMount = impl.onMount;\n    if (onMount !== undefined) {\n      onMount(null, instance, props, state);\n    }\n  }\n}\n\nexport function shouldUpdateFundamentalComponent(\n  fundamentalInstance: ReactDOMFundamentalComponentInstance,\n): boolean {\n  if (enableFundamentalAPI) {\n    const {impl, prevProps, props, state} = fundamentalInstance;\n    const shouldUpdate = impl.shouldUpdate;\n    if (shouldUpdate !== undefined) {\n      return shouldUpdate(null, prevProps, props, state);\n    }\n  }\n  return true;\n}\n\nexport function updateFundamentalComponent(\n  fundamentalInstance: ReactDOMFundamentalComponentInstance,\n): void {\n  if (enableFundamentalAPI) {\n    const {impl, instance, prevProps, props, state} = fundamentalInstance;\n    const onUpdate = impl.onUpdate;\n    if (onUpdate !== undefined) {\n      onUpdate(null, instance, prevProps, props, state);\n    }\n  }\n}\n\nexport function unmountFundamentalComponent(\n  fundamentalInstance: ReactDOMFundamentalComponentInstance,\n): void {\n  if (enableFundamentalAPI) {\n    const {impl, instance, props, state} = fundamentalInstance;\n    const onUnmount = impl.onUnmount;\n    if (onUnmount !== undefined) {\n      onUnmount(null, instance, props, state);\n    }\n  }\n}\n\nexport function getInstanceFromNode(node: HTMLElement): null | Object {\n  return getClosestInstanceFromNode(node) || null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from 'shared/ReactWorkTags';\nimport invariant from 'shared/invariant';\n\nimport {getParentSuspenseInstance} from './ReactDOMHostConfig';\n\nconst randomKey = Math.random()\n  .toString(36)\n  .slice(2);\nconst internalInstanceKey = '__reactInternalInstance$' + randomKey;\nconst internalEventHandlersKey = '__reactEventHandlers$' + randomKey;\nconst internalContainerInstanceKey = '__reactContainere$' + randomKey;\n\nexport function precacheFiberNode(hostInst, node) {\n  node[internalInstanceKey] = hostInst;\n}\n\nexport function markContainerAsRoot(hostRoot, node) {\n  node[internalContainerInstanceKey] = hostRoot;\n}\n\nexport function unmarkContainerAsRoot(node) {\n  node[internalContainerInstanceKey] = null;\n}\n\nexport function isContainerMarkedAsRoot(node) {\n  return !!node[internalContainerInstanceKey];\n}\n\n// Given a DOM node, return the closest HostComponent or HostText fiber ancestor.\n// If the target node is part of a hydrated or not yet rendered subtree, then\n// this may also return a SuspenseComponent or HostRoot to indicate that.\n// Conceptually the HostRoot fiber is a child of the Container node. So if you\n// pass the Container node as the targetNode, you will not actually get the\n// HostRoot back. To get to the HostRoot, you need to pass a child of it.\n// The same thing applies to Suspense boundaries.\nexport function getClosestInstanceFromNode(targetNode) {\n  let targetInst = targetNode[internalInstanceKey];\n  if (targetInst) {\n    // Don't return HostRoot or SuspenseComponent here.\n    return targetInst;\n  }\n  // If the direct event target isn't a React owned DOM node, we need to look\n  // to see if one of its parents is a React owned DOM node.\n  let parentNode = targetNode.parentNode;\n  while (parentNode) {\n    // We'll check if this is a container root that could include\n    // React nodes in the future. We need to check this first because\n    // if we're a child of a dehydrated container, we need to first\n    // find that inner container before moving on to finding the parent\n    // instance. Note that we don't check this field on  the targetNode\n    // itself because the fibers are conceptually between the container\n    // node and the first child. It isn't surrounding the container node.\n    // If it's not a container, we check if it's an instance.\n    targetInst =\n      parentNode[internalContainerInstanceKey] ||\n      parentNode[internalInstanceKey];\n    if (targetInst) {\n      // Since this wasn't the direct target of the event, we might have\n      // stepped past dehydrated DOM nodes to get here. However they could\n      // also have been non-React nodes. We need to answer which one.\n\n      // If we the instance doesn't have any children, then there can't be\n      // a nested suspense boundary within it. So we can use this as a fast\n      // bailout. Most of the time, when people add non-React children to\n      // the tree, it is using a ref to a child-less DOM node.\n      // Normally we'd only need to check one of the fibers because if it\n      // has ever gone from having children to deleting them or vice versa\n      // it would have deleted the dehydrated boundary nested inside already.\n      // However, since the HostRoot starts out with an alternate it might\n      // have one on the alternate so we need to check in case this was a\n      // root.\n      const alternate = targetInst.alternate;\n      if (\n        targetInst.child !== null ||\n        (alternate !== null && alternate.child !== null)\n      ) {\n        // Next we need to figure out if the node that skipped past is\n        // nested within a dehydrated boundary and if so, which one.\n        let suspenseInstance = getParentSuspenseInstance(targetNode);\n        while (suspenseInstance !== null) {\n          // We found a suspense instance. That means that we haven't\n          // hydrated it yet. Even though we leave the comments in the\n          // DOM after hydrating, and there are boundaries in the DOM\n          // that could already be hydrated, we wouldn't have found them\n          // through this pass since if the target is hydrated it would\n          // have had an internalInstanceKey on it.\n          // Let's get the fiber associated with the SuspenseComponent\n          // as the deepest instance.\n          let targetSuspenseInst = suspenseInstance[internalInstanceKey];\n          if (targetSuspenseInst) {\n            return targetSuspenseInst;\n          }\n          // If we don't find a Fiber on the comment, it might be because\n          // we haven't gotten to hydrate it yet. There might still be a\n          // parent boundary that hasn't above this one so we need to find\n          // the outer most that is known.\n          suspenseInstance = getParentSuspenseInstance(suspenseInstance);\n          // If we don't find one, then that should mean that the parent\n          // host component also hasn't hydrated yet. We can return it\n          // below since it will bail out on the isMounted check later.\n        }\n      }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nexport function getInstanceFromNode(node) {\n  const inst = node[internalInstanceKey] || node[internalContainerInstanceKey];\n  if (inst) {\n    if (\n      inst.tag === HostComponent ||\n      inst.tag === HostText ||\n      inst.tag === SuspenseComponent ||\n      inst.tag === HostRoot\n    ) {\n      return inst;\n    } else {\n      return null;\n    }\n  }\n  return null;\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nexport function getNodeFromInstance(inst) {\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber this, is just the state node right now. We assume it will be\n    // a host component or host text.\n    return inst.stateNode;\n  }\n\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  invariant(false, 'getNodeFromInstance: Invalid argument.');\n}\n\nexport function getFiberCurrentPropsFromNode(node) {\n  return node[internalEventHandlersKey] || null;\n}\n\nexport function updateFiberProps(node, props) {\n  node[internalEventHandlersKey] = props;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {HostComponent} from './ReactWorkTags';\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nexport function getLowestCommonAncestor(instA, instB) {\n  let depthA = 0;\n  for (let tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  let depthB = 0;\n  for (let tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  let depth = depthA;\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nexport function isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n    instB = getParent(instB);\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nexport function getParentInstance(inst) {\n  return getParent(inst);\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nexport function traverseTwoPhase(inst, fn, arg) {\n  const path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  let i;\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nexport function traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  const common = from && to ? getLowestCommonAncestor(from, to) : null;\n  const pathFrom = [];\n  while (true) {\n    if (!from) {\n      break;\n    }\n    if (from === common) {\n      break;\n    }\n    const alternate = from.alternate;\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n    pathFrom.push(from);\n    from = getParent(from);\n  }\n  const pathTo = [];\n  while (true) {\n    if (!to) {\n      break;\n    }\n    if (to === common) {\n      break;\n    }\n    const alternate = to.alternate;\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n    pathTo.push(to);\n    to = getParent(to);\n  }\n  for (let i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (let i = pathTo.length; i-- > 0; ) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\n\nimport invariant from 'shared/invariant';\n\nimport {getFiberCurrentPropsFromNode} from './EventPluginUtils';\n\nfunction isInteractive(tag) {\n  return (\n    tag === 'button' ||\n    tag === 'input' ||\n    tag === 'select' ||\n    tag === 'textarea'\n  );\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n    case 'onMouseEnter':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\nexport default function getListener(inst: Fiber, registrationName: string) {\n  let listener;\n\n  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n  // live here; needs to be moved to a better place soon\n  const stateNode = inst.stateNode;\n  if (!stateNode) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (!props) {\n    // Work in progress.\n    return null;\n  }\n  listener = props[registrationName];\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n  invariant(\n    !listener || typeof listener === 'function',\n    'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n    registrationName,\n    typeof listener,\n  );\n  return listener;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  getParentInstance,\n  traverseTwoPhase,\n  traverseEnterLeave,\n} from 'shared/ReactTreeTraversal';\n\nimport getListener from 'legacy-events/getListener';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\n\ntype PropagationPhases = 'bubbled' | 'captured';\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase: PropagationPhases) {\n  const registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing even a\n * single one.\n */\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (__DEV__) {\n    if (!inst) {\n      console.error('Dispatching inst must not be null');\n    }\n  }\n  const listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener,\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    const targetInst = event._targetInst;\n    const parentInst = targetInst ? getParentInstance(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    const registrationName = event.dispatchConfig.registrationName;\n    const listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener,\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nexport function accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nexport function accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nexport function accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nexport function accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * These variables store information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n *\n */\n\nlet root = null;\nlet startText = null;\nlet fallbackText = null;\n\nexport function initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\n\nexport function reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\n\nexport function getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  let start;\n  const startValue = startText;\n  const startLength = startValue.length;\n  let end;\n  const endValue = getText();\n  const endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  const minEnd = startLength - start;\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  const sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\n\nexport function getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n  return root.textContent;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint valid-typeof: 0 */\n\nimport invariant from 'shared/invariant';\n\nconst EVENT_POOL_SIZE = 10;\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null,\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  const Interface = this.constructor.Interface;\n  for (const propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    const normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  const defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    const Interface = this.constructor.Interface;\n    for (const propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName]),\n        );\n      } else {\n        this[propName] = null;\n      }\n    }\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n    if (__DEV__) {\n      Object.defineProperty(\n        this,\n        'nativeEvent',\n        getPooledWarningPropertyDefinition('nativeEvent', null),\n      );\n      Object.defineProperty(\n        this,\n        'isDefaultPrevented',\n        getPooledWarningPropertyDefinition(\n          'isDefaultPrevented',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'isPropagationStopped',\n        getPooledWarningPropertyDefinition(\n          'isPropagationStopped',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'preventDefault',\n        getPooledWarningPropertyDefinition('preventDefault', () => {}),\n      );\n      Object.defineProperty(\n        this,\n        'stopPropagation',\n        getPooledWarningPropertyDefinition('stopPropagation', () => {}),\n      );\n    }\n  },\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\nSyntheticEvent.extend = function(Interface) {\n  const Super = this;\n\n  const E = function() {};\n  E.prototype = Super.prototype;\n  const prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  const isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get,\n  };\n\n  function set(val) {\n    const action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    const action = isFunction\n      ? 'accessing the method'\n      : 'accessing the property';\n    const result = isFunction\n      ? 'This is a no-op function'\n      : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    if (__DEV__) {\n      console.error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          'If you must keep the original synthetic event around, use event.persist(). ' +\n          'See https://fb.me/react-event-pooling for more information.',\n        action,\n        propName,\n        result,\n      );\n    }\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  const EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    const instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst,\n    );\n    return instance;\n  }\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst,\n  );\n}\n\nfunction releasePooledEvent(event) {\n  const EventConstructor = this;\n  invariant(\n    event instanceof EventConstructor,\n    'Trying to release an event instance into a pool of a different type.',\n  );\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n\nexport default SyntheticEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nconst SyntheticCompositionEvent = SyntheticEvent.extend({\n  data: null,\n});\n\nexport default SyntheticCompositionEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nconst SyntheticInputEvent = SyntheticEvent.extend({\n  data: null,\n});\n\nexport default SyntheticInputEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {TopLevelType} from 'legacy-events/TopLevelEventTypes';\n\nimport {accumulateTwoPhaseDispatches} from 'legacy-events/EventPropagators';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nimport {\n  TOP_BLUR,\n  TOP_COMPOSITION_START,\n  TOP_COMPOSITION_END,\n  TOP_COMPOSITION_UPDATE,\n  TOP_KEY_DOWN,\n  TOP_KEY_PRESS,\n  TOP_KEY_UP,\n  TOP_MOUSE_DOWN,\n  TOP_TEXT_INPUT,\n  TOP_PASTE,\n} from './DOMTopLevelEventTypes';\nimport {\n  getData as FallbackCompositionStateGetData,\n  initialize as FallbackCompositionStateInitialize,\n  reset as FallbackCompositionStateReset,\n} from './FallbackCompositionState';\nimport SyntheticCompositionEvent from './SyntheticCompositionEvent';\nimport SyntheticInputEvent from './SyntheticInputEvent';\n\nconst END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nconst START_KEYCODE = 229;\n\nconst canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\n\nlet documentMode = null;\nif (canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nconst canUseTextInputEvent =\n  canUseDOM && 'TextEvent' in window && !documentMode;\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nconst useFallbackCompositionData =\n  canUseDOM &&\n  (!canUseCompositionEvent ||\n    (documentMode && documentMode > 8 && documentMode <= 11));\n\nconst SPACEBAR_CODE = 32;\nconst SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nconst eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture',\n    },\n    dependencies: [\n      TOP_COMPOSITION_END,\n      TOP_KEY_PRESS,\n      TOP_TEXT_INPUT,\n      TOP_PASTE,\n    ],\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_COMPOSITION_END,\n      TOP_KEY_DOWN,\n      TOP_KEY_PRESS,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n    ],\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_COMPOSITION_START,\n      TOP_KEY_DOWN,\n      TOP_KEY_PRESS,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n    ],\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_COMPOSITION_UPDATE,\n      TOP_KEY_DOWN,\n      TOP_KEY_PRESS,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n    ],\n  },\n};\n\n// Track whether we've ever handled a keypress on the space key.\nlet hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case TOP_COMPOSITION_START:\n      return eventTypes.compositionStart;\n    case TOP_COMPOSITION_END:\n      return eventTypes.compositionEnd;\n    case TOP_COMPOSITION_UPDATE:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case TOP_KEY_UP:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case TOP_KEY_DOWN:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case TOP_KEY_PRESS:\n    case TOP_MOUSE_DOWN:\n    case TOP_BLUR:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  const detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n/**\n * Check if a composition event was triggered by Korean IME.\n * Our fallback mode does not work well with IE's Korean IME,\n * so just use native composition events when Korean IME is used.\n * Although CompositionEvent.locale property is deprecated,\n * it is available in IE, where our fallback mode is enabled.\n *\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isUsingKoreanIME(nativeEvent) {\n  return nativeEvent.locale === 'ko';\n}\n\n// Track the current IME composition status, if any.\nlet isComposing = false;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  let eventType;\n  let fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!isComposing) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!isComposing && eventType === eventTypes.compositionStart) {\n      isComposing = FallbackCompositionStateInitialize(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (isComposing) {\n        fallbackData = FallbackCompositionStateGetData();\n      }\n    }\n  }\n\n  const event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    const customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {TopLevelType} topLevelType Number from `TopLevelType`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType: TopLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case TOP_COMPOSITION_END:\n      return getDataFromCustomEvent(nativeEvent);\n    case TOP_KEY_PRESS:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      const which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case TOP_TEXT_INPUT:\n      // Record the characters to be added to the DOM.\n      const chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to ignore it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType: TopLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (isComposing) {\n    if (\n      topLevelType === TOP_COMPOSITION_END ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(topLevelType, nativeEvent))\n    ) {\n      const chars = FallbackCompositionStateGetData();\n      FallbackCompositionStateReset();\n      isComposing = false;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case TOP_PASTE:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case TOP_KEY_PRESS:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (!isKeypressCommand(nativeEvent)) {\n        // IE fires the `keypress` event when a user types an emoji via\n        // Touch keyboard of Windows.  In such a case, the `char` property\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n        // is 2, the property `which` does not represent an emoji correctly.\n        // In such a case, we directly return the `char` property instead of\n        // using `which`.\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\n          return nativeEvent.char;\n        } else if (nativeEvent.which) {\n          return String.fromCharCode(nativeEvent.which);\n        }\n      }\n      return null;\n    case TOP_COMPOSITION_END:\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  let chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  const event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n\n  event.data = chars;\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nconst BeforeInputEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n  ) {\n    const composition = extractCompositionEvent(\n      topLevelType,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n\n    const beforeInput = extractBeforeInputEvent(\n      topLevelType,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n\n    if (composition === null) {\n      return beforeInput;\n    }\n\n    if (beforeInput === null) {\n      return composition;\n    }\n\n    return [composition, beforeInput];\n  },\n};\n\nexport default BeforeInputEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nconst supportedInputTypes: {[key: string]: true | void, ...} = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true,\n};\n\nfunction isTextInputElement(elem: ?HTMLElement): boolean {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[((elem: any): HTMLInputElement).type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nexport default isTextInputElement;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {runEventsInBatch} from 'legacy-events/EventBatching';\nimport {accumulateTwoPhaseDispatches} from 'legacy-events/EventPropagators';\nimport {enqueueStateRestore} from 'legacy-events/ReactControlledComponent';\nimport {batchedUpdates} from 'legacy-events/ReactGenericBatching';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\nimport isTextInputElement from 'shared/isTextInputElement';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nimport {\n  TOP_BLUR,\n  TOP_CHANGE,\n  TOP_CLICK,\n  TOP_FOCUS,\n  TOP_INPUT,\n  TOP_KEY_DOWN,\n  TOP_KEY_UP,\n  TOP_SELECTION_CHANGE,\n} from './DOMTopLevelEventTypes';\nimport getEventTarget from './getEventTarget';\nimport isEventSupported from './isEventSupported';\nimport {getNodeFromInstance} from '../client/ReactDOMComponentTree';\nimport {updateValueIfChanged} from '../client/inputValueTracking';\nimport {setDefaultValue} from '../client/ReactDOMInput';\nimport {disableInputAttributeSyncing} from 'shared/ReactFeatureFlags';\n\nconst eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_CHANGE,\n      TOP_CLICK,\n      TOP_FOCUS,\n      TOP_INPUT,\n      TOP_KEY_DOWN,\n      TOP_KEY_UP,\n      TOP_SELECTION_CHANGE,\n    ],\n  },\n};\n\nfunction createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n  const event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    inst,\n    nativeEvent,\n    target,\n  );\n  event.type = 'change';\n  // Flag this event loop as needing state restore.\n  enqueueStateRestore(target);\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n/**\n * For IE shims\n */\nlet activeElement = null;\nlet activeElementInst = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  const nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName === 'select' || (nodeName === 'input' && elem.type === 'file')\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  const event = createAndAccumulateChangeEvent(\n    activeElementInst,\n    nativeEvent,\n    getEventTarget(nativeEvent),\n  );\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  runEventsInBatch(event);\n}\n\nfunction getInstIfValueChanged(targetInst) {\n  const targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_CHANGE) {\n    return targetInst;\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nlet isInputEventSupported = false;\nif (canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  isInputEventSupported =\n    isEventSupported('input') &&\n    (!document.documentMode || document.documentMode > 9);\n}\n\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  activeElement = null;\n  activeElementInst = null;\n}\n\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  if (getInstIfValueChanged(activeElementInst)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {\n  if (topLevelType === TOP_FOCUS) {\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === TOP_BLUR) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventPolyfill(topLevelType, targetInst) {\n  if (\n    topLevelType === TOP_SELECTION_CHANGE ||\n    topLevelType === TOP_KEY_UP ||\n    topLevelType === TOP_KEY_DOWN\n  ) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst);\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  const nodeName = elem.nodeName;\n  return (\n    nodeName &&\n    nodeName.toLowerCase() === 'input' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_CLICK) {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction handleControlledInputBlur(node) {\n  let state = node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  if (!disableInputAttributeSyncing) {\n    // If controlled, assign the value attribute to the current value on blur\n    setDefaultValue(node, 'number', node.value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nconst ChangeEventPlugin = {\n  eventTypes: eventTypes,\n\n  _isInputEventSupported: isInputEventSupported,\n\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n  ) {\n    const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n    let getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForChangeEvent;\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventPolyfill;\n        handleEventFunc = handleEventsForInputEventPolyfill;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      const inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        const event = createAndAccumulateChangeEvent(\n          inst,\n          nativeEvent,\n          nativeEventTarget,\n        );\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === TOP_BLUR) {\n      handleControlledInputBlur(targetNode);\n    }\n  },\n};\n\nexport default ChangeEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\nconst SyntheticUIEvent = SyntheticEvent.extend({\n  view: null,\n  detail: null,\n});\n\nexport default SyntheticUIEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nimport type {AnyNativeEvent} from 'legacy-events/PluginModuleType';\n\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey',\n};\n\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\nfunction modifierStateGetter(keyArg: string): boolean {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(\n  nativeEvent: AnyNativeEvent,\n): (keyArg: string) => boolean {\n  return modifierStateGetter;\n}\n\nexport default getEventModifierState;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventModifierState from './getEventModifierState';\n\nlet previousScreenX = 0;\nlet previousScreenY = 0;\n// Use flags to signal movementX/Y has already been set\nlet isMovementXSet = false;\nlet isMovementYSet = false;\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticMouseEvent = SyntheticUIEvent.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: null,\n  buttons: null,\n  relatedTarget: function(event) {\n    return (\n      event.relatedTarget ||\n      (event.fromElement === event.srcElement\n        ? event.toElement\n        : event.fromElement)\n    );\n  },\n  movementX: function(event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    const screenX = previousScreenX;\n    previousScreenX = event.screenX;\n\n    if (!isMovementXSet) {\n      isMovementXSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenX - screenX : 0;\n  },\n  movementY: function(event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    }\n\n    const screenY = previousScreenY;\n    previousScreenY = event.screenY;\n\n    if (!isMovementYSet) {\n      isMovementYSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenY - screenY : 0;\n  },\n});\n\nexport default SyntheticMouseEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\n\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\nconst SyntheticPointerEvent = SyntheticMouseEvent.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null,\n});\n\nexport default SyntheticPointerEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {accumulateEnterLeaveDispatches} from 'legacy-events/EventPropagators';\n\nimport {\n  TOP_MOUSE_OUT,\n  TOP_MOUSE_OVER,\n  TOP_POINTER_OUT,\n  TOP_POINTER_OVER,\n} from './DOMTopLevelEventTypes';\nimport {IS_REPLAYED, IS_FIRST_ANCESTOR} from 'legacy-events/EventSystemFlags';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport {\n  getClosestInstanceFromNode,\n  getNodeFromInstance,\n} from '../client/ReactDOMComponentTree';\nimport {HostComponent, HostText} from 'shared/ReactWorkTags';\nimport {getNearestMountedFiber} from 'react-reconciler/reflection';\n\nconst eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER],\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER],\n  },\n  pointerEnter: {\n    registrationName: 'onPointerEnter',\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER],\n  },\n  pointerLeave: {\n    registrationName: 'onPointerLeave',\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER],\n  },\n};\n\nconst EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n  ) {\n    const isOverEvent =\n      topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;\n    const isOutEvent =\n      topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;\n\n    if (\n      isOverEvent &&\n      (eventSystemFlags & IS_REPLAYED) === 0 &&\n      (nativeEvent.relatedTarget || nativeEvent.fromElement)\n    ) {\n      // If this is an over event with a target, then we've already dispatched\n      // the event in the out event of the other target. If this is replayed,\n      // then it's because we couldn't dispatch against this target previously\n      // so we have to do it now instead.\n      return null;\n    }\n\n    if (!isOutEvent && !isOverEvent) {\n      // Must not be a mouse or pointer in or out - ignoring.\n      return null;\n    }\n\n    let win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      const doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    let from;\n    let to;\n    if (isOutEvent) {\n      from = targetInst;\n      const related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? getClosestInstanceFromNode(related) : null;\n      if (to !== null) {\n        const nearestMounted = getNearestMountedFiber(to);\n        if (\n          to !== nearestMounted ||\n          (to.tag !== HostComponent && to.tag !== HostText)\n        ) {\n          to = null;\n        }\n      }\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    let eventInterface, leaveEventType, enterEventType, eventTypePrefix;\n\n    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {\n      eventInterface = SyntheticMouseEvent;\n      leaveEventType = eventTypes.mouseLeave;\n      enterEventType = eventTypes.mouseEnter;\n      eventTypePrefix = 'mouse';\n    } else if (\n      topLevelType === TOP_POINTER_OUT ||\n      topLevelType === TOP_POINTER_OVER\n    ) {\n      eventInterface = SyntheticPointerEvent;\n      leaveEventType = eventTypes.pointerLeave;\n      enterEventType = eventTypes.pointerEnter;\n      eventTypePrefix = 'pointer';\n    }\n\n    const fromNode = from == null ? win : getNodeFromInstance(from);\n    const toNode = to == null ? win : getNodeFromInstance(to);\n\n    const leave = eventInterface.getPooled(\n      leaveEventType,\n      from,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    leave.type = eventTypePrefix + 'leave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    const enter = eventInterface.getPooled(\n      enterEventType,\n      to,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    enter.type = eventTypePrefix + 'enter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    // If we are not processing the first ancestor, then we\n    // should not process the same nativeEvent again, as we\n    // will have already processed it in the first ancestor.\n    if ((eventSystemFlags & IS_FIRST_ANCESTOR) === 0) {\n      return [leave];\n    }\n\n    return [leave, enter];\n  },\n};\n\nexport default EnterLeaveEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {accumulateTwoPhaseDispatches} from 'legacy-events/EventPropagators';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\nimport isTextInputElement from 'shared/isTextInputElement';\nimport shallowEqual from 'shared/shallowEqual';\n\nimport {\n  TOP_BLUR,\n  TOP_CONTEXT_MENU,\n  TOP_DRAG_END,\n  TOP_FOCUS,\n  TOP_KEY_DOWN,\n  TOP_KEY_UP,\n  TOP_MOUSE_DOWN,\n  TOP_MOUSE_UP,\n  TOP_SELECTION_CHANGE,\n} from './DOMTopLevelEventTypes';\nimport getActiveElement from '../client/getActiveElement';\nimport {getNodeFromInstance} from '../client/ReactDOMComponentTree';\nimport {hasSelectionCapabilities} from '../client/ReactInputSelection';\nimport {DOCUMENT_NODE} from '../shared/HTMLNodeType';\nimport {isListeningToAllDependencies} from './DOMLegacyEventPluginSystem';\n\nconst skipSelectionChangeEvent =\n  canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nconst eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_CONTEXT_MENU,\n      TOP_DRAG_END,\n      TOP_FOCUS,\n      TOP_KEY_DOWN,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n      TOP_MOUSE_UP,\n      TOP_SELECTION_CHANGE,\n    ],\n  },\n};\n\nlet activeElement = null;\nlet activeElementInst = null;\nlet lastSelection = null;\nlet mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd,\n    };\n  } else {\n    const win =\n      (node.ownerDocument && node.ownerDocument.defaultView) || window;\n    const selection = win.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset,\n    };\n  }\n}\n\n/**\n * Get document associated with the event target.\n *\n * @param {object} nativeEventTarget\n * @return {Document}\n */\nfunction getEventTargetDocument(eventTarget) {\n  return eventTarget.window === eventTarget\n    ? eventTarget.document\n    : eventTarget.nodeType === DOCUMENT_NODE\n    ? eventTarget\n    : eventTarget.ownerDocument;\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @param {object} nativeEventTarget\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  const doc = getEventTargetDocument(nativeEventTarget);\n\n  if (\n    mouseDown ||\n    activeElement == null ||\n    activeElement !== getActiveElement(doc)\n  ) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  const currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    const syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nconst SelectEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n    container,\n  ) {\n    const containerOrDoc =\n      container || getEventTargetDocument(nativeEventTarget);\n    // Track whether all listeners exists for this plugin. If none exist, we do\n    // not extract events. See #3639.\n    if (\n      !containerOrDoc ||\n      !isListeningToAllDependencies('onSelect', containerOrDoc)\n    ) {\n      return null;\n    }\n\n    const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case TOP_FOCUS:\n        if (\n          isTextInputElement(targetNode) ||\n          targetNode.contentEditable === 'true'\n        ) {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case TOP_BLUR:\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case TOP_MOUSE_DOWN:\n        mouseDown = true;\n        break;\n      case TOP_CONTEXT_MENU:\n      case TOP_MOUSE_UP:\n      case TOP_DRAG_END:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case TOP_SELECTION_CHANGE:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case TOP_KEY_DOWN:\n      case TOP_KEY_UP:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n};\n\nexport default SelectEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nconst SyntheticAnimationEvent = SyntheticEvent.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null,\n});\n\nexport default SyntheticAnimationEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nconst SyntheticClipboardEvent = SyntheticEvent.extend({\n  clipboardData: function(event) {\n    return 'clipboardData' in event\n      ? event.clipboardData\n      : window.clipboardData;\n  },\n});\n\nexport default SyntheticClipboardEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticFocusEvent = SyntheticUIEvent.extend({\n  relatedTarget: null,\n});\n\nexport default SyntheticFocusEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  let charCode;\n  const keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n  if (charCode === 10) {\n    charCode = 13;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nexport default getEventCharCode;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport getEventCharCode from './getEventCharCode';\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nconst normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified',\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nconst translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta',\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent: KeyboardEvent): string {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    const key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    const charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nexport default getEventKey;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventCharCode from './getEventCharCode';\nimport getEventKey from './getEventKey';\nimport getEventModifierState from './getEventModifierState';\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticKeyboardEvent = SyntheticUIEvent.extend({\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n});\n\nexport default SyntheticKeyboardEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticDragEvent = SyntheticMouseEvent.extend({\n  dataTransfer: null,\n});\n\nexport default SyntheticDragEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventModifierState from './getEventModifierState';\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nconst SyntheticTouchEvent = SyntheticUIEvent.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState,\n});\n\nexport default SyntheticTouchEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nconst SyntheticTransitionEvent = SyntheticEvent.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null,\n});\n\nexport default SyntheticTransitionEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticWheelEvent = SyntheticMouseEvent.extend({\n  deltaX(event) {\n    return 'deltaX' in event\n      ? event.deltaX\n      : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event\n      ? -event.wheelDeltaX\n      : 0;\n  },\n  deltaY(event) {\n    return 'deltaY' in event\n      ? event.deltaY\n      : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event\n      ? -event.wheelDeltaY\n      : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event\n      ? -event.wheelDelta\n      : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null,\n});\n\nexport default SyntheticWheelEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  TopLevelType,\n  DOMTopLevelEventType,\n} from 'legacy-events/TopLevelEventTypes';\nimport type {ReactSyntheticEvent} from 'legacy-events/ReactSyntheticEventType';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {PluginModule} from 'legacy-events/PluginModuleType';\nimport type {EventSystemFlags} from 'legacy-events/EventSystemFlags';\n\nimport {accumulateTwoPhaseDispatches} from 'legacy-events/EventPropagators';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport {\n  topLevelEventsToDispatchConfig,\n  simpleEventPluginEventTypes,\n} from './DOMEventProperties';\n\nimport SyntheticAnimationEvent from './SyntheticAnimationEvent';\nimport SyntheticClipboardEvent from './SyntheticClipboardEvent';\nimport SyntheticFocusEvent from './SyntheticFocusEvent';\nimport SyntheticKeyboardEvent from './SyntheticKeyboardEvent';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport SyntheticDragEvent from './SyntheticDragEvent';\nimport SyntheticTouchEvent from './SyntheticTouchEvent';\nimport SyntheticTransitionEvent from './SyntheticTransitionEvent';\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport SyntheticWheelEvent from './SyntheticWheelEvent';\nimport getEventCharCode from './getEventCharCode';\n\n// Only used in DEV for exhaustiveness validation.\nconst knownHTMLTopLevelTypes: Array<DOMTopLevelEventType> = [\n  DOMTopLevelEventTypes.TOP_ABORT,\n  DOMTopLevelEventTypes.TOP_CANCEL,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH,\n  DOMTopLevelEventTypes.TOP_CLOSE,\n  DOMTopLevelEventTypes.TOP_DURATION_CHANGE,\n  DOMTopLevelEventTypes.TOP_EMPTIED,\n  DOMTopLevelEventTypes.TOP_ENCRYPTED,\n  DOMTopLevelEventTypes.TOP_ENDED,\n  DOMTopLevelEventTypes.TOP_ERROR,\n  DOMTopLevelEventTypes.TOP_INPUT,\n  DOMTopLevelEventTypes.TOP_INVALID,\n  DOMTopLevelEventTypes.TOP_LOAD,\n  DOMTopLevelEventTypes.TOP_LOADED_DATA,\n  DOMTopLevelEventTypes.TOP_LOADED_METADATA,\n  DOMTopLevelEventTypes.TOP_LOAD_START,\n  DOMTopLevelEventTypes.TOP_PAUSE,\n  DOMTopLevelEventTypes.TOP_PLAY,\n  DOMTopLevelEventTypes.TOP_PLAYING,\n  DOMTopLevelEventTypes.TOP_PROGRESS,\n  DOMTopLevelEventTypes.TOP_RATE_CHANGE,\n  DOMTopLevelEventTypes.TOP_RESET,\n  DOMTopLevelEventTypes.TOP_SEEKED,\n  DOMTopLevelEventTypes.TOP_SEEKING,\n  DOMTopLevelEventTypes.TOP_STALLED,\n  DOMTopLevelEventTypes.TOP_SUBMIT,\n  DOMTopLevelEventTypes.TOP_SUSPEND,\n  DOMTopLevelEventTypes.TOP_TIME_UPDATE,\n  DOMTopLevelEventTypes.TOP_TOGGLE,\n  DOMTopLevelEventTypes.TOP_VOLUME_CHANGE,\n  DOMTopLevelEventTypes.TOP_WAITING,\n];\n\nconst SimpleEventPlugin: PluginModule<MouseEvent> = {\n  // simpleEventPluginEventTypes gets populated from\n  // the DOMEventProperties module.\n  eventTypes: simpleEventPluginEventTypes,\n  extractEvents: function(\n    topLevelType: TopLevelType,\n    targetInst: null | Fiber,\n    nativeEvent: MouseEvent,\n    nativeEventTarget: null | EventTarget,\n    eventSystemFlags: EventSystemFlags,\n  ): null | ReactSyntheticEvent {\n    const dispatchConfig = topLevelEventsToDispatchConfig.get(topLevelType);\n    if (!dispatchConfig) {\n      return null;\n    }\n    let EventConstructor;\n    switch (topLevelType) {\n      case DOMTopLevelEventTypes.TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_KEY_DOWN:\n      case DOMTopLevelEventTypes.TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_BLUR:\n      case DOMTopLevelEventTypes.TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_AUX_CLICK:\n      case DOMTopLevelEventTypes.TOP_DOUBLE_CLICK:\n      case DOMTopLevelEventTypes.TOP_MOUSE_DOWN:\n      case DOMTopLevelEventTypes.TOP_MOUSE_MOVE:\n      case DOMTopLevelEventTypes.TOP_MOUSE_UP:\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_MOUSE_OUT:\n      case DOMTopLevelEventTypes.TOP_MOUSE_OVER:\n      case DOMTopLevelEventTypes.TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_DRAG:\n      case DOMTopLevelEventTypes.TOP_DRAG_END:\n      case DOMTopLevelEventTypes.TOP_DRAG_ENTER:\n      case DOMTopLevelEventTypes.TOP_DRAG_EXIT:\n      case DOMTopLevelEventTypes.TOP_DRAG_LEAVE:\n      case DOMTopLevelEventTypes.TOP_DRAG_OVER:\n      case DOMTopLevelEventTypes.TOP_DRAG_START:\n      case DOMTopLevelEventTypes.TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TOUCH_CANCEL:\n      case DOMTopLevelEventTypes.TOP_TOUCH_END:\n      case DOMTopLevelEventTypes.TOP_TOUCH_MOVE:\n      case DOMTopLevelEventTypes.TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_ANIMATION_END:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_COPY:\n      case DOMTopLevelEventTypes.TOP_CUT:\n      case DOMTopLevelEventTypes.TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_POINTER_CANCEL:\n      case DOMTopLevelEventTypes.TOP_POINTER_DOWN:\n      case DOMTopLevelEventTypes.TOP_POINTER_MOVE:\n      case DOMTopLevelEventTypes.TOP_POINTER_OUT:\n      case DOMTopLevelEventTypes.TOP_POINTER_OVER:\n      case DOMTopLevelEventTypes.TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n      default:\n        if (__DEV__) {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            console.error(\n              'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' +\n                'is likely caused by a bug in React. Please file an issue.',\n              topLevelType,\n            );\n          }\n        }\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n    const event = EventConstructor.getPooled(\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n};\n\nexport default SimpleEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {setComponentTree} from 'legacy-events/EventPluginUtils';\n\nimport {\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n} from './ReactDOMComponentTree';\nimport BeforeInputEventPlugin from '../events/BeforeInputEventPlugin';\nimport ChangeEventPlugin from '../events/ChangeEventPlugin';\nimport EnterLeaveEventPlugin from '../events/EnterLeaveEventPlugin';\nimport SelectEventPlugin from '../events/SelectEventPlugin';\nimport SimpleEventPlugin from '../events/SimpleEventPlugin';\nimport {\n  injectEventPluginOrder,\n  injectEventPluginsByName,\n} from 'legacy-events/EventPluginRegistry';\n\n/**\n * Specifies a deterministic ordering of `EventPlugin`s. A convenient way to\n * reason about plugins, without having to package every one of them. This\n * is better than having plugins be ordered in the same order that they\n * are injected because that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nconst DOMEventPluginOrder = [\n  'ResponderEventPlugin',\n  'SimpleEventPlugin',\n  'EnterLeaveEventPlugin',\n  'ChangeEventPlugin',\n  'SelectEventPlugin',\n  'BeforeInputEventPlugin',\n];\n\n/**\n * Inject modules for resolving DOM hierarchy and plugin ordering.\n */\ninjectEventPluginOrder(DOMEventPluginOrder);\nsetComponentTree(\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n);\n\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\ninjectEventPluginsByName({\n  SimpleEventPlugin: SimpleEventPlugin,\n  EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n  ChangeEventPlugin: ChangeEventPlugin,\n  SelectEventPlugin: SelectEventPlugin,\n  BeforeInputEventPlugin: BeforeInputEventPlugin,\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {enableUserTimingAPI} from 'shared/ReactFeatureFlags';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Fragment,\n  ContextProvider,\n  ContextConsumer,\n  Mode,\n  SuspenseComponent,\n} from 'shared/ReactWorkTags';\n\ntype MeasurementPhase =\n  | 'componentWillMount'\n  | 'componentWillUnmount'\n  | 'componentWillReceiveProps'\n  | 'shouldComponentUpdate'\n  | 'componentWillUpdate'\n  | 'componentDidUpdate'\n  | 'componentDidMount'\n  | 'getChildContext'\n  | 'getSnapshotBeforeUpdate';\n\n// Prefix measurements so that it's possible to filter them.\n// Longer prefixes are hard to read in DevTools.\nconst reactEmoji = '\\u269B';\nconst warningEmoji = '\\u26D4';\nconst supportsUserTiming =\n  typeof performance !== 'undefined' &&\n  typeof performance.mark === 'function' &&\n  typeof performance.clearMarks === 'function' &&\n  typeof performance.measure === 'function' &&\n  typeof performance.clearMeasures === 'function';\n\n// Keep track of current fiber so that we know the path to unwind on pause.\n// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?\nlet currentFiber: Fiber | null = null;\n// If we're in the middle of user code, which fiber and method is it?\n// Reusing `currentFiber` would be confusing for this because user code fiber\n// can change during commit phase too, but we don't need to unwind it (since\n// lifecycles in the commit phase don't resemble a tree).\nlet currentPhase: MeasurementPhase | null = null;\nlet currentPhaseFiber: Fiber | null = null;\n// Did lifecycle hook schedule an update? This is often a performance problem,\n// so we will keep track of it, and include it in the report.\n// Track commits caused by cascading updates.\nlet isCommitting: boolean = false;\nlet hasScheduledUpdateInCurrentCommit: boolean = false;\nlet hasScheduledUpdateInCurrentPhase: boolean = false;\nlet commitCountInCurrentWorkLoop: number = 0;\nlet effectCountInCurrentCommit: number = 0;\nlet isWaitingForCallback: boolean = false;\n// During commits, we only show a measurement once per method name\n// to avoid stretch the commit phase with measurement overhead.\nconst labelsInCurrentCommit: Set<string> = new Set();\n\nconst formatMarkName = (markName: string) => {\n  return `${reactEmoji} ${markName}`;\n};\n\nconst formatLabel = (label: string, warning: string | null) => {\n  const prefix = warning ? `${warningEmoji} ` : `${reactEmoji} `;\n  const suffix = warning ? ` Warning: ${warning}` : '';\n  return `${prefix}${label}${suffix}`;\n};\n\nconst beginMark = (markName: string) => {\n  performance.mark(formatMarkName(markName));\n};\n\nconst clearMark = (markName: string) => {\n  performance.clearMarks(formatMarkName(markName));\n};\n\nconst endMark = (label: string, markName: string, warning: string | null) => {\n  const formattedMarkName = formatMarkName(markName);\n  const formattedLabel = formatLabel(label, warning);\n  try {\n    performance.measure(formattedLabel, formattedMarkName);\n  } catch (err) {\n    // If previous mark was missing for some reason, this will throw.\n    // This could only happen if React crashed in an unexpected place earlier.\n    // Don't pile on with more errors.\n  }\n  // Clear marks immediately to avoid growing buffer.\n  performance.clearMarks(formattedMarkName);\n  performance.clearMeasures(formattedLabel);\n};\n\nconst getFiberMarkName = (label: string, debugID: number) => {\n  return `${label} (#${debugID})`;\n};\n\nconst getFiberLabel = (\n  componentName: string,\n  isMounted: boolean,\n  phase: MeasurementPhase | null,\n) => {\n  if (phase === null) {\n    // These are composite component total time measurements.\n    return `${componentName} [${isMounted ? 'update' : 'mount'}]`;\n  } else {\n    // Composite component methods.\n    return `${componentName}.${phase}`;\n  }\n};\n\nconst beginFiberMark = (\n  fiber: Fiber,\n  phase: MeasurementPhase | null,\n): boolean => {\n  const componentName = getComponentName(fiber.type) || 'Unknown';\n  const debugID = ((fiber._debugID: any): number);\n  const isMounted = fiber.alternate !== null;\n  const label = getFiberLabel(componentName, isMounted, phase);\n\n  if (isCommitting && labelsInCurrentCommit.has(label)) {\n    // During the commit phase, we don't show duplicate labels because\n    // there is a fixed overhead for every measurement, and we don't\n    // want to stretch the commit phase beyond necessary.\n    return false;\n  }\n  labelsInCurrentCommit.add(label);\n\n  const markName = getFiberMarkName(label, debugID);\n  beginMark(markName);\n  return true;\n};\n\nconst clearFiberMark = (fiber: Fiber, phase: MeasurementPhase | null) => {\n  const componentName = getComponentName(fiber.type) || 'Unknown';\n  const debugID = ((fiber._debugID: any): number);\n  const isMounted = fiber.alternate !== null;\n  const label = getFiberLabel(componentName, isMounted, phase);\n  const markName = getFiberMarkName(label, debugID);\n  clearMark(markName);\n};\n\nconst endFiberMark = (\n  fiber: Fiber,\n  phase: MeasurementPhase | null,\n  warning: string | null,\n) => {\n  const componentName = getComponentName(fiber.type) || 'Unknown';\n  const debugID = ((fiber._debugID: any): number);\n  const isMounted = fiber.alternate !== null;\n  const label = getFiberLabel(componentName, isMounted, phase);\n  const markName = getFiberMarkName(label, debugID);\n  endMark(label, markName, warning);\n};\n\nconst shouldIgnoreFiber = (fiber: Fiber): boolean => {\n  // Host components should be skipped in the timeline.\n  // We could check typeof fiber.type, but does this work with RN?\n  switch (fiber.tag) {\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n    case Mode:\n      return true;\n    default:\n      return false;\n  }\n};\n\nconst clearPendingPhaseMeasurement = () => {\n  if (currentPhase !== null && currentPhaseFiber !== null) {\n    clearFiberMark(currentPhaseFiber, currentPhase);\n  }\n  currentPhaseFiber = null;\n  currentPhase = null;\n  hasScheduledUpdateInCurrentPhase = false;\n};\n\nconst pauseTimers = () => {\n  // Stops all currently active measurements so that they can be resumed\n  // if we continue in a later deferred loop from the same unit of work.\n  let fiber = currentFiber;\n  while (fiber) {\n    if (fiber._debugIsCurrentlyTiming) {\n      endFiberMark(fiber, null, null);\n    }\n    fiber = fiber.return;\n  }\n};\n\nconst resumeTimersRecursively = (fiber: Fiber) => {\n  if (fiber.return !== null) {\n    resumeTimersRecursively(fiber.return);\n  }\n  if (fiber._debugIsCurrentlyTiming) {\n    beginFiberMark(fiber, null);\n  }\n};\n\nconst resumeTimers = () => {\n  // Resumes all measurements that were active during the last deferred loop.\n  if (currentFiber !== null) {\n    resumeTimersRecursively(currentFiber);\n  }\n};\n\nexport function recordEffect(): void {\n  if (enableUserTimingAPI) {\n    effectCountInCurrentCommit++;\n  }\n}\n\nexport function recordScheduleUpdate(): void {\n  if (enableUserTimingAPI) {\n    if (isCommitting) {\n      hasScheduledUpdateInCurrentCommit = true;\n    }\n    if (\n      currentPhase !== null &&\n      currentPhase !== 'componentWillMount' &&\n      currentPhase !== 'componentWillReceiveProps'\n    ) {\n      hasScheduledUpdateInCurrentPhase = true;\n    }\n  }\n}\n\nexport function startRequestCallbackTimer(): void {\n  if (enableUserTimingAPI) {\n    if (supportsUserTiming && !isWaitingForCallback) {\n      isWaitingForCallback = true;\n      beginMark('(Waiting for async callback...)');\n    }\n  }\n}\n\nexport function stopRequestCallbackTimer(didExpire: boolean): void {\n  if (enableUserTimingAPI) {\n    if (supportsUserTiming) {\n      isWaitingForCallback = false;\n      const warning = didExpire\n        ? 'Update expired; will flush synchronously'\n        : null;\n      endMark(\n        '(Waiting for async callback...)',\n        '(Waiting for async callback...)',\n        warning,\n      );\n    }\n  }\n}\n\nexport function startWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, this is the fiber to unwind from.\n    currentFiber = fiber;\n    if (!beginFiberMark(fiber, null)) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = true;\n  }\n}\n\nexport function cancelWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // Remember we shouldn't complete measurement for this fiber.\n    // Otherwise flamechart will be deep even for small updates.\n    fiber._debugIsCurrentlyTiming = false;\n    clearFiberMark(fiber, null);\n  }\n}\n\nexport function stopWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, its parent is the fiber to unwind from.\n    currentFiber = fiber.return;\n    if (!fiber._debugIsCurrentlyTiming) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = false;\n    endFiberMark(fiber, null, null);\n  }\n}\n\nexport function stopFailedWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, its parent is the fiber to unwind from.\n    currentFiber = fiber.return;\n    if (!fiber._debugIsCurrentlyTiming) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = false;\n    const warning =\n      fiber.tag === SuspenseComponent\n        ? 'Rendering was suspended'\n        : 'An error was thrown inside this error boundary';\n    endFiberMark(fiber, null, warning);\n  }\n}\n\nexport function startPhaseTimer(fiber: Fiber, phase: MeasurementPhase): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    clearPendingPhaseMeasurement();\n    if (!beginFiberMark(fiber, phase)) {\n      return;\n    }\n    currentPhaseFiber = fiber;\n    currentPhase = phase;\n  }\n}\n\nexport function stopPhaseTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    if (currentPhase !== null && currentPhaseFiber !== null) {\n      const warning = hasScheduledUpdateInCurrentPhase\n        ? 'Scheduled a cascading update'\n        : null;\n      endFiberMark(currentPhaseFiber, currentPhase, warning);\n    }\n    currentPhase = null;\n    currentPhaseFiber = null;\n  }\n}\n\nexport function startWorkLoopTimer(nextUnitOfWork: Fiber | null): void {\n  // true\n  if (enableUserTimingAPI) {\n    currentFiber = nextUnitOfWork;\n    if (!supportsUserTiming) {\n      return;\n    }\n    commitCountInCurrentWorkLoop = 0;\n    // This is top level call.\n    // Any other measurements are performed within.\n    beginMark('(React Tree Reconciliation)');\n    // Resume any measurements that were in progress during the last loop.\n    resumeTimers();\n  }\n}\n\nexport function stopWorkLoopTimer(\n  interruptedBy: Fiber | null,\n  didCompleteRoot: boolean,\n): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    let warning = null;\n    if (interruptedBy !== null) {\n      if (interruptedBy.tag === HostRoot) {\n        warning = 'A top-level update interrupted the previous render';\n      } else {\n        const componentName = getComponentName(interruptedBy.type) || 'Unknown';\n        warning = `An update to ${componentName} interrupted the previous render`;\n      }\n    } else if (commitCountInCurrentWorkLoop > 1) {\n      warning = 'There were cascading updates';\n    }\n    commitCountInCurrentWorkLoop = 0;\n    let label = didCompleteRoot\n      ? '(React Tree Reconciliation: Completed Root)'\n      : '(React Tree Reconciliation: Yielded)';\n    // Pause any measurements until the next loop.\n    pauseTimers();\n    endMark(label, '(React Tree Reconciliation)', warning);\n  }\n}\n\nexport function startCommitTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    isCommitting = true;\n    hasScheduledUpdateInCurrentCommit = false;\n    labelsInCurrentCommit.clear();\n    beginMark('(Committing Changes)');\n  }\n}\n\nexport function stopCommitTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n\n    let warning = null;\n    if (hasScheduledUpdateInCurrentCommit) {\n      warning = 'Lifecycle hook scheduled a cascading update';\n    } else if (commitCountInCurrentWorkLoop > 0) {\n      warning = 'Caused by a cascading update in earlier commit';\n    }\n    hasScheduledUpdateInCurrentCommit = false;\n    commitCountInCurrentWorkLoop++;\n    isCommitting = false;\n    labelsInCurrentCommit.clear();\n\n    endMark('(Committing Changes)', '(Committing Changes)', warning);\n  }\n}\n\nexport function startCommitSnapshotEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Committing Snapshot Effects)');\n  }\n}\n\nexport function stopCommitSnapshotEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    const count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark(\n      `(Committing Snapshot Effects: ${count} Total)`,\n      '(Committing Snapshot Effects)',\n      null,\n    );\n  }\n}\n\nexport function startCommitHostEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Committing Host Effects)');\n  }\n}\n\nexport function stopCommitHostEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    const count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark(\n      `(Committing Host Effects: ${count} Total)`,\n      '(Committing Host Effects)',\n      null,\n    );\n  }\n}\n\nexport function startCommitLifeCyclesTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Calling Lifecycle Methods)');\n  }\n}\n\nexport function stopCommitLifeCyclesTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    const count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark(\n      `(Calling Lifecycle Methods: ${count} Total)`,\n      '(Calling Lifecycle Methods)',\n      null,\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\n\nimport {isFiberMounted} from 'react-reconciler/reflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from 'shared/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport checkPropTypes from 'prop-types/checkPropTypes';\n\nimport {getCurrentFiberStackInDev} from './ReactCurrentFiber';\nimport {startPhaseTimer, stopPhaseTimer} from './ReactDebugFiberPerf';\nimport {createCursor, push, pop} from './ReactFiberStack';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nlet contextStackCursor: StackCursor<Object> = createCursor(emptyContextObject);\n// A cursor to a boolean indicating whether the context has changed.\nlet didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (let key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(\n        contextTypes,\n        context,\n        'context',\n        name,\n        getCurrentFiberStackInDev,\n      );\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    invariant(\n      contextStackCursor.current === emptyContextObject,\n      'Unexpected context found on stack. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentName(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    let childContext;\n    startPhaseTimer(fiber, 'getChildContext');\n    childContext = instance.getChildContext();\n    stopPhaseTimer();\n    for (let contextKey in childContext) {\n      invariant(\n        contextKey in childContextTypes,\n        '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n        getComponentName(type) || 'Unknown',\n        contextKey,\n      );\n    }\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(\n        childContextTypes,\n        childContext,\n        'child context',\n        name,\n        // In practice, there is one case in which we won't get a stack. It's when\n        // somebody calls unstable_renderSubtreeIntoContainer() and we process\n        // context from the parent component instance. The stack will be missing\n        // because it's outside of the reconciliation, and so the pointer has not\n        // been set. This is rare and doesn't matter. We'll also remove that API.\n        getCurrentFiberStackInDev,\n      );\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    invariant(\n      instance,\n      'Expected to have an instance by this point. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    invariant(\n      isFiberMounted(fiber) && fiber.tag === ClassComponent,\n      'Expected subtree parent to be a mounted class component. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n    invariant(\n      false,\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {enableSchedulerTracing} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'http://fb.me/react-profiling',\n  );\n}\n\nexport type ReactPriorityLevel = 99 | 98 | 97 | 96 | 95 | 90;\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nlet initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    // 99 立即执行的任务\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    // 98 用户交互任务\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    // 97 普通优先级\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    // 96 低优先级任务\n    case Scheduler_LowPriority:\n      return LowPriority;\n    // 95 闲时任务\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      // 缺少优先级\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue() {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    try {\n      const isSync = true;\n      const queue = syncQueue;\n      runWithPriority(ImmediatePriority, () => {\n        for (; i < queue.length; i++) {\n          let callback = queue[i];\n          do {\n            callback = callback(isSync);\n          } while (callback !== null);\n        }\n      });\n      syncQueue = null;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      }\n      // Resume flushing in the next tick\n      Scheduler_scheduleCallback(\n        Scheduler_ImmediatePriority,\n        flushSyncCallbackQueue,\n      );\n      throw error;\n    } finally {\n      isFlushingSyncQueue = false;\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './SchedulerWithReactIntegration';\n\nimport MAX_SIGNED_31_BIT_INT from './maxSigned31BitInt';\n\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  IdlePriority,\n} from './SchedulerWithReactIntegration';\n\nexport type ExpirationTime = number;\n\nexport const NoWork = 0;\n// TODO: Think of a better name for Never. The key difference with Idle is that\n// Never work can be committed in an inconsistent state without tearing the UI.\n// The main example is offscreen content, like a hidden subtree. So one possible\n// name is Offscreen. However, it also includes dehydrated Suspense boundaries,\n// which are inconsistent in the sense that they haven't finished yet, but\n// aren't visibly inconsistent because the server rendered HTML matches what the\n// hydrated tree would look like.\nexport const Never = 1;\n// Idle is slightly higher priority than Never. It must completely finish in\n// order to be consistent.\nexport const Idle = 2;\n// Continuous Hydration is slightly higher than Idle and is used to increase\n// priority of hover targets.\nexport const ContinuousHydration = 3;\n// 整型最大值\nexport const Sync = MAX_SIGNED_31_BIT_INT;\nexport const Batched = Sync - 1;\n\nconst UNIT_SIZE = 10;\nconst MAGIC_NUMBER_OFFSET = Batched - 1;\n\n// 1 unit of expiration time represents 10ms.\nexport function msToExpirationTime(ms: number): ExpirationTime {\n  // Always subtract from the offset so that we don't clash with the magic number for NoWork.\n  return MAGIC_NUMBER_OFFSET - ((ms / UNIT_SIZE) | 0);\n}\n\nexport function expirationTimeToMs(expirationTime: ExpirationTime): number {\n  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;\n}\n\nfunction ceiling(num: number, precision: number): number {\n  return (((num / precision) | 0) + 1) * precision;\n}\n\nfunction computeExpirationBucket(\n  currentTime,\n  expirationInMs,\n  bucketSizeMs,\n): ExpirationTime {\n  return (\n    MAGIC_NUMBER_OFFSET -\n    ceiling(\n      MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE,\n      bucketSizeMs / UNIT_SIZE,\n    )\n  );\n}\n\n// TODO: This corresponds to Scheduler's NormalPriority, not LowPriority. Update\n// the names to reflect.\nexport const LOW_PRIORITY_EXPIRATION = 5000;\nexport const LOW_PRIORITY_BATCH_SIZE = 250;\n\nexport function computeAsyncExpiration(\n  currentTime: ExpirationTime,\n): ExpirationTime {\n  return computeExpirationBucket(\n    currentTime,\n    LOW_PRIORITY_EXPIRATION,\n    LOW_PRIORITY_BATCH_SIZE,\n  );\n}\n\nexport function computeSuspenseExpiration(\n  currentTime: ExpirationTime,\n  timeoutMs: number,\n): ExpirationTime {\n  // TODO: Should we warn if timeoutMs is lower than the normal pri expiration time?\n  return computeExpirationBucket(\n    currentTime,\n    timeoutMs,\n    LOW_PRIORITY_BATCH_SIZE,\n  );\n}\n\n// We intentionally set a higher expiration time for interactive updates in\n// dev than in production.\n//\n// If the main thread is being blocked so long that you hit the expiration,\n// it's a problem that could be solved with better scheduling.\n//\n// People will be more likely to notice this and fix it with the long\n// expiration time in development.\n//\n// In production we opt for better UX at the risk of masking scheduling\n// problems, by expiring fast.\nexport const HIGH_PRIORITY_EXPIRATION = __DEV__ ? 500 : 150;\nexport const HIGH_PRIORITY_BATCH_SIZE = 100;\n\nexport function computeInteractiveExpiration(currentTime: ExpirationTime) {\n  return computeExpirationBucket(\n    currentTime,\n    HIGH_PRIORITY_EXPIRATION,\n    HIGH_PRIORITY_BATCH_SIZE,\n  );\n}\n\nexport function inferPriorityFromExpirationTime(\n  currentTime: ExpirationTime,\n  expirationTime: ExpirationTime,\n): ReactPriorityLevel {\n  if (expirationTime === Sync) {\n    return ImmediatePriority;\n  }\n  if (expirationTime === Never || expirationTime === Idle) {\n    return IdlePriority;\n  }\n  const msUntil =\n    expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);\n  if (msUntil <= 0) {\n    return ImmediatePriority;\n  }\n  if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {\n    return UserBlockingPriority;\n  }\n  if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {\n    return NormalPriority;\n  }\n\n  // TODO: Handle LowPriority\n\n  // Assume anything lower has idle priority\n  return IdlePriority;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nexport default 1073741823;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\n\nimport getComponentName from 'shared/getComponentName';\nimport {StrictMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://fb.me/react-unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://fb.me/react-unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://fb.me/react-unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://fb.me/react-unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://fb.me/react-unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://fb.me/react-unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentName(fiber.type) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n        const firstComponentStack = getStackByFiberInDevAndProd(firstFiber);\n\n        console.error(\n          'Legacy context API has been detected within a strict-mode tree.' +\n            '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n            'using it should migrate to the new version.' +\n            '\\n\\nPlease update the following components: %s' +\n            '\\n\\nLearn more about this warning here: https://fb.me/react-legacy-context' +\n            '%s',\n          sortedNames,\n          firstComponentStack,\n        );\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\n// 0 同步渲染模式\nexport const NoMode = 0b0000;\n// 1 严格模式\nexport const StrictMode = 0b0001;\n// 10 异步渲染过渡模式\nexport const BlockingMode = 0b0010;\n// 100 异步渲染模式\nexport const ConcurrentMode = 0b0100;\n// 1000 性能测试模式\nexport const ProfileMode = 0b1000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleWork,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop';\nimport {updateContainer, syncUpdates} from './ReactFiberReconciler';\nimport {emptyContextObject} from './ReactFiberContext';\nimport {Sync} from './ReactFiberExpirationTime';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport let setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    let family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    let family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport let scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport let scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    syncUpdates(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      scheduleWork(fiber, Sync);\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport let findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {ReactPriorityLevel} from './SchedulerWithReactIntegration';\nimport type {Interaction} from 'scheduler/src/Tracing';\nimport type {SuspenseConfig} from './ReactFiberSuspenseConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\nimport type {Effect as HookEffect} from './ReactFiberHooks';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  deferPassiveEffectCleanupDuringUnmount,\n  runAllPassiveEffectDestroysBeforeCreates,\n  enableUserTimingAPI,\n  enableSuspenseServerRenderer,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableProfilerTimer,\n  enableSchedulerTracing,\n  warnAboutUnmockedScheduler,\n  flushSuspenseFallbacksInTests,\n  disableSchedulerTimeoutBasedOnReactExpirationTime,\n  enableTrainModelFix,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\nimport {\n  scheduleCallback,\n  cancelCallback,\n  getCurrentPriorityLevel,\n  runWithPriority,\n  shouldYield,\n  requestPaint,\n  now,\n  NoPriority,\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n  flushSyncCallbackQueue,\n  scheduleSyncCallback,\n} from './SchedulerWithReactIntegration';\n\n// The scheduler is imported here *only* to detect whether it's been mocked\nimport * as Scheduler from 'scheduler';\n\nimport {__interactionsRef, __subscriberRef} from 'scheduler/tracing';\n\nimport {\n  prepareForCommit,\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  warnsIfNotActing,\n} from './ReactFiberHostConfig';\n\nimport {createWorkInProgress, assignFiberPropertiesInDEV} from './ReactFiber';\nimport {\n  isRootSuspendedAtTime,\n  markRootSuspendedAtTime,\n  markRootFinishedAtTime,\n  markRootUpdatedAtTime,\n  markRootExpiredAtTime,\n} from './ReactFiberRoot';\nimport {\n  NoMode,\n  StrictMode,\n  ProfileMode,\n  BlockingMode,\n  ConcurrentMode,\n} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Block,\n} from 'shared/ReactWorkTags';\nimport {\n  NoEffect,\n  PerformedWork,\n  Placement,\n  Update,\n  PlacementAndUpdate,\n  Deletion,\n  Ref,\n  ContentReset,\n  Snapshot,\n  Callback,\n  Passive,\n  Incomplete,\n  HostEffectMask,\n  Hydrating,\n  HydratingAndUpdate,\n} from 'shared/ReactSideEffectTags';\nimport {\n  NoWork,\n  Sync,\n  Never,\n  msToExpirationTime,\n  expirationTimeToMs,\n  computeInteractiveExpiration,\n  computeAsyncExpiration,\n  computeSuspenseExpiration,\n  inferPriorityFromExpirationTime,\n  LOW_PRIORITY_EXPIRATION,\n  Batched,\n  Idle,\n} from './ReactFiberExpirationTime';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork';\nimport {completeWork} from './ReactFiberCompleteWork';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow';\nimport {\n  commitBeforeMutationLifeCycles as commitBeforeMutationEffectOnFiber,\n  commitLifeCycles as commitLayoutEffectOnFiber,\n  commitPassiveHookEffects,\n  commitPlacement,\n  commitWork,\n  commitDeletion,\n  commitDetachRef,\n  commitAttachRef,\n  commitResetTextContent,\n} from './ReactFiberCommitWork';\nimport {enqueueUpdate} from './ReactUpdateQueue';\nimport {resetContextDependencies} from './ReactFiberNewContext';\nimport {resetHooksAfterThrow, ContextOnlyDispatcher} from './ReactFiberHooks';\nimport {createCapturedValue} from './ReactCapturedValue';\n\nimport {\n  recordCommitTime,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n} from './ReactProfilerTimer';\n\n// DEV stuff\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n  getStackByFiberInDevAndProd,\n} from './ReactCurrentFiber';\nimport {\n  recordEffect,\n  recordScheduleUpdate,\n  startWorkTimer,\n  stopWorkTimer,\n  stopFailedWorkTimer,\n  startWorkLoopTimer,\n  stopWorkLoopTimer,\n  startCommitTimer,\n  stopCommitTimer,\n  startCommitSnapshotEffectsTimer,\n  stopCommitSnapshotEffectsTimer,\n  startCommitHostEffectsTimer,\n  stopCommitHostEffectsTimer,\n  startCommitLifeCyclesTimer,\n  stopCommitLifeCyclesTimer,\n} from './ReactDebugFiberPerf';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {onCommitRoot} from './ReactFiberDevToolsHook';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  IsSomeRendererActing,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nconst NoContext = /*                    */ 0b000000;\nconst BatchedContext = /*               */ 0b000001;\nconst EventContext = /*                 */ 0b000010;\nconst DiscreteEventContext = /*         */ 0b000100;\nconst LegacyUnbatchedContext = /*       */ 0b001000;\nconst RenderContext = /*                */ 0b010000;\nconst CommitContext = /*                */ 0b100000;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\n\nexport type Thenable = {\n  then(resolve: () => mixed, reject?: () => mixed): Thenable | void,\n  // Special flag to opt out of tracing interactions across a Suspense boundary.\n  __reactDoNotTraceInteractions?: boolean,\n  ...\n};\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The expiration time we're rendering\nlet renderExpirationTime: ExpirationTime = NoWork;\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootIncomplete;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// Most recent event time among processed updates during this render.\n// This is conceptually a time stamp but expressed in terms of an ExpirationTime\n// because we deal mostly with expiration times in the hot path, so this avoids\n// the conversion happening in the hot path.\nlet workInProgressRootLatestProcessedExpirationTime: ExpirationTime = Sync;\nlet workInProgressRootLatestSuspenseTimeout: ExpirationTime = Sync;\nlet workInProgressRootCanSuspendUsingConfig: null | SuspenseConfig = null;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootNextUnprocessedUpdateTime: ExpirationTime = NoWork;\n\n// If we're pinged while rendering we don't always restart immediately.\n// This flag determines if it might be worthwhile to restart if an opportunity\n// happens latere.\nlet workInProgressRootHasPendingPing: boolean = false;\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\nlet nextEffect: Fiber | null = null;\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsRenderPriority: ReactPriorityLevel = NoPriority;\nlet pendingPassiveEffectsExpirationTime: ExpirationTime = NoWork;\nlet pendingPassiveHookEffectsMount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveHookEffectsUnmount: Array<HookEffect | Fiber> = [];\n\nlet rootsWithPendingDiscreteUpdates: Map<\n  FiberRoot,\n  ExpirationTime,\n> | null = null;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\n\nlet interruptedBy: Fiber | null = null;\n\n// Marks the need to reschedule pending interactions at these expiration times\n// during the commit phase. This enables them to be traced across components\n// that spawn new work during render. E.g. hidden boundaries, suspended SSR\n// hydration or SuspenseList.\nlet spawnedWorkDuringRender: null | Array<ExpirationTime> = null;\n\n// Expiration times are computed by adding to the current time (the start\n// time). However, if two updates are scheduled within the same event, we\n// should treat their start times as simultaneous, even if the actual clock\n// time has advanced between the first and second call.\n\n// In other words, because expiration times determine how updates are batched,\n// we want all updates of like priority that occur within the same event to\n// receive the same expiration time. Otherwise we get tearing.\nlet currentEventTime: ExpirationTime = NoWork;\n\nexport function requestCurrentTimeForUpdate() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return msToExpirationTime(now());\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoWork) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = msToExpirationTime(now());\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return msToExpirationTime(now());\n}\n\nexport function computeExpirationForFiber(\n  currentTime: ExpirationTime,\n  fiber: Fiber,\n  suspenseConfig: null | SuspenseConfig,\n): ExpirationTime {\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return Sync;\n  }\n\n  const priorityLevel = getCurrentPriorityLevel();\n  if ((mode & ConcurrentMode) === NoMode) {\n    return priorityLevel === ImmediatePriority ? Sync : Batched;\n  }\n\n  if ((executionContext & RenderContext) !== NoContext) {\n    // Use whatever time we're already rendering\n    // TODO: Should there be a way to opt out, like with `runWithPriority`?\n    return renderExpirationTime;\n  }\n\n  let expirationTime;\n  if (suspenseConfig !== null) {\n    // Compute an expiration time based on the Suspense timeout.\n    expirationTime = computeSuspenseExpiration(\n      currentTime,\n      suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION,\n    );\n  } else {\n    // Compute an expiration time based on the Scheduler priority.\n    switch (priorityLevel) {\n      case ImmediatePriority:\n        expirationTime = Sync;\n        break;\n      case UserBlockingPriority:\n        // TODO: Rename this to computeUserBlockingExpiration\n        expirationTime = computeInteractiveExpiration(currentTime);\n        break;\n      case NormalPriority:\n      case LowPriority: // TODO: Handle LowPriority\n        // TODO: Rename this to... something better.\n        expirationTime = computeAsyncExpiration(currentTime);\n        break;\n      case IdlePriority:\n        expirationTime = Idle;\n        break;\n      default:\n        invariant(false, 'Expected a valid priority level');\n    }\n  }\n\n  // If we're in the middle of rendering a tree, do not update at the same\n  // expiration time that is already rendering.\n  // TODO: We shouldn't have to do this if the update is on a different root.\n  // Refactor computeExpirationForFiber + scheduleUpdate so we have access to\n  // the root when we check for this condition.\n  if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {\n    // This is a trick to move this update into a separate batch\n    expirationTime -= 1;\n  }\n\n  return expirationTime;\n}\n\n/**\n * 判断任务是否为同步 调用同步任务入口\n */\nexport function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  expirationTime: ExpirationTime,\n) {\n  /**\n   * fiber: 初始化渲染时为 rootFiber, 即 <div id=\"root\"></div> 对应的 Fiber 对象\n   * expirationTime: 任务过期时间 => 1073741823\n   */\n  /**\n   * 判断是否是无限循环的 update 如果是就报错\n   * 在 componentWillUpdate 或者 componentDidUpdate 生命周期函数中重复调用\n   * setState 方法时, 可能会发生这种情况, React 限制了嵌套更新的数量以防止无限循环\n   * 限制的嵌套更新数量为 50, 可通过 NESTED_UPDATE_LIMIT 全局变量获取\n   */\n  checkForNestedUpdates();\n  // 开发环境下执行的代码 忽略\n  warnAboutRenderPhaseUpdatesInDEV(fiber);\n  // 遍历更新子节点的过期时间 返回 FiberRoot\n  const root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);\n  if (root === null) {\n    // 开发环境下执行 忽略\n    warnAboutUpdateOnUnmountedFiberInDEV(fiber);\n    return;\n  }\n  // 判断是否有高优先级任务打断当前正在执行的任务\n  // 内部判断条件不成立 内部代码没有得到执行\n  checkForInterruption(fiber, expirationTime);\n\n  // 报告调度更新, 测试环境执行, 忽略\n  recordScheduleUpdate();\n\n  // 获取当前调度任务的优先级 数值类型 从90开始 数值越大 优先级越高\n  // 97 普通优先级任务\n  const priorityLevel = getCurrentPriorityLevel();\n  // 判断任务是否是同步任务 Sync的值为: 1073741823\n  if (expirationTime === Sync) {\n    if (\n      // 检查是否处于非批量更新模式\n      (executionContext & LegacyUnbatchedContext) !== NoContext &&\n      // 检查是否没有处于正在进行渲染的任务\n      (executionContext & (RenderContext | CommitContext)) === NoContext\n    ) {\n      // 在根上注册待处理的交互, 以避免丢失跟踪的交互数据\n      // 初始渲染时内部条件判断不成立, 内部代码没有得到执行\n      schedulePendingInteractions(root, expirationTime);\n      // 同步任务入口点\n      performSyncWorkOnRoot(root);\n    } else {\n      ensureRootIsScheduled(root);\n      schedulePendingInteractions(root, expirationTime);\n      if (executionContext === NoContext) {\n        // Flush the synchronous work now, unless we're already working or inside\n        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n        // scheduleCallbackForFiber to preserve the ability to schedule a callback\n        // without immediately flushing it. We only do this for user-initiated\n        // updates, to preserve historical behavior of legacy mode.\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    ensureRootIsScheduled(root);\n    schedulePendingInteractions(root, expirationTime);\n  }\n  // 初始渲染不执行\n  if (\n    (executionContext & DiscreteEventContext) !== NoContext &&\n    // Only updates at user-blocking priority or greater are considered\n    // discrete, even inside a discrete event.\n    (priorityLevel === UserBlockingPriority ||\n      priorityLevel === ImmediatePriority)\n  ) {\n    // This is the result of a discrete event. Track the lowest priority\n    // discrete update per root so we can flush them early, if needed.\n    if (rootsWithPendingDiscreteUpdates === null) {\n      rootsWithPendingDiscreteUpdates = new Map([[root, expirationTime]]);\n    } else {\n      const lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);\n      if (lastDiscreteTime === undefined || lastDiscreteTime > expirationTime) {\n        rootsWithPendingDiscreteUpdates.set(root, expirationTime);\n      }\n    }\n  }\n}\nexport const scheduleWork = scheduleUpdateOnFiber;\n\n// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateTimeFromFiberToRoot(fiber, expirationTime) {\n  // Update the source fiber's expiration time\n  if (fiber.expirationTime < expirationTime) {\n    fiber.expirationTime = expirationTime;\n  }\n  let alternate = fiber.alternate;\n  if (alternate !== null && alternate.expirationTime < expirationTime) {\n    alternate.expirationTime = expirationTime;\n  }\n  // Walk the parent path to the root and update the child expiration time.\n  let node = fiber.return;\n  let root = null;\n  if (node === null && fiber.tag === HostRoot) {\n    root = fiber.stateNode;\n  } else {\n    while (node !== null) {\n      alternate = node.alternate;\n      if (node.childExpirationTime < expirationTime) {\n        node.childExpirationTime = expirationTime;\n        if (\n          alternate !== null &&\n          alternate.childExpirationTime < expirationTime\n        ) {\n          alternate.childExpirationTime = expirationTime;\n        }\n      } else if (\n        alternate !== null &&\n        alternate.childExpirationTime < expirationTime\n      ) {\n        alternate.childExpirationTime = expirationTime;\n      }\n      if (node.return === null && node.tag === HostRoot) {\n        root = node.stateNode;\n        break;\n      }\n      node = node.return;\n    }\n  }\n  if (root !== null) {\n    if (workInProgressRoot === root) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that's unprocessed work on this root.\n      markUnprocessedUpdateTime(expirationTime);\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: This happens to work when receiving an update during the render\n        // phase, because of the trick inside computeExpirationForFiber to\n        // subtract 1 from `renderExpirationTime` to move it into a\n        // separate bucket. But we should probably model it with an exception,\n        // using the same mechanism we use to force hydration of a subtree.\n        // TODO: This does not account for low pri updates that were already\n        // scheduled before the root started rendering. Need to track the next\n        // pending expiration time (perhaps by backtracking the return path) and\n        // then trigger a restart in the `renderDidSuspendDelayIfPossible` path.\n        markRootSuspendedAtTime(root, renderExpirationTime);\n      }\n    }\n    // Mark that the root has a pending update.\n    markRootUpdatedAtTime(root, expirationTime);\n  }\n\n  return root;\n}\n\nfunction getNextRootExpirationTimeToWorkOn(root: FiberRoot): ExpirationTime {\n  // Determines the next expiration time that the root should render, taking\n  // into account levels that may be suspended, or levels that may have\n  // received a ping.\n\n  const lastExpiredTime = root.lastExpiredTime;\n  if (lastExpiredTime !== NoWork) {\n    return lastExpiredTime;\n  }\n\n  // \"Pending\" refers to any update that hasn't committed yet, including if it\n  // suspended. The \"suspended\" range is therefore a subset.\n  const firstPendingTime = root.firstPendingTime;\n  if (!isRootSuspendedAtTime(root, firstPendingTime)) {\n    // The highest priority pending time is not suspended. Let's work on that.\n    return firstPendingTime;\n  }\n\n  // If the first pending time is suspended, check if there's a lower priority\n  // pending level that we know about. Or check if we received a ping. Work\n  // on whichever is higher priority.\n  const lastPingedTime = root.lastPingedTime;\n  const nextKnownPendingLevel = root.nextKnownPendingLevel;\n  const nextLevel =\n    lastPingedTime > nextKnownPendingLevel\n      ? lastPingedTime\n      : nextKnownPendingLevel;\n  if (\n    enableTrainModelFix &&\n    nextLevel <= Idle &&\n    firstPendingTime !== nextLevel\n  ) {\n    // Don't work on Idle/Never priority unless everything else is committed.\n    return NoWork;\n  }\n  return nextLevel;\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the\n// expiration time of the existing task is the same as the expiration time of\n// the next level that the root has work on. This function is called on every\n// update, and right before exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot) {\n  const lastExpiredTime = root.lastExpiredTime;\n  if (lastExpiredTime !== NoWork) {\n    // Special case: Expired work should flush synchronously.\n    root.callbackExpirationTime = Sync;\n    root.callbackPriority = ImmediatePriority;\n    root.callbackNode = scheduleSyncCallback(\n      performSyncWorkOnRoot.bind(null, root),\n    );\n    return;\n  }\n\n  const expirationTime = getNextRootExpirationTimeToWorkOn(root);\n  const existingCallbackNode = root.callbackNode;\n  if (expirationTime === NoWork) {\n    // There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      root.callbackNode = null;\n      root.callbackExpirationTime = NoWork;\n      root.callbackPriority = NoPriority;\n    }\n    return;\n  }\n\n  // TODO: If this is an update, we already read the current time. Pass the\n  // time as an argument.\n  const currentTime = requestCurrentTimeForUpdate();\n  const priorityLevel = inferPriorityFromExpirationTime(\n    currentTime,\n    expirationTime,\n  );\n\n  // If there's an existing render task, confirm it has the correct priority and\n  // expiration time. Otherwise, we'll cancel it and schedule a new one.\n  if (existingCallbackNode !== null) {\n    const existingCallbackPriority = root.callbackPriority;\n    const existingCallbackExpirationTime = root.callbackExpirationTime;\n    if (\n      // Callback must have the exact same expiration time.\n      existingCallbackExpirationTime === expirationTime &&\n      // Callback must have greater or equal priority.\n      existingCallbackPriority >= priorityLevel\n    ) {\n      // Existing callback is sufficient.\n      return;\n    }\n    // Need to schedule a new task.\n    // TODO: Instead of scheduling a new task, we should be able to change the\n    // priority of the existing one.\n    cancelCallback(existingCallbackNode);\n  }\n\n  root.callbackExpirationTime = expirationTime;\n  root.callbackPriority = priorityLevel;\n\n  let callbackNode;\n  if (expirationTime === Sync) {\n    // Sync React callbacks are scheduled on a special internal queue\n    callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n  } else if (disableSchedulerTimeoutBasedOnReactExpirationTime) {\n    callbackNode = scheduleCallback(\n      priorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  } else {\n    callbackNode = scheduleCallback(\n      priorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n      // Compute a task timeout based on the expiration time. This also affects\n      // ordering because tasks are processed in timeout order.\n      {timeout: expirationTimeToMs(expirationTime) - now()},\n    );\n  }\n\n  root.callbackNode = callbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoWork;\n\n  if (didTimeout) {\n    // The render task took too long to complete. Mark the current time as\n    // expired to synchronously render all expired work in a single batch.\n    const currentTime = requestCurrentTimeForUpdate();\n    markRootExpiredAtTime(root, currentTime);\n    // This will schedule a synchronous callback.\n    ensureRootIsScheduled(root);\n    return null;\n  }\n\n  // Determine the next expiration time to work on, using the fields stored\n  // on the root.\n  const expirationTime = getNextRootExpirationTimeToWorkOn(root);\n  if (expirationTime !== NoWork) {\n    const originalCallbackNode = root.callbackNode;\n    invariant(\n      (executionContext & (RenderContext | CommitContext)) === NoContext,\n      'Should not already be working.',\n    );\n\n    flushPassiveEffects();\n\n    // If the root or expiration time have changed, throw out the existing stack\n    // and prepare a fresh one. Otherwise we'll continue where we left off.\n    if (\n      root !== workInProgressRoot ||\n      expirationTime !== renderExpirationTime\n    ) {\n      prepareFreshStack(root, expirationTime);\n      startWorkOnPendingInteractions(root, expirationTime);\n    }\n\n    // If we have a work-in-progress fiber, it means there's still work to do\n    // in this root.\n    if (workInProgress !== null) {\n      const prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      const prevDispatcher = pushDispatcher(root);\n      const prevInteractions = pushInteractions(root);\n      startWorkLoopTimer(workInProgress);\n      do {\n        try {\n          workLoopConcurrent();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      executionContext = prevExecutionContext;\n      popDispatcher(prevDispatcher);\n      if (enableSchedulerTracing) {\n        popInteractions(((prevInteractions: any): Set<Interaction>));\n      }\n\n      if (workInProgressRootExitStatus === RootFatalErrored) {\n        const fatalError = workInProgressRootFatalError;\n        stopInterruptedWorkLoopTimer();\n        prepareFreshStack(root, expirationTime);\n        markRootSuspendedAtTime(root, expirationTime);\n        ensureRootIsScheduled(root);\n        throw fatalError;\n      }\n\n      if (workInProgress !== null) {\n        // There's still work left over. Exit without committing.\n        stopInterruptedWorkLoopTimer();\n      } else {\n        // We now have a consistent tree. The next step is either to commit it,\n        // or, if something suspended, wait to commit it after a timeout.\n        stopFinishedWorkLoopTimer();\n\n        const finishedWork: Fiber = ((root.finishedWork =\n          root.current.alternate): any);\n        root.finishedExpirationTime = expirationTime;\n        finishConcurrentRender(\n          root,\n          finishedWork,\n          workInProgressRootExitStatus,\n          expirationTime,\n        );\n      }\n\n      ensureRootIsScheduled(root);\n      if (root.callbackNode === originalCallbackNode) {\n        // The task node scheduled for this root is the same one that's\n        // currently executed. Need to return a continuation.\n        return performConcurrentWorkOnRoot.bind(null, root);\n      }\n    }\n  }\n  return null;\n}\n\nfunction finishConcurrentRender(\n  root,\n  finishedWork,\n  exitStatus,\n  expirationTime,\n) {\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored: {\n      invariant(false, 'Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // If this was an async render, the error may have happened due to\n      // a mutation in a concurrent event. Try rendering one more time,\n      // synchronously, to see if the error goes away. If there are\n      // lower priority updates, let's include those, too, in case they\n      // fix the inconsistency. Render at Idle to include all updates.\n      // If it was Idle or Never or some not-yet-invented time, render\n      // at that time.\n      markRootExpiredAtTime(\n        root,\n        expirationTime > Idle ? Idle : expirationTime,\n      );\n      // We assume that this second render pass will be synchronous\n      // and therefore not hit this path again.\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspendedAtTime(root, expirationTime);\n      const lastSuspendedTime = root.lastSuspendedTime;\n      if (expirationTime === lastSuspendedTime) {\n        root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);\n      }\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      // If we have processed new updates during this render, we may now\n      // have a new loading state ready. We want to ensure that we commit\n      // that as soon as possible.\n      const hasNotProcessedNewUpdates =\n        workInProgressRootLatestProcessedExpirationTime === Sync;\n      if (\n        hasNotProcessedNewUpdates &&\n        // do not delay if we're inside an act() scope\n        !(\n          __DEV__ &&\n          flushSuspenseFallbacksInTests &&\n          IsThisRendererActing.current\n        )\n      ) {\n        // If we have not processed any new updates during this pass, then\n        // this is either a retry of an existing fallback state or a\n        // hidden tree. Hidden trees shouldn't be batched with other work\n        // and after that's fixed it can only be a retry. We're going to\n        // throttle committing retries so that we don't show too many\n        // loading states too quickly.\n        let msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          if (workInProgressRootHasPendingPing) {\n            const lastPingedTime = root.lastPingedTime;\n            if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {\n              // This render was pinged but we didn't get to restart\n              // earlier so try restarting now instead.\n              root.lastPingedTime = expirationTime;\n              prepareFreshStack(root, expirationTime);\n              break;\n            }\n          }\n\n          const nextTime = getNextRootExpirationTimeToWorkOn(root);\n          if (nextTime !== NoWork && nextTime !== expirationTime) {\n            // There's additional work on this root.\n            break;\n          }\n          if (\n            lastSuspendedTime !== NoWork &&\n            lastSuspendedTime !== expirationTime\n          ) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            root.lastPingedTime = lastSuspendedTime;\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspendedAtTime(root, expirationTime);\n      const lastSuspendedTime = root.lastSuspendedTime;\n      if (expirationTime === lastSuspendedTime) {\n        root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);\n      }\n\n      if (\n        // do not delay if we're inside an act() scope\n        !(\n          __DEV__ &&\n          flushSuspenseFallbacksInTests &&\n          IsThisRendererActing.current\n        )\n      ) {\n        // We're suspended in a state that should be avoided. We'll try to\n        // avoid committing it for as long as the timeouts let us.\n        if (workInProgressRootHasPendingPing) {\n          const lastPingedTime = root.lastPingedTime;\n          if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {\n            // This render was pinged but we didn't get to restart earlier\n            // so try restarting now instead.\n            root.lastPingedTime = expirationTime;\n            prepareFreshStack(root, expirationTime);\n            break;\n          }\n        }\n\n        const nextTime = getNextRootExpirationTimeToWorkOn(root);\n        if (nextTime !== NoWork && nextTime !== expirationTime) {\n          // There's additional work on this root.\n          break;\n        }\n        if (\n          lastSuspendedTime !== NoWork &&\n          lastSuspendedTime !== expirationTime\n        ) {\n          // We should prefer to render the fallback of at the last\n          // suspended level. Ping the last suspended level to try\n          // rendering it again.\n          root.lastPingedTime = lastSuspendedTime;\n          break;\n        }\n\n        let msUntilTimeout;\n        if (workInProgressRootLatestSuspenseTimeout !== Sync) {\n          // We have processed a suspense config whose expiration time we\n          // can use as the timeout.\n          msUntilTimeout =\n            expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now();\n        } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {\n          // This should never normally happen because only new updates\n          // cause delayed states, so we should have processed something.\n          // However, this could also happen in an offscreen tree.\n          msUntilTimeout = 0;\n        } else {\n          // If we don't have a suspense config, we're going to use a\n          // heuristic to determine how long we can suspend.\n          const eventTimeMs: number = inferTimeFromExpirationTime(\n            workInProgressRootLatestProcessedExpirationTime,\n          );\n          const currentTimeMs = now();\n          const timeUntilExpirationMs =\n            expirationTimeToMs(expirationTime) - currentTimeMs;\n          let timeElapsed = currentTimeMs - eventTimeMs;\n          if (timeElapsed < 0) {\n            // We get this wrong some time since we estimate the time.\n            timeElapsed = 0;\n          }\n\n          msUntilTimeout = jnd(timeElapsed) - timeElapsed;\n\n          // Clamp the timeout to the expiration time. TODO: Once the\n          // event time is exact instead of inferred from expiration time\n          // we don't need this.\n          if (timeUntilExpirationMs < msUntilTimeout) {\n            msUntilTimeout = timeUntilExpirationMs;\n          }\n        }\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      if (\n        // do not delay if we're inside an act() scope\n        !(\n          __DEV__ &&\n          flushSuspenseFallbacksInTests &&\n          IsThisRendererActing.current\n        ) &&\n        workInProgressRootLatestProcessedExpirationTime !== Sync &&\n        workInProgressRootCanSuspendUsingConfig !== null\n      ) {\n        // If we have exceeded the minimum loading delay, which probably\n        // means we have shown a spinner already, we might have to suspend\n        // a bit longer to ensure that the spinner is shown for\n        // enough time.\n        const msUntilTimeout = computeMsUntilSuspenseLoadingDelay(\n          workInProgressRootLatestProcessedExpirationTime,\n          expirationTime,\n          workInProgressRootCanSuspendUsingConfig,\n        );\n        if (msUntilTimeout > 10) {\n          markRootSuspendedAtTime(root, expirationTime);\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      commitRoot(root);\n      break;\n    }\n    default: {\n      invariant(false, 'Unknown root exit status.');\n    }\n  }\n}\n\n// 进入 render 阶段, 构建 workInProgress Fiber 树\nfunction performSyncWorkOnRoot(root) {\n  // 参数 root 为 fiberRoot 对象\n\n  // 检查是否有过期的任务\n  // 如果没有过期的任务 值为 0\n  // 初始化渲染没有过期的任务待执行\n  const lastExpiredTime = root.lastExpiredTime;\n  // NoWork 值为 0\n  // 如果有过期的任务 将过期时间设置为 lastExpiredTime 否则将过期时间设置为 Sync\n  // 初始渲染过期时间被设置成了 Sync\n  const expirationTime = lastExpiredTime !== NoWork ? lastExpiredTime : Sync;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  // 处理 useEffect\n  flushPassiveEffects();\n\n  // 如果 root 和 workInProgressRoot 不相等\n  // 说明 workInProgressRoot 不存在, 说明还没有构建 workInProgress Fiber 树\n  // workInProgressRoot 为全局变量 默认值为 null, 初始渲染时值为 null\n  // expirationTime => 1073741823\n  // renderExpirationTime => 0\n  // true\n  if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {\n    // 构建 workInProgressFiber 树及 rootFiber\n    prepareFreshStack(root, expirationTime);\n    // 初始渲染不执行 内部条件判断不成立\n    startWorkOnPendingInteractions(root, expirationTime);\n  }\n  // workInProgress 如果不为 null\n  if (workInProgress !== null) {\n    const prevExecutionContext = executionContext;\n    executionContext |= RenderContext;\n    const prevDispatcher = pushDispatcher(root);\n    const prevInteractions = pushInteractions(root);\n    startWorkLoopTimer(workInProgress);\n    do {\n      try {\n        // 以同步的方式开始构建 Fiber 对象\n        workLoopSync();\n        break;\n      } catch (thrownValue) {\n        handleError(root, thrownValue);\n      }\n    } while (true);\n\n    resetContextDependencies();\n    executionContext = prevExecutionContext;\n    popDispatcher(prevDispatcher);\n    if (enableSchedulerTracing) {\n      popInteractions(((prevInteractions: any): Set<Interaction>));\n    }\n    // 初始渲染 不执行\n    if (workInProgressRootExitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      stopInterruptedWorkLoopTimer();\n      prepareFreshStack(root, expirationTime);\n      markRootSuspendedAtTime(root, expirationTime);\n      ensureRootIsScheduled(root);\n      throw fatalError;\n    }\n\n    if (workInProgress !== null) {\n      // 这是一个同步渲染, 所以我们应该完成整棵树\n      // 无法提交不完整的 root, 此错误可能是由于React中的错误所致. 请提出问题.\n      invariant(\n        false,\n        'Cannot commit an incomplete root. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n      );\n    } else {\n      // We now have a consistent tree. Because this is a sync render, we\n      // will commit it even if something suspended.\n      stopFinishedWorkLoopTimer();\n      // 将构建好的新 Fiber 对象存储在 finishedWork 属性中\n      // 提交阶段使用\n      root.finishedWork = (root.current.alternate: any);\n      root.finishedExpirationTime = expirationTime;\n      // 结束 render 阶段\n      // 进入 commit 阶段\n      finishSyncRender(root);\n    }\n\n    // Before exiting, make sure there's a callback scheduled for the next\n    // pending level.\n    ensureRootIsScheduled(root);\n  }\n\n  return null;\n}\n\nfunction finishSyncRender(root) {\n  // 销毁 workInProgress Fiber 树\n  // 因为待提交 Fiber 对象已经被存储在了 root.finishedWork 中\n  workInProgressRoot = null;\n  // 进入 commit 阶段\n  commitRoot(root);\n}\n\nexport function flushRoot(root: FiberRoot, expirationTime: ExpirationTime) {\n  markRootExpiredAtTime(root, expirationTime);\n  ensureRootIsScheduled(root);\n  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n    flushSyncCallbackQueue();\n  }\n}\n\nexport function flushDiscreteUpdates() {\n  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.\n  // However, `act` uses `batchedUpdates`, so there's no way to distinguish\n  // those two cases. Need to fix this before exposing flushDiscreteUpdates\n  // as a public API.\n  if (\n    (executionContext & (BatchedContext | RenderContext | CommitContext)) !==\n    NoContext\n  ) {\n    if (__DEV__) {\n      if ((executionContext & RenderContext) !== NoContext) {\n        console.error(\n          'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' +\n            'already rendering.',\n        );\n      }\n    }\n    // We're already rendering, so we can't synchronously flush pending work.\n    // This is probably a nested event dispatch triggered by a lifecycle/effect,\n    // like `el.focus()`. Exit.\n    return;\n  }\n  flushPendingDiscreteUpdates();\n  // If the discrete updates scheduled passive effects, flush them now so that\n  // they fire before the next serial event.\n  flushPassiveEffects();\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  // TODO: Remove in favor of Scheduler.next\n  return runWithPriority(NormalPriority, fn);\n}\n\nexport function syncUpdates<A, B, C, R>(\n  fn: (A, B, C) => R,\n  a: A,\n  b: B,\n  c: C,\n): R {\n  return runWithPriority(ImmediatePriority, fn.bind(null, a, b, c));\n}\n\nfunction flushPendingDiscreteUpdates() {\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    // For each root with pending discrete updates, schedule a callback to\n    // immediately flush them.\n    const roots = rootsWithPendingDiscreteUpdates;\n    rootsWithPendingDiscreteUpdates = null;\n    roots.forEach((expirationTime, root) => {\n      markRootExpiredAtTime(root, expirationTime);\n      ensureRootIsScheduled(root);\n    });\n    // Now flush the immediate queue.\n    flushSyncCallbackQueue();\n  }\n}\n\nexport function batchedUpdates<A, R>(fn: (A) => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function batchedEventUpdates<A, R>(fn: (A) => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= EventContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= DiscreteEventContext;\n  try {\n    // Should this\n    return runWithPriority(UserBlockingPriority, fn.bind(null, a, b, c, d));\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function unbatchedUpdates<A, R>(fn: (a: A) => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext &= ~BatchedContext;\n  executionContext |= LegacyUnbatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushSync<A, R>(fn: (A) => R, a: A): R {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    invariant(\n      false,\n      'flushSync was called from inside a lifecycle method. It cannot be ' +\n        'called when React is already rendering.',\n    );\n  }\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return runWithPriority(ImmediatePriority, fn.bind(null, a));\n  } finally {\n    executionContext = prevExecutionContext;\n    // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n    flushSyncCallbackQueue();\n  }\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    runWithPriority(ImmediatePriority, fn);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\n/**\n * 构建 workInProgressFiber 树及 rootFiber\n */\nfunction prepareFreshStack(root, expirationTime) {\n  // 为 FiberRoot 对象添加 finishedWork 属性\n  // finishedWork 表示 render 阶段执行完成后构建的待提交的 Fiber 对象\n  root.finishedWork = null;\n  // 初始化 finishedExpirationTime 值为 0\n  root.finishedExpirationTime = NoWork;\n\n  const timeoutHandle = root.timeoutHandle;\n  // 初始化渲染不执行 timeoutHandle => -1 noTimeout => -1\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  // 初始化渲染不执行 workInProgress 全局变量 初始化为 null\n  // false\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  // 建构 workInProgress Fiber 树的 fiberRoot 对象\n  workInProgressRoot = root;\n  // 构建 workInProgress Fiber 树中的 rootFiber\n  workInProgress = createWorkInProgress(root.current, null);\n  renderExpirationTime = expirationTime;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootLatestProcessedExpirationTime = Sync;\n  workInProgressRootLatestSuspenseTimeout = Sync;\n  workInProgressRootCanSuspendUsingConfig = null;\n  workInProgressRootNextUnprocessedUpdateTime = NoWork;\n  workInProgressRootHasPendingPing = false;\n  // true\n  if (enableSchedulerTracing) {\n    spawnedWorkDuringRender = null;\n  }\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n\n      if (workInProgress === null || workInProgress.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // interntionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return null;\n      }\n\n      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);\n      }\n\n      throwException(\n        root,\n        workInProgress.return,\n        workInProgress,\n        thrownValue,\n        renderExpirationTime,\n      );\n      workInProgress = completeUnitOfWork(workInProgress);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher(root) {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nfunction pushInteractions(root) {\n  if (enableSchedulerTracing) {\n    const prevInteractions: Set<Interaction> | null = __interactionsRef.current;\n    __interactionsRef.current = root.memoizedInteractions;\n    return prevInteractions;\n  }\n  return null;\n}\n\nfunction popInteractions(prevInteractions) {\n  if (enableSchedulerTracing) {\n    __interactionsRef.current = prevInteractions;\n  }\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markRenderEventTimeAndConfig(\n  expirationTime: ExpirationTime,\n  suspenseConfig: null | SuspenseConfig,\n): void {\n  if (\n    expirationTime < workInProgressRootLatestProcessedExpirationTime &&\n    expirationTime > Idle\n  ) {\n    workInProgressRootLatestProcessedExpirationTime = expirationTime;\n  }\n  if (suspenseConfig !== null) {\n    if (\n      expirationTime < workInProgressRootLatestSuspenseTimeout &&\n      expirationTime > Idle\n    ) {\n      workInProgressRootLatestSuspenseTimeout = expirationTime;\n      // Most of the time we only have one config and getting wrong is not bad.\n      workInProgressRootCanSuspendUsingConfig = suspenseConfig;\n    }\n  }\n}\n\nexport function markUnprocessedUpdateTime(\n  expirationTime: ExpirationTime,\n): void {\n  if (expirationTime > workInProgressRootNextUnprocessedUpdateTime) {\n    workInProgressRootNextUnprocessedUpdateTime = expirationTime;\n  }\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootIncomplete ||\n    workInProgressRootExitStatus === RootSuspended\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there's a lower priority update somewhere else in the tree.\n  if (\n    workInProgressRootNextUnprocessedUpdateTime !== NoWork &&\n    workInProgressRoot !== null\n  ) {\n    // Mark the current render as suspended, and then mark that there's a\n    // pending update.\n    // TODO: This should immediately interrupt the current render, instead\n    // of waiting until the next time we yield.\n    markRootSuspendedAtTime(workInProgressRoot, renderExpirationTime);\n    markRootUpdatedAtTime(\n      workInProgressRoot,\n      workInProgressRootNextUnprocessedUpdateTime,\n    );\n  }\n}\n\nexport function renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction inferTimeFromExpirationTime(expirationTime: ExpirationTime): number {\n  // We don't know exactly when the update was scheduled, but we can infer an\n  // approximate start time from the expiration time.\n  const earliestExpirationTimeMs = expirationTimeToMs(expirationTime);\n  return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;\n}\n\nfunction inferTimeFromExpirationTimeWithSuspenseConfig(\n  expirationTime: ExpirationTime,\n  suspenseConfig: SuspenseConfig,\n): number {\n  // We don't know exactly when the update was scheduled, but we can infer an\n  // approximate start time from the expiration time by subtracting the timeout\n  // that was added to the event time.\n  const earliestExpirationTimeMs = expirationTimeToMs(expirationTime);\n  return (\n    earliestExpirationTimeMs -\n    (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION)\n  );\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // workInProgress 是一个 fiber 对象\n  // 它的值不为 null 意味着该 fiber 对象上仍然有更新要执行\n  // while 方法支撑 render 阶段 所有 fiber 节点的构建\n  while (workInProgress !== null) {\n    workInProgress = performUnitOfWork(workInProgress);\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    workInProgress = performUnitOfWork(workInProgress);\n  }\n}\n// 构建 Fiber 对象\nfunction performUnitOfWork(unitOfWork: Fiber): Fiber | null {\n  // unitOfWork => workInProgress Fiber 树中的 rootFiber\n  // current => currentFiber 树中的 rootFiber\n  const current = unitOfWork.alternate;\n  startWorkTimer(unitOfWork);\n  // 开发环境执行 忽略\n  setCurrentDebugFiberInDEV(unitOfWork);\n  // 存储下一个要构建的子级 Fiber 对象\n  let next;\n  // 初始渲染 不执行\n  // false\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, renderExpirationTime);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    // beginWork: 从父到子, 构建 Fiber 节点对象\n    // 返回值 next 为当前节点的子节点\n    next = beginWork(current, unitOfWork, renderExpirationTime);\n  }\n  // 开发环境执行 忽略\n  resetCurrentDebugFiberInDEV();\n  // 为旧的 props 属性赋值\n  // 此次更新后 pendingProps 变为 memoizedProps\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  // 如果子节点不存在说明当前节点向下遍历子节点已经到底了\n  // 继续向上返回 遇到兄弟节点 构建兄弟节点的子 Fiber 对象 直到返回到根 Fiber 对象\n  if (next === null) {\n    // 从子到父, 构建其余节点 Fiber 对象\n    next = completeUnitOfWork(unitOfWork);\n  }\n\n  ReactCurrentOwner.current = null;\n  return next;\n}\n\n/**\n *\n * 从下至上移动到该节点的兄弟节点, 如果一直往上没有兄弟节点就返回父节点, 最终会到达 root 节点\n * 1. 创建其他节点的 Fiber 对象\n * 2. 创建每一个节点的真实 DOM 对象并将其添加到 stateNode 属性中\n * 3. 构建 effect 链表结构\n */\nfunction completeUnitOfWork(unitOfWork: Fiber): Fiber | null {\n  // 为 workInProgress 全局变量重新赋值\n  workInProgress = unitOfWork;\n  do {\n    // 获取备份节点\n    // 初始化渲染 非根 Fiber 对象没有备份节点 所以 current 为 null\n    const current = workInProgress.alternate;\n    // 父级 Fiber 对象, 非根 Fiber 对象都有父级\n    const returnFiber = workInProgress.return;\n    // 判断传入的 Fiber 对象是否构建完成, 任务调度相关\n    // & 是表示位的与运算, 把左右两边的数字转化为二进制\n    // 然后每一位分别进行比较, 如果相等就为1, 不相等即为0\n    // 此处应用\"位与\"运算符的目的是\"清零\"\n    // true\n    if ((workInProgress.effectTag & Incomplete) === NoEffect) {\n      // 开发环境代码 忽略\n      setCurrentDebugFiberInDEV(workInProgress);\n      let next;\n      // 如果不能使用分析器的 timer, 直接执行 completeWork\n      // enableProfilerTimer => true\n      // 但此处无论条件是否成立都会执行 completeWork\n      if (\n        !enableProfilerTimer ||\n        (workInProgress.mode & ProfileMode) === NoMode\n      ) {\n        // 重点代码(二)\n        // 创建节点真实 DOM 对象并将其添加到 stateNode 属性中\n        next = completeWork(current, workInProgress, renderExpirationTime);\n      } else {\n        // 否则执行分析器timer, 并执行 completeWork\n        startProfilerTimer(workInProgress);\n        // 创建节点真实 DOM 对象并将其添加到 stateNode 属性中\n        next = completeWork(current, workInProgress, renderExpirationTime);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n      }\n      stopWorkTimer(workInProgress);\n      resetCurrentDebugFiberInDEV();\n      resetChildExpirationTime(workInProgress);\n      // 重点代码(一)\n      // 如果子级存在\n      if (next !== null) {\n        // 返回子级 一直返回到 workLoopSync\n        // 再重新执行 performUnitOfWork 构建子级 Fiber 节点对象\n        return next;\n      }\n\n      // 构建 effect 链表结构\n      // 如果不是根 Fiber 就是 true 否则就是 false\n      // 将子树和此 Fiber 的所有 effect 附加到父级的 effect 列表中\n      if (\n        // 如果父 Fiber 存在 并且\n        returnFiber !== null &&\n        // 父 Fiber 对象中的 effectTag 为 0\n        (returnFiber.effectTag & Incomplete) === NoEffect\n      ) {\n        // 将子树和此 Fiber 的所有副作用附加到父级的 effect 列表上\n\n        // 以下两个判断的作用是搜集子 Fiber的 effect 到父 Fiber\n        if (returnFiber.firstEffect === null) {\n          // first\n          returnFiber.firstEffect = workInProgress.firstEffect;\n        }\n\n        if (workInProgress.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            // next\n            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;\n          }\n          // last\n          returnFiber.lastEffect = workInProgress.lastEffect;\n        }\n\n        // 获取副作用标记\n        // 初始渲染时除[根组件]以外的 Fiber, effectTag 值都为 0, 即不需要执行任何真实DOM操作\n        // 根组件的 effectTag 值为 3, 即需要将此节点对应的真实DOM对象添加到页面中\n        const effectTag = workInProgress.effectTag;\n\n        // 创建 effect 列表时跳过 NoWork(0) 和 PerformedWork(1) 标记\n        // PerformedWork 由 React DevTools 读取, 不提交\n        // 初始渲染时 只有遍历到了根组件 判断条件才能成立, 将 effect 链表添加到 rootFiber\n        // 初始渲染 FiberRoot 对象中的 firstEffect 和 lastEffect 都是 App 组件\n        // 因为当所有节点在内存中构建完成后, 只需要一次将所有 DOM 添加到页面中\n        if (effectTag > PerformedWork) {\n          // false\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress;\n          } else {\n            // 为 fiberRoot 添加 firstEffect\n            returnFiber.firstEffect = workInProgress;\n          }\n          // 为 fiberRoot 添加 lastEffect\n          returnFiber.lastEffect = workInProgress;\n        }\n      }\n    } else {\n      // 初始渲染不执行\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(workInProgress, renderExpirationTime);\n\n      // Because this fiber did not complete, don't reset its expiration time.\n\n      if (\n        enableProfilerTimer &&\n        (workInProgress.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = workInProgress.actualDuration;\n        let child = workInProgress.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        workInProgress.actualDuration = actualDuration;\n      }\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        // TODO: The name stopFailedWorkTimer is misleading because Suspense\n        // also captures and restarts.\n        stopFailedWorkTimer(workInProgress);\n        next.effectTag &= HostEffectMask;\n        return next;\n      }\n      stopWorkTimer(workInProgress);\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.effectTag |= Incomplete;\n      }\n    }\n    // 获取下一个同级 Fiber 对象\n    const siblingFiber = workInProgress.sibling;\n    // 如果下一个同级 Fiber 对象存在\n    if (siblingFiber !== null) {\n      // 返回下一个同级 Fiber 对象\n      return siblingFiber;\n    }\n    // 否则退回父级\n    workInProgress = returnFiber;\n  } while (workInProgress !== null);\n\n  // 当执行到这里的时候, 说明遍历到了 root 节点, 已完成遍历\n  // 更新 workInProgressRootExitStatus 的状态为 已完成\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n  return null;\n}\n\nfunction getRemainingExpirationTime(fiber: Fiber) {\n  const updateExpirationTime = fiber.expirationTime;\n  const childExpirationTime = fiber.childExpirationTime;\n  return updateExpirationTime > childExpirationTime\n    ? updateExpirationTime\n    : childExpirationTime;\n}\n\nfunction resetChildExpirationTime(completedWork: Fiber) {\n  if (\n    renderExpirationTime !== Never &&\n    completedWork.childExpirationTime === Never\n  ) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  let newChildExpirationTime = NoWork;\n\n  // Bubble up the earliest expiration time.\n  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n    // In profiling mode, resetChildExpirationTime is also used to reset\n    // profiler durations.\n    let actualDuration = completedWork.actualDuration;\n    let treeBaseDuration = completedWork.selfBaseDuration;\n\n    // When a fiber is cloned, its actualDuration is reset to 0. This value will\n    // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration. If\n    // the fiber has not been cloned though, (meaning no work was done), then\n    // this value will reflect the amount of time spent working on a previous\n    // render. In that case it should not bubble. We determine whether it was\n    // cloned by comparing the child pointer.\n    const shouldBubbleActualDurations =\n      completedWork.alternate === null ||\n      completedWork.child !== completedWork.alternate.child;\n\n    let child = completedWork.child;\n    while (child !== null) {\n      const childUpdateExpirationTime = child.expirationTime;\n      const childChildExpirationTime = child.childExpirationTime;\n      if (childUpdateExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childUpdateExpirationTime;\n      }\n      if (childChildExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childChildExpirationTime;\n      }\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n    completedWork.actualDuration = actualDuration;\n    completedWork.treeBaseDuration = treeBaseDuration;\n  } else {\n    let child = completedWork.child;\n    while (child !== null) {\n      const childUpdateExpirationTime = child.expirationTime;\n      const childChildExpirationTime = child.childExpirationTime;\n      if (childUpdateExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childUpdateExpirationTime;\n      }\n      if (childChildExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childChildExpirationTime;\n      }\n      child = child.sibling;\n    }\n  }\n\n  completedWork.childExpirationTime = newChildExpirationTime;\n}\n\nfunction commitRoot(root) {\n  // 获取任务优先级 97 => 普通优先级\n  const renderPriorityLevel = getCurrentPriorityLevel();\n  // 使用最高优先级执行当前任务, 因为 commit 阶段不可以被打断\n  // ImmediatePriority, 优先级为 99, 最高优先级\n  runWithPriority(\n    ImmediatePriority,\n    commitRootImpl.bind(null, root, renderPriorityLevel),\n  );\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // 触发useEffect回调与其他同步任务\n    // 由于这些任务可能触发新的渲染\n    // 所以这里要一直遍历执行直到没有任务\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  // 开发环境执行 忽略\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n  // 获取待提交 Fiber 对象 rootFiber\n  const finishedWork = root.finishedWork;\n\n  // 1073741823\n  const expirationTime = root.finishedExpirationTime;\n\n  // 如果没有任务要执行\n  if (finishedWork === null) {\n    // 阻止程序继续向下执行\n    return null;\n  }\n  // 重置为默认值\n  root.finishedWork = null;\n  root.finishedExpirationTime = NoWork;\n\n  invariant(\n    finishedWork !== root.current,\n    'Cannot commit the same tree as before. This error is likely caused by ' +\n      'a bug in React. Please file an issue.',\n  );\n\n  // commitRoot 是最后阶段, 不会再被异步调用了\n  // 所以清除 callback 相关的属性\n  root.callbackNode = null;\n  root.callbackExpirationTime = NoWork;\n  root.callbackPriority = NoPriority;\n  root.nextKnownPendingLevel = NoWork;\n\n  startCommitTimer();\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  const remainingExpirationTimeBeforeCommit = getRemainingExpirationTime(\n    finishedWork,\n  );\n  // 重置优先级相关变量\n  markRootFinishedAtTime(\n    root,\n    expirationTime,\n    remainingExpirationTimeBeforeCommit,\n  );\n  // false\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    renderExpirationTime = NoWork;\n  } else {\n    // 这表明我们处理的最后一个根与我们现在提交的根不同\n    // 最常见的情况是在挂起的根超时时发生\n  }\n\n  // 将 effectList 赋值给 firstEffect\n  // 由于每个 Fiber 的 effectList 只包含他的子孙节点\n  // 所以根节点如果有 effectTag 则不会被包含进来\n  // 所以这里将有 effectTag 的根节点插入到 effectList 尾部\n  // 这样才能保证有 effect 的 fiber 都在 effectList 中\n  let firstEffect;\n  // finishedWork.effectTag => 0\n  // PerformedWork => 1\n  // false\n  if (finishedWork.effectTag > PerformedWork) {\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // 根节点没有effectTag\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  // 以上代码为 commit 之前所做的准备工作\n  // firstEffect 会在 commit 的三个子阶段会用到\n\n  // true\n  if (firstEffect !== null) {\n    // 8\n    const prevExecutionContext = executionContext;\n    // 40\n    executionContext |= CommitContext;\n    const prevInteractions = pushInteractions(root);\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    startCommitSnapshotEffectsTimer();\n    prepareForCommit(root.containerInfo);\n    nextEffect = firstEffect;\n    // 处理类组件的 getSnapShotBeforeUpdate 生命周期函数\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitBeforeMutationEffects, null);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitBeforeMutationEffects();\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n    stopCommitSnapshotEffectsTimer();\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    startCommitHostEffectsTimer();\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(\n          null,\n          commitMutationEffects,\n          null,\n          root,\n          renderPriorityLevel,\n        );\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitMutationEffects(root, renderPriorityLevel);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n    stopCommitHostEffectsTimer();\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    startCommitLifeCyclesTimer();\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(\n          null,\n          commitLayoutEffects,\n          null,\n          root,\n          expirationTime,\n        );\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitLayoutEffects(root, expirationTime);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n    stopCommitLifeCyclesTimer();\n\n    nextEffect = null;\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    if (enableSchedulerTracing) {\n      popInteractions(((prevInteractions: any): Set<Interaction>));\n    }\n    executionContext = prevExecutionContext;\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    startCommitSnapshotEffectsTimer();\n    stopCommitSnapshotEffectsTimer();\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n    startCommitHostEffectsTimer();\n    stopCommitHostEffectsTimer();\n    startCommitLifeCyclesTimer();\n    stopCommitLifeCyclesTimer();\n  }\n\n  stopCommitTimer();\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsExpirationTime = expirationTime;\n    pendingPassiveEffectsRenderPriority = renderPriorityLevel;\n  } else {\n    // We are done with the effect chain at this point so let's clear the\n    // nextEffect pointers to assist with GC. If we have passive effects, we'll\n    // clear this in flushPassiveEffects.\n    nextEffect = firstEffect;\n    while (nextEffect !== null) {\n      const nextNextEffect = nextEffect.nextEffect;\n      nextEffect.nextEffect = null;\n      nextEffect = nextNextEffect;\n    }\n  }\n\n  // Check if there's remaining work on this root\n  const remainingExpirationTime = root.firstPendingTime;\n  if (remainingExpirationTime !== NoWork) {\n    if (enableSchedulerTracing) {\n      if (spawnedWorkDuringRender !== null) {\n        const expirationTimes = spawnedWorkDuringRender;\n        spawnedWorkDuringRender = null;\n        for (let i = 0; i < expirationTimes.length; i++) {\n          scheduleInteractions(\n            root,\n            expirationTimes[i],\n            root.memoizedInteractions,\n          );\n        }\n      }\n      schedulePendingInteractions(root, remainingExpirationTime);\n    }\n  } else {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (enableSchedulerTracing) {\n    if (!rootDidHavePassiveEffects) {\n      // If there are no passive effects, then we can complete the pending interactions.\n      // Otherwise, we'll wait until after the passive effects are flushed.\n      // Wait to do this until after remaining work has been scheduled,\n      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.\n      finishPendingInteractions(root, expirationTime);\n    }\n  }\n\n  if (remainingExpirationTime === Sync) {\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  onCommitRoot(finishedWork.stateNode, expirationTime);\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root);\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {\n    // This is a legacy edge case. We just committed the initial mount of\n    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired\n    // synchronously, but layout updates should be deferred until the end\n    // of the batch.\n    return null;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbackQueue();\n  return null;\n}\n\n// commit 阶段的第一个子阶段\n// 循环 effect 链, 查看 fiber 对象中里有 Snapshot\n// 调用类组件的 getSnapshotBeforeUpdate 生命周期函数\nfunction commitBeforeMutationEffects() {\n  // 循环 effect 链\n  while (nextEffect !== null) {\n    // nextEffect 是 effect 链上从 firstEffect 到 lastEffect\n    // 的每一个需要commit的fiber对象\n\n    // 初始化渲染 nextEffect 为 App 组件\n    // effectTag => 3\n    const effectTag = nextEffect.effectTag;\n    // console.log(effectTag);\n    // nextEffect = null;\n    // return;\n\n    // 如果 fiber 对象中里有 Snapshot 这个 effectTag 的话\n    // Snapshot 和更新有关系 初始化渲染 不执行\n    // false\n    if ((effectTag & Snapshot) !== NoEffect) {\n      // 开发环境执行 忽略\n      setCurrentDebugFiberInDEV(nextEffect);\n      // 计 effect 的数\n      recordEffect();\n      // 获取当前 fiber 节点\n      const current = nextEffect.alternate;\n      // 当 nextEffect 上有 Snapshot 这个 effectTag 时\n      // 执行以下方法, 主要是类组件调用 getSnapshotBeforeUpdate 生命周期函数\n      commitBeforeMutationEffectOnFiber(current, nextEffect);\n      // 开发环境执行 忽略\n      resetCurrentDebugFiberInDEV();\n    }\n    // 调度 useEffect\n    // 初始化渲染 目前没有 不执行\n    // false\n    if ((effectTag & Passive) !== NoEffect) {\n      // If there are passive effects, schedule a callback to flush at\n      // the earliest opportunity.\n      if (!rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = true;\n        scheduleCallback(NormalPriority, () => {\n          // 触发useEffect\n          flushPassiveEffects();\n          return null;\n        });\n      }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\n// commit 阶段的第二个子阶段\n// 提交 HostComponent 的 side effect, 也就是DOM节点的操作(增删改)\nfunction commitMutationEffects(root: FiberRoot, renderPriorityLevel) {\n  // 循环 effect 链\n  while (nextEffect !== null) {\n    // 初始化渲染时 nextEffect 为根组件\n    // 开发环境执行 忽略\n    setCurrentDebugFiberInDEV(nextEffect);\n    // 获取 effectTag\n    // 初始渲染为 App 组件\n    // 即将根组件及内部所有内容一次性添加到页面中\n    const effectTag = nextEffect.effectTag;\n\n    // 如果有文本节点, 将 value 置为''\n    if (effectTag & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n    // 更新 ref\n    if (effectTag & Ref) {\n      const current = nextEffect.alternate;\n      if (current !== null) {\n        commitDetachRef(current);\n      }\n    }\n\n    // 根据 effectTag 分别处理\n    let primaryEffectTag =\n      effectTag & (Placement | Update | Deletion | Hydrating);\n    // 匹配 effectTag\n    // 初始渲染 primaryEffectTag 为 2 匹配到 Placement\n    switch (primaryEffectTag) {\n      // 针对该节点及子节点进行插入操作\n      case Placement: {\n        commitPlacement(nextEffect);\n\n        // TODO: findDOMNode doesn't rely on this any more but isMounted does\n        // and isMounted is deprecated anyway so we should be able to kill this.\n        // effectTag 从 3 变为 1\n        // 从 effect 标签中清除 \"placement\" 重置 effectTag 值\n        // 以便我们知道在调用诸如componentDidMount之类的任何生命周期之前已将其插入。\n        nextEffect.effectTag &= ~Placement;\n        break;\n      }\n      // 插入并更新 DOM\n      case PlacementAndUpdate: {\n        // 插入\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        nextEffect.effectTag &= ~Placement;\n\n        // 更新\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      // 服务器端渲染\n      case Hydrating: {\n        nextEffect.effectTag &= ~Hydrating;\n        break;\n      }\n      // 服务器端渲染\n      case HydratingAndUpdate: {\n        nextEffect.effectTag &= ~Hydrating;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      // 更新 DOM\n      case Update: {\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      // 删除 DOM\n      case Deletion: {\n        commitDeletion(root, nextEffect, renderPriorityLevel);\n        break;\n      }\n    }\n\n    // TODO: Only record a mutation effect if primaryEffectTag is non-zero.\n    recordEffect();\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\n// commit 阶段的第三个子阶段\nfunction commitLayoutEffects(\n  root: FiberRoot,\n  committedExpirationTime: ExpirationTime,\n) {\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const effectTag = nextEffect.effectTag;\n    // 调用生命周期钩子和hook\n    // false\n    if (effectTag & (Update | Callback)) {\n      recordEffect();\n      const current = nextEffect.alternate;\n      // 类组件处理生命周期函数\n      // 函数组件处理钩子函数\n      commitLayoutEffectOnFiber(\n        root,\n        current,\n        nextEffect,\n        committedExpirationTime,\n      );\n    }\n    // 赋值ref\n    // false\n    if (effectTag & Ref) {\n      recordEffect();\n      commitAttachRef(nextEffect);\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nexport function flushPassiveEffects() {\n  if (pendingPassiveEffectsRenderPriority !== NoPriority) {\n    const priorityLevel =\n      pendingPassiveEffectsRenderPriority > NormalPriority\n        ? NormalPriority\n        : pendingPassiveEffectsRenderPriority;\n    pendingPassiveEffectsRenderPriority = NoPriority;\n    return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectMount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  if (runAllPassiveEffectDestroysBeforeCreates) {\n    pendingPassiveHookEffectsMount.push(effect, fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectUnmount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  if (runAllPassiveEffectDestroysBeforeCreates) {\n    pendingPassiveHookEffectsUnmount.push(effect, fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction invokePassiveEffectCreate(effect: HookEffect): void {\n  const create = effect.create;\n  effect.destroy = create();\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n  const root = rootWithPendingPassiveEffects;\n  const expirationTime = pendingPassiveEffectsExpirationTime;\n  rootWithPendingPassiveEffects = null;\n  pendingPassiveEffectsExpirationTime = NoWork;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Cannot flush passive effects while already rendering.',\n  );\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  const prevInteractions = pushInteractions(root);\n\n  if (runAllPassiveEffectDestroysBeforeCreates) {\n    // It's important that ALL pending passive effect destroy functions are called\n    // before ANY passive effect create functions are called.\n    // Otherwise effects in sibling components might interfere with each other.\n    // e.g. a destroy function in one component may unintentionally override a ref\n    // value set by a create function in another component.\n    // Layout effects have the same constraint.\n\n    // First pass: Destroy stale passive effects.\n    let unmountEffects = pendingPassiveHookEffectsUnmount;\n    pendingPassiveHookEffectsUnmount = [];\n    for (let i = 0; i < unmountEffects.length; i += 2) {\n      const effect = ((unmountEffects[i]: any): HookEffect);\n      const fiber = ((unmountEffects[i + 1]: any): Fiber);\n      const destroy = effect.destroy;\n      effect.destroy = undefined;\n      if (typeof destroy === 'function') {\n        if (__DEV__) {\n          setCurrentDebugFiberInDEV(fiber);\n          invokeGuardedCallback(null, destroy, null);\n          if (hasCaughtError()) {\n            invariant(fiber !== null, 'Should be working on an effect.');\n            const error = clearCaughtError();\n            captureCommitPhaseError(fiber, error);\n          }\n          resetCurrentDebugFiberInDEV();\n        } else {\n          try {\n            destroy();\n          } catch (error) {\n            invariant(fiber !== null, 'Should be working on an effect.');\n            captureCommitPhaseError(fiber, error);\n          }\n        }\n      }\n    }\n\n    // Second pass: Create new passive effects.\n    let mountEffects = pendingPassiveHookEffectsMount;\n    pendingPassiveHookEffectsMount = [];\n    for (let i = 0; i < mountEffects.length; i += 2) {\n      const effect = ((mountEffects[i]: any): HookEffect);\n      const fiber = ((mountEffects[i + 1]: any): Fiber);\n      if (__DEV__) {\n        setCurrentDebugFiberInDEV(fiber);\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n        if (hasCaughtError()) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(fiber, error);\n        }\n        resetCurrentDebugFiberInDEV();\n      } else {\n        try {\n          const create = effect.create;\n          effect.destroy = create();\n        } catch (error) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(fiber, error);\n        }\n      }\n    }\n  } else {\n    // Note: This currently assumes there are no passive effects on the root fiber\n    // because the root is not part of its own effect list.\n    // This could change in the future.\n    let effect = root.current.firstEffect;\n    while (effect !== null) {\n      if (__DEV__) {\n        setCurrentDebugFiberInDEV(effect);\n        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);\n        if (hasCaughtError()) {\n          invariant(effect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(effect, error);\n        }\n        resetCurrentDebugFiberInDEV();\n      } else {\n        try {\n          commitPassiveHookEffects(effect);\n        } catch (error) {\n          invariant(effect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(effect, error);\n        }\n      }\n      const nextNextEffect = effect.nextEffect;\n      // Remove nextEffect pointer to assist GC\n      effect.nextEffect = null;\n      effect = nextNextEffect;\n    }\n  }\n\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n    finishPendingInteractions(root, expirationTime);\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbackQueue();\n\n  // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n  nestedPassiveUpdateCount =\n    rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, Sync);\n  enqueueUpdate(rootFiber, update);\n  const root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);\n  if (root !== null) {\n    ensureRootIsScheduled(root);\n    schedulePendingInteractions(root, Sync);\n  }\n}\n\nexport function captureCommitPhaseError(sourceFiber: Fiber, error: mixed) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = sourceFiber.return;\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          // TODO: This is always sync\n          Sync,\n        );\n        enqueueUpdate(fiber, update);\n        const root = markUpdateTimeFromFiberToRoot(fiber, Sync);\n        if (root !== null) {\n          ensureRootIsScheduled(root);\n          schedulePendingInteractions(root, Sync);\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  thenable: Thenable,\n  suspendedTime: ExpirationTime,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The thenable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(thenable);\n  }\n\n  if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, we'll always suspend so we can always\n    // restart. If we're suspended without any updates, it might be a retry.\n    // If it's early in the retry we can restart. We can't know for sure\n    // whether we'll eventually process an update during this render pass,\n    // but it's somewhat unlikely that we get to a ping before that, since\n    // getting to the root most update is usually very fast.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        workInProgressRootLatestProcessedExpirationTime === Sync &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root. Don't need to schedule a ping because\n      // we're already working on this tree.\n      prepareFreshStack(root, renderExpirationTime);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootHasPendingPing = true;\n    }\n    return;\n  }\n\n  if (!isRootSuspendedAtTime(root, suspendedTime)) {\n    // The root is no longer suspended at this time.\n    return;\n  }\n\n  const lastPingedTime = root.lastPingedTime;\n  if (lastPingedTime !== NoWork && lastPingedTime < suspendedTime) {\n    // There's already a lower priority ping scheduled.\n    return;\n  }\n\n  // Mark the time at which this ping was scheduled.\n  root.lastPingedTime = suspendedTime;\n\n  if (!enableTrainModelFix && root.finishedExpirationTime === suspendedTime) {\n    // If there's a pending fallback waiting to commit, throw it away.\n    root.finishedExpirationTime = NoWork;\n    root.finishedWork = null;\n  }\n\n  ensureRootIsScheduled(root);\n  schedulePendingInteractions(root, suspendedTime);\n}\n\nfunction retryTimedOutBoundary(\n  boundaryFiber: Fiber,\n  retryTime: ExpirationTime,\n) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new expiration time.\n  if (retryTime === NoWork) {\n    const suspenseConfig = null; // Retries don't carry over the already committed update.\n    const currentTime = requestCurrentTimeForUpdate();\n    retryTime = computeExpirationForFiber(\n      currentTime,\n      boundaryFiber,\n      suspenseConfig,\n    );\n  }\n  // TODO: Special case idle priority?\n  const root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);\n  if (root !== null) {\n    ensureRootIsScheduled(root);\n    schedulePendingInteractions(root, retryTime);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryTime = NoWork;\n  if (suspenseState !== null) {\n    retryTime = suspenseState.retryTime;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryTime);\n}\n\nexport function resolveRetryThenable(boundaryFiber: Fiber, thenable: Thenable) {\n  let retryTime = NoWork; // Default\n  let retryCache: WeakSet<Thenable> | Set<Thenable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n        if (suspenseState !== null) {\n          retryTime = suspenseState.retryTime;\n        }\n        break;\n      case SuspenseListComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The thenable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(thenable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryTime);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction computeMsUntilSuspenseLoadingDelay(\n  mostRecentEventTime: ExpirationTime,\n  committedExpirationTime: ExpirationTime,\n  suspenseConfig: SuspenseConfig,\n) {\n  const busyMinDurationMs = (suspenseConfig.busyMinDurationMs: any) | 0;\n  if (busyMinDurationMs <= 0) {\n    return 0;\n  }\n  const busyDelayMs = (suspenseConfig.busyDelayMs: any) | 0;\n\n  // Compute the time until this render pass would expire.\n  const currentTimeMs: number = now();\n  const eventTimeMs: number = inferTimeFromExpirationTimeWithSuspenseConfig(\n    mostRecentEventTime,\n    suspenseConfig,\n  );\n  const timeElapsed = currentTimeMs - eventTimeMs;\n  if (timeElapsed <= busyDelayMs) {\n    // If we haven't yet waited longer than the initial delay, we don't\n    // have to wait any additional time.\n    return 0;\n  }\n  const msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed;\n  // This is the value that is passed to `setTimeout`.\n  return msUntilTimeout;\n}\n\nfunction checkForNestedUpdates() {\n  // NESTED_UPDATE_LIMIT => 50\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nfunction stopFinishedWorkLoopTimer() {\n  const didCompleteRoot = true;\n  stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n  interruptedBy = null;\n}\n\nfunction stopInterruptedWorkLoopTimer() {\n  // TODO: Track which fiber caused the interruption.\n  const didCompleteRoot = false;\n  stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n  interruptedBy = null;\n}\n\nfunction checkForInterruption(\n  fiberThatReceivedUpdate: Fiber,\n  updateExpirationTime: ExpirationTime,\n) {\n  if (\n    enableUserTimingAPI &&\n    workInProgressRoot !== null &&\n    updateExpirationTime > renderExpirationTime\n  ) {\n    interruptedBy = fiberThatReceivedUpdate;\n  }\n}\n\nlet didWarnStateUpdateForUnmountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnUnmountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    const tag = fiber.tag;\n    if (\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    if (\n      deferPassiveEffectCleanupDuringUnmount &&\n      runAllPassiveEffectDestroysBeforeCreates\n    ) {\n      // If there are pending passive effects unmounts for this Fiber,\n      // we can assume that they would have prevented this update.\n      if (pendingPassiveHookEffectsUnmount.indexOf(fiber) >= 0) {\n        return;\n      }\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForUnmountedComponent !== null) {\n      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForUnmountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);\n    }\n    console.error(\n      \"Can't perform a React state update on an unmounted component. This \" +\n        'is a no-op, but it indicates a memory leak in your application. To ' +\n        'fix, cancel all subscriptions and asynchronous tasks in %s.%s',\n      tag === ClassComponent\n        ? 'the componentWillUnmount method'\n        : 'a useEffect cleanup function',\n      getStackByFiberInDevAndProd(fiber),\n    );\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  let dummyFiber = null;\n  beginWork = (current, unitOfWork, expirationTime) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, expirationTime);\n    } catch (originalError) {\n      if (\n        originalError !== null &&\n        typeof originalError === 'object' &&\n        typeof originalError.then === 'function'\n      ) {\n        // Don't replay promises. Treat everything else like an error.\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(unitOfWork);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        expirationTime,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.\n        // Rethrow this error instead of the original one.\n        throw replayError;\n      } else {\n        // This branch is reachable if the render phase is impure.\n        throw originalError;\n      }\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      (executionContext & RenderContext) !== NoContext\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentName(workInProgress.type)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentName(fiber.type) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://fb.me/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\n// a 'shared' variable that changes when act() opens/closes in tests.\nexport const IsThisRendererActing = {current: (false: boolean)};\n\nexport function warnIfNotScopedWithMatchingAct(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      IsSomeRendererActing.current === true &&\n      IsThisRendererActing.current !== true\n    ) {\n      console.error(\n        \"It looks like you're using the wrong act() around your test interactions.\\n\" +\n          'Be sure to use the matching version of act() corresponding to your renderer:\\n\\n' +\n          '// for react-dom:\\n' +\n          \"import {act} from 'react-dom/test-utils';\\n\" +\n          '// ...\\n' +\n          'act(() => ...);\\n\\n' +\n          '// for react-test-renderer:\\n' +\n          \"import TestRenderer from 'react-test-renderer';\\n\" +\n          'const {act} = TestRenderer;\\n' +\n          '// ...\\n' +\n          'act(() => ...);' +\n          '%s',\n        getStackByFiberInDevAndProd(fiber),\n      );\n    }\n  }\n}\n\nexport function warnIfNotCurrentlyActingEffectsInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      (fiber.mode & StrictMode) !== NoMode &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      console.error(\n        'An update to %s ran an effect, but was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://fb.me/react-wrap-tests-with-act' +\n          '%s',\n        getComponentName(fiber.type),\n        getStackByFiberInDevAndProd(fiber),\n      );\n    }\n  }\n}\n\nfunction warnIfNotCurrentlyActingUpdatesInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      executionContext === NoContext &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      console.error(\n        'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://fb.me/react-wrap-tests-with-act' +\n          '%s',\n        getComponentName(fiber.type),\n        getStackByFiberInDevAndProd(fiber),\n      );\n    }\n  }\n}\n\nexport const warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;\n\n// In tests, we want to enforce a mocked scheduler.\nlet didWarnAboutUnmockedScheduler = false;\n// TODO Before we release concurrent mode, revisit this and decide whether a mocked\n// scheduler is the actual recommendation. The alternative could be a testing build,\n// a new lib, or whatever; we dunno just yet. This message is for early adopters\n// to get their tests right.\n\nexport function warnIfUnmockedScheduler(fiber: Fiber) {\n  if (__DEV__) {\n    if (\n      didWarnAboutUnmockedScheduler === false &&\n      Scheduler.unstable_flushAllWithoutAsserting === undefined\n    ) {\n      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'In Concurrent or Sync modes, the \"scheduler\" module needs to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            \"jest.mock('scheduler', () => require('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://fb.me/react-mock-scheduler',\n        );\n      } else if (warnAboutUnmockedScheduler === true) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'Starting from React v17, the \"scheduler\" module will need to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            \"jest.mock('scheduler', () => require('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://fb.me/react-mock-scheduler',\n        );\n      }\n    }\n  }\n}\n\nfunction computeThreadID(root, expirationTime) {\n  // Interaction threads are unique per root and expiration time.\n  return expirationTime * 1000 + root.interactionThreadID;\n}\n\nexport function markSpawnedWork(expirationTime: ExpirationTime) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n  if (spawnedWorkDuringRender === null) {\n    spawnedWorkDuringRender = [expirationTime];\n  } else {\n    spawnedWorkDuringRender.push(expirationTime);\n  }\n}\n\nfunction scheduleInteractions(root, expirationTime, interactions) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n  if (interactions.size > 0) {\n    const pendingInteractionMap = root.pendingInteractionMap;\n    const pendingInteractions = pendingInteractionMap.get(expirationTime);\n    if (pendingInteractions != null) {\n      interactions.forEach((interaction) => {\n        if (!pendingInteractions.has(interaction)) {\n          // Update the pending async work count for previously unscheduled interaction.\n          interaction.__count++;\n        }\n\n        pendingInteractions.add(interaction);\n      });\n    } else {\n      pendingInteractionMap.set(expirationTime, new Set(interactions));\n\n      // Update the pending async work count for the current interactions.\n      interactions.forEach((interaction) => {\n        interaction.__count++;\n      });\n    }\n\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, expirationTime);\n      subscriber.onWorkScheduled(interactions, threadID);\n    }\n  }\n}\n\nfunction schedulePendingInteractions(root, expirationTime) {\n  // This is called when work is scheduled on a root.\n  // It associates the current interactions with the newly-scheduled expiration.\n  // They will be restored when that expiration is later committed.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n  scheduleInteractions(root, expirationTime, __interactionsRef.current);\n}\n\nfunction startWorkOnPendingInteractions(root, expirationTime) {\n  // This is called when new work is started on a root.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  // Determine which interactions this batch of work currently includes, So that\n  // we can accurately attribute time spent working on it, And so that cascading\n  // work triggered during the render phase will be associated with it.\n  const interactions: Set<Interaction> = new Set();\n  root.pendingInteractionMap.forEach(\n    (scheduledInteractions, scheduledExpirationTime) => {\n      if (scheduledExpirationTime >= expirationTime) {\n        scheduledInteractions.forEach((interaction) =>\n          interactions.add(interaction),\n        );\n      }\n    },\n  );\n\n  // Store the current set of interactions on the FiberRoot for a few reasons:\n  // We can re-use it in hot functions like performConcurrentWorkOnRoot()\n  // without having to recalculate it. We will also use it in commitWork() to\n  // pass to any Profiler onRender() hooks. This also provides DevTools with a\n  // way to access it when the onCommitRoot() hook is called.\n  root.memoizedInteractions = interactions;\n\n  if (interactions.size > 0) {\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, expirationTime);\n      try {\n        subscriber.onWorkStarted(interactions, threadID);\n      } catch (error) {\n        // If the subscriber throws, rethrow it in a separate task\n        scheduleCallback(ImmediatePriority, () => {\n          throw error;\n        });\n      }\n    }\n  }\n}\n\nfunction finishPendingInteractions(root, committedExpirationTime) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  const earliestRemainingTimeAfterCommit = root.firstPendingTime;\n\n  let subscriber;\n\n  try {\n    subscriber = __subscriberRef.current;\n    if (subscriber !== null && root.memoizedInteractions.size > 0) {\n      const threadID = computeThreadID(root, committedExpirationTime);\n      subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n    }\n  } catch (error) {\n    // If the subscriber throws, rethrow it in a separate task\n    scheduleCallback(ImmediatePriority, () => {\n      throw error;\n    });\n  } finally {\n    // Clear completed interactions from the pending Map.\n    // Unless the render was suspended or cascading work was scheduled,\n    // In which case– leave pending interactions until the subsequent render.\n    const pendingInteractionMap = root.pendingInteractionMap;\n    pendingInteractionMap.forEach(\n      (scheduledInteractions, scheduledExpirationTime) => {\n        // Only decrement the pending interaction count if we're done.\n        // If there's still work at the current priority,\n        // That indicates that we are waiting for suspense data.\n        if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {\n          pendingInteractionMap.delete(scheduledExpirationTime);\n\n          scheduledInteractions.forEach((interaction) => {\n            interaction.__count--;\n\n            if (subscriber !== null && interaction.__count === 0) {\n              try {\n                subscriber.onInteractionScheduledWorkCompleted(interaction);\n              } catch (error) {\n                // If the subscriber throws, rethrow it in a separate task\n                scheduleCallback(ImmediatePriority, () => {\n                  throw error;\n                });\n              }\n            }\n          });\n        }\n      },\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'shared/ReactLazyComponent';\n\nimport {Resolved, initializeLazyComponentType} from 'shared/ReactLazyComponent';\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (let propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n\nexport function readLazyComponentType<T>(lazyComponent: LazyComponent<T>): T {\n  initializeLazyComponentType(lazyComponent);\n  if (lazyComponent._status !== Resolved) {\n    throw lazyComponent._result;\n  }\n  return lazyComponent._result;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nexport type ContextDependency<T> = {\n  context: ReactContext<T>,\n  observedBits: number,\n  next: ContextDependency<mixed> | null,\n  ...\n};\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack';\nimport MAX_SIGNED_31_BIT_INT from './maxSigned31BitInt';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from 'shared/ReactWorkTags';\n\nimport invariant from 'shared/invariant';\nimport is from 'shared/objectIs';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  ForceUpdate,\n} from 'react-reconciler/src/ReactUpdateQueue';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastContextWithAllBitsObserved: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(providerFiber: Fiber, nextValue: T): void {\n  const context: ReactContext<T> = providerFiber.type._context;\n\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(providerFiber: Fiber): void {\n  const currentValue = valueCursor.current;\n\n  pop(valueCursor, providerFiber);\n\n  const context: ReactContext<any> = providerFiber.type._context;\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function calculateChangedBits<T>(\n  context: ReactContext<T>,\n  newValue: T,\n  oldValue: T,\n) {\n  if (is(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    const changedBits =\n      typeof context._calculateChangedBits === 'function'\n        ? context._calculateChangedBits(oldValue, newValue)\n        : MAX_SIGNED_31_BIT_INT;\n\n    if (__DEV__) {\n      if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {\n        console.error(\n          'calculateChangedBits: Expected the return value to be a ' +\n            '31-bit integer. Instead received: %s',\n          changedBits,\n        );\n      }\n    }\n    return changedBits | 0;\n  }\n}\n\nexport function scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderExpirationTime: ExpirationTime,\n) {\n  // Update the child expiration time of all the ancestors, including\n  // the alternates.\n  let node = parent;\n  while (node !== null) {\n    let alternate = node.alternate;\n    if (node.childExpirationTime < renderExpirationTime) {\n      node.childExpirationTime = renderExpirationTime;\n      if (\n        alternate !== null &&\n        alternate.childExpirationTime < renderExpirationTime\n      ) {\n        alternate.childExpirationTime = renderExpirationTime;\n      }\n    } else if (\n      alternate !== null &&\n      alternate.childExpirationTime < renderExpirationTime\n    ) {\n      alternate.childExpirationTime = renderExpirationTime;\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange(\n  workInProgress: Fiber,\n  context: ReactContext<mixed>,\n  changedBits: number,\n  renderExpirationTime: ExpirationTime,\n): void {\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (\n          dependency.context === context &&\n          (dependency.observedBits & changedBits) !== 0\n        ) {\n          // Match! Schedule an update on this fiber.\n\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const update = createUpdate(renderExpirationTime, null);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            enqueueUpdate(fiber, update);\n          }\n\n          if (fiber.expirationTime < renderExpirationTime) {\n            fiber.expirationTime = renderExpirationTime;\n          }\n          let alternate = fiber.alternate;\n          if (\n            alternate !== null &&\n            alternate.expirationTime < renderExpirationTime\n          ) {\n            alternate.expirationTime = renderExpirationTime;\n          }\n\n          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);\n\n          // Mark the expiration time on the list, too.\n          if (list.expirationTime < renderExpirationTime) {\n            list.expirationTime = renderExpirationTime;\n          }\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense bounudary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      let parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      if (parentSuspense.expirationTime < renderExpirationTime) {\n        parentSuspense.expirationTime = renderExpirationTime;\n      }\n      let alternate = parentSuspense.alternate;\n      if (\n        alternate !== null &&\n        alternate.expirationTime < renderExpirationTime\n      ) {\n        alternate.expirationTime = renderExpirationTime;\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childExpirationTime on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderExpirationTime);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        let sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    const firstContext = dependencies.firstContext;\n    if (firstContext !== null) {\n      if (dependencies.expirationTime >= renderExpirationTime) {\n        // Context list has a pending update. Mark that this fiber performed work.\n        markWorkInProgressReceivedUpdate();\n      }\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    }\n  }\n}\n\nexport function readContext<T>(\n  context: ReactContext<T>,\n  observedBits: void | number | boolean,\n): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  if (lastContextWithAllBitsObserved === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else if (observedBits === false || observedBits === 0) {\n    // Do not observe any updates.\n  } else {\n    let resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.\n    if (\n      typeof observedBits !== 'number' ||\n      observedBits === MAX_SIGNED_31_BIT_INT\n    ) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = ((context: any): ReactContext<mixed>);\n      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    let contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      observedBits: resolvedObservedBits,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        expirationTime: NoWork,\n        firstContext: contextItem,\n        responders: null,\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {SuspenseConfig} from './ReactFiberSuspenseConfig';\nimport type {ReactPriorityLevel} from './SchedulerWithReactIntegration';\n\nimport {NoWork, Sync} from './ReactFiberExpirationTime';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext';\nimport {Callback, ShouldCapture, DidCapture} from 'shared/ReactSideEffectTags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictMode} from './ReactTypeOfMode';\nimport {\n  markRenderEventTimeAndConfig,\n  markUnprocessedUpdateTime,\n} from './ReactFiberWorkLoop';\n\nimport invariant from 'shared/invariant';\nimport {getCurrentPriorityLevel} from './SchedulerWithReactIntegration';\n\nexport type Update<State> = {|\n  expirationTime: ExpirationTime,\n  suspenseConfig: null | SuspenseConfig,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State>,\n\n  // DEV only\n  priority?: ReactPriorityLevel,\n|};\n\ntype SharedQueue<State> = {|pending: Update<State> | null|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  baseQueue: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    baseQueue: null,\n    shared: {\n      pending: null,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n// 克隆更新队列\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      baseQueue: currentQueue.baseQueue,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(\n  expirationTime: ExpirationTime,\n  suspenseConfig: null | SuspenseConfig,\n): Update<*> {\n  let update: Update<*> = {\n    expirationTime,\n    suspenseConfig,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: (null: any),\n  };\n  update.next = update;\n  if (__DEV__) {\n    update.priority = getCurrentPriorityLevel();\n  }\n  return update;\n}\n\n// 将任务(Update)存放于任务队列(updateQueue)中\n// 创建单向链表结构存放 update, next 用来串联 update\nexport function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {\n  // 获取当前 Fiber 的 更新队列\n  const updateQueue = fiber.updateQueue;\n  // 如果更新队列不存在 就返回 null\n  if (updateQueue === null) {\n    // 仅发生在 fiber 已经被卸载\n    return;\n  }\n  // 获取待执行的 Update 任务\n  // 初始渲染时没有待执行的任务\n  const sharedQueue = updateQueue.shared;\n  const pending = sharedQueue.pending;\n  // 如果没有待执行的 Update 任务\n  if (pending === null) {\n    // 这是第一次更新, 创建一个循环列表.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  // 将 Update 任务存储在 pending 属性中\n  sharedQueue.pending = update;\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  update: Update<State>,\n) {\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    // Ensure the work-in-progress queue is a clone\n    cloneUpdateQueue(current, workInProgress);\n  }\n\n  // Captured updates go only on the work-in-progress queue.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  // Append the update to the end of the list.\n  const last = queue.baseQueue;\n  if (last === null) {\n    queue.baseQueue = update.next = update;\n    update.next = update;\n  } else {\n    update.next = last.next;\n    last.next = update;\n  }\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            payload.call(instance, prevState, nextProps);\n          }\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.effectTag =\n        (workInProgress.effectTag & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            payload.call(instance, prevState, nextProps);\n          }\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderExpirationTime: ExpirationTime,\n): void {\n  // 对于 ClassComponent 和 HostRoot 总是不为空\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // 是否有强制更新 false\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  // The last rebase update that is NOT part of the base state.\n  // 初始渲染 null\n  let baseQueue = queue.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  let pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    // null\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      let baseFirst = baseQueue.next;\n      let pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    baseQueue = pendingQueue;\n\n    queue.shared.pending = null;\n\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      const currentQueue = current.updateQueue;\n      if (currentQueue !== null) {\n        currentQueue.baseQueue = pendingQueue;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (baseQueue !== null) {\n    let first = baseQueue.next;\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n\n    let newExpirationTime = NoWork;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n\n    if (first !== null) {\n      let update = first;\n      do {\n        const updateExpirationTime = update.expirationTime;\n        // false\n        if (updateExpirationTime < renderExpirationTime) {\n          // Priority is insufficient. Skip this update. If this is the first\n          // skipped update, the previous update/state is the new base\n          // update/state.\n          const clone: Update<State> = {\n            expirationTime: update.expirationTime,\n            suspenseConfig: update.suspenseConfig,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: (null: any),\n          };\n          if (newBaseQueueLast === null) {\n            newBaseQueueFirst = newBaseQueueLast = clone;\n            newBaseState = newState;\n          } else {\n            newBaseQueueLast = newBaseQueueLast.next = clone;\n          }\n          // Update the remaining priority in the queue.\n          if (updateExpirationTime > newExpirationTime) {\n            newExpirationTime = updateExpirationTime;\n          }\n        } else {\n          // This update does have sufficient priority.\n          // false\n          if (newBaseQueueLast !== null) {\n            const clone: Update<State> = {\n              expirationTime: Sync, // This update is going to be committed so we never want uncommit it.\n              suspenseConfig: update.suspenseConfig,\n\n              tag: update.tag,\n              payload: update.payload,\n              callback: update.callback,\n\n              next: (null: any),\n            };\n            newBaseQueueLast = newBaseQueueLast.next = clone;\n          }\n\n          // Mark the event time of this update as relevant to this render pass.\n          // TODO: This should ideally use the true event time of this update rather than\n          // its priority which is a derived and not reverseable value.\n          // TODO: We should skip this update if it was already committed but currently\n          // we have no way of detecting the difference between a committed and suspended\n          // update here.\n          markRenderEventTimeAndConfig(\n            updateExpirationTime,\n            update.suspenseConfig,\n          );\n\n          // Process this update.\n          newState = getStateFromUpdate(\n            workInProgress,\n            queue,\n            update,\n            newState,\n            props,\n            instance,\n          );\n\n          const callback = update.callback;\n          if (callback !== null) {\n            workInProgress.effectTag |= Callback;\n            let effects = queue.effects;\n            if (effects === null) {\n              queue.effects = [update];\n            } else {\n              effects.push(update);\n            }\n          }\n        }\n        update = update.next;\n\n        if (update === null || update === first) {\n          pendingQueue = queue.shared.pending;\n          if (pendingQueue === null) {\n            break;\n          } else {\n            // An update was scheduled from inside a reducer. Add the new\n            // pending updates to the end of the list and keep processing.\n            update = baseQueue.next = pendingQueue.next;\n            pendingQueue.next = first;\n            queue.baseQueue = baseQueue = pendingQueue;\n            queue.shared.pending = null;\n          }\n        }\n      } while (true);\n    }\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.baseQueue = newBaseQueueLast;\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markUnprocessedUpdateTime(newExpirationTime);\n    workInProgress.expirationTime = newExpirationTime;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport type SuspenseConfig = {|\n  timeoutMs: number,\n  busyDelayMs?: number,\n  busyMinDurationMs?: number,\n|};\n\nexport function requestCurrentSuspenseConfig(): null | SuspenseConfig {\n  return ReactCurrentBatchConfig.suspense;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {UpdateQueue} from './ReactUpdateQueue';\n\nimport * as React from 'react';\nimport {Update, Snapshot} from 'shared/ReactSideEffectTags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  warnAboutDeprecatedLifecycles,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings';\nimport {isMounted} from 'react-reconciler/reflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {startPhaseTimer, stopPhaseTimer} from './ReactDebugFiberPerf';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent';\nimport {StrictMode} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactUpdateQueue';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext';\nimport {readContext} from './ReactFiberNewContext';\nimport {\n  requestCurrentTimeForUpdate,\n  computeExpirationForFiber,\n  scheduleWork,\n} from './ReactFiberWorkLoop';\nimport {requestCurrentSuspenseConfig} from './ReactFiberSuspenseConfig';\n\nconst fakeInternalInstance = {};\nconst isArray = Array.isArray;\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = `${callerName}_${(callback: any)}`;\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentName(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nexport function applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      // Invoke the function an extra time to help detect side-effects.\n      getDerivedStateFromProps(nextProps, prevState);\n    }\n  }\n\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  if (__DEV__) {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.expirationTime === NoWork) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const currentTime = requestCurrentTimeForUpdate();\n    const suspenseConfig = requestCurrentSuspenseConfig();\n    const expirationTime = computeExpirationForFiber(\n      currentTime,\n      fiber,\n      suspenseConfig,\n    );\n\n    const update = createUpdate(expirationTime, suspenseConfig);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const currentTime = requestCurrentTimeForUpdate();\n    const suspenseConfig = requestCurrentSuspenseConfig();\n    const expirationTime = computeExpirationForFiber(\n      currentTime,\n      fiber,\n      suspenseConfig,\n    );\n\n    const update = createUpdate(expirationTime, suspenseConfig);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const currentTime = requestCurrentTimeForUpdate();\n    const suspenseConfig = requestCurrentSuspenseConfig();\n    const expirationTime = computeExpirationForFiber(\n      currentTime,\n      fiber,\n      suspenseConfig,\n    );\n\n    const update = createUpdate(expirationTime, suspenseConfig);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        // Invoke the function an extra time to help detect side-effects.\n        instance.shouldComponentUpdate(newProps, newState, nextContext);\n      }\n    }\n    startPhaseTimer(workInProgress, 'shouldComponentUpdate');\n    const shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n    stopPhaseTimer();\n\n    if (__DEV__) {\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentName(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentName(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentName(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentName(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      let isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentName(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      new ctor(props, context); // eslint-disable-line no-new\n    }\n  }\n\n  const instance = new ctor(props, context);\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentName(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://fb.me/react-unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  startPhaseTimer(workInProgress, 'componentWillMount');\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  stopPhaseTimer();\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentName(workInProgress.type) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  startPhaseTimer(workInProgress, 'componentWillReceiveProps');\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n  stopPhaseTimer();\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentName(workInProgress.type) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderExpirationTime: ExpirationTime,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  processUpdateQueue(workInProgress, newProps, instance, renderExpirationTime);\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(\n      workInProgress,\n      newProps,\n      instance,\n      renderExpirationTime,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.effectTag |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderExpirationTime: ExpirationTime,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderExpirationTime);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      startPhaseTimer(workInProgress, 'componentWillMount');\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n      stopPhaseTimer();\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderExpirationTime: ExpirationTime,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props =\n    workInProgress.type === workInProgress.elementType\n      ? oldProps\n      : resolveDefaultProps(workInProgress.type, oldProps);\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderExpirationTime);\n  newState = workInProgress.memoizedState;\n\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      startPhaseTimer(workInProgress, 'componentWillUpdate');\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n      stopPhaseTimer();\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.effectTag |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport getComponentName from 'shared/getComponentName';\nimport {Placement, Deletion} from 'shared/ReactSideEffectTags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  FunctionComponent,\n  ClassComponent,\n  HostText,\n  HostPortal,\n  Fragment,\n  Block,\n} from 'shared/ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport {warnAboutStringRefs, enableBlocksAPI} from 'shared/ReactFeatureFlags';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber';\nimport {emptyRefsObject} from './ReactFiberClassComponent';\nimport {\n  getCurrentFiberStackInDev,\n  getStackByFiberInDevAndProd,\n} from './ReactCurrentFiber';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading';\nimport {StrictMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const currentComponentErrorInfo =\n      'Each child in a list should have a unique ' +\n      '\"key\" prop. See https://fb.me/react-warning-keys for ' +\n      'more information.' +\n      getCurrentFiberStackInDev();\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://fb.me/react-warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nconst isArray = Array.isArray;\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  let mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName = getComponentName(returnFiber.type) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://fb.me/react-strict-mode-string-ref%s',\n              componentName,\n              mixedRef,\n              getStackByFiberInDevAndProd(returnFiber),\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://fb.me/react-strict-mode-string-ref%s',\n              mixedRef,\n              getStackByFiberInDevAndProd(returnFiber),\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have string refs. ' +\n            'We recommend using useRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://fb.me/react-strict-mode-string-ref',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function (value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://fb.me/react-refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  if (returnFiber.type !== 'textarea') {\n    let addendum = '';\n    if (__DEV__) {\n      addendum =\n        ' If you meant to render a collection of children, use an array ' +\n        'instead.' +\n        getCurrentFiberStackInDev();\n    }\n    invariant(\n      false,\n      'Objects are not valid as a React child (found: %s).%s',\n      Object.prototype.toString.call(newChild) === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : newChild,\n      addendum,\n    );\n  }\n}\n\nfunction warnOnFunctionType() {\n  if (__DEV__) {\n    const currentComponentErrorInfo =\n      'Functions are not valid as a React child. This may happen if ' +\n      'you return a Component instead of <Component /> from render. ' +\n      'Or maybe you meant to call this function rather than return it.' +\n      getCurrentFiberStackInDev();\n\n    if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n    childToDelete.nextEffect = null;\n    childToDelete.effectTag = Deletion;\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.effectTag = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.effectTag = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // 如果是初始渲染 会在根组件(App)上设置 effectTag 属性为 Placement 值为 1\n    // 其他子级节点具有默认值为 0 防止在 commit 阶段反复操作真实DOM\n    // 初始渲染时如果当前处理的是根组件 true 其他组件 false\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      // Placement 表示新创建的节点\n      newFiber.effectTag = Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    expirationTime: ExpirationTime,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(\n        textContent,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    if (current !== null) {\n      if (\n        current.elementType === element.type ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__ ? isCompatibleFamilyForHotReloading(current, element) : false)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      } else if (\n        enableBlocksAPI &&\n        current.tag === Block &&\n        element.type.$$typeof === REACT_BLOCK_TYPE &&\n        element.type.render === current.type.render\n      ) {\n        // Same as above but also update the .type field.\n        const existing = useFiber(current, element.props);\n        existing.return = returnFiber;\n        existing.type = element.type;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      }\n    }\n    // 创建 Fiber 对象\n    const created = createFiberFromElement(\n      element,\n      returnFiber.mode,\n      expirationTime,\n    );\n    // 添加 ref 属性\n    created.ref = coerceRef(returnFiber, current, element);\n    // 添加父级 Fiber 对象\n    created.return = returnFiber;\n    // 返回创建的 Fiber 对象\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(\n        portal,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    expirationTime: ExpirationTime,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        expirationTime,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            expirationTime,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            expirationTime,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          expirationTime,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(\n        returnFiber,\n        oldFiber,\n        '' + newChild,\n        expirationTime,\n      );\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(\n                returnFiber,\n                oldFiber,\n                newChild.props.children,\n                expirationTime,\n                key,\n              );\n            }\n            return updateElement(\n              returnFiber,\n              oldFiber,\n              newChild,\n              expirationTime,\n            );\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(\n              returnFiber,\n              oldFiber,\n              newChild,\n              expirationTime,\n            );\n          } else {\n            return null;\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(\n          returnFiber,\n          oldFiber,\n          newChild,\n          expirationTime,\n          null,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(\n        returnFiber,\n        matchedFiber,\n        '' + newChild,\n        expirationTime,\n      );\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          if (newChild.type === REACT_FRAGMENT_TYPE) {\n            return updateFragment(\n              returnFiber,\n              matchedFiber,\n              newChild.props.children,\n              expirationTime,\n              newChild.key,\n            );\n          }\n          return updateElement(\n            returnFiber,\n            matchedFiber,\n            newChild,\n            expirationTime,\n          );\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(\n            returnFiber,\n            matchedFiber,\n            newChild,\n            expirationTime,\n          );\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(\n          returnFiber,\n          matchedFiber,\n          newChild,\n          expirationTime,\n          null,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n  // 处理子元素是数组的情况\n  function reconcileChildrenArray(\n    // 父级 Fiber\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    // 子级 vdom 数组\n    newChildren: Array<*>,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys);\n      }\n    }\n    /**\n     * 存储第一个子节点 Fiber 对象\n     * 方法返回的也是第一个子节点 Fiber 对象\n     * 因为其他子节点 Fiber 对象都存储在上一个子 Fiber 节点对象的 sibling 属性中\n     */\n    let resultingFirstChild: Fiber | null = null;\n    // 上一次创建的 Fiber 对象\n    let previousNewFiber: Fiber | null = null;\n    // 初始渲染没有旧的子级 所以为 null\n    let oldFiber = currentFirstChild;\n\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    // 初始渲染 oldFiber 为 null 循环不执行\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        expirationTime,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    // 初始渲染不执行\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    // oldFiber 为空 说明是初始渲染\n    if (oldFiber === null) {\n      // 遍历子 vdom 对象\n      for (; newIdx < newChildren.length; newIdx++) {\n        // 创建子 vdom 对应的 fiber 对象\n        const newFiber = createChild(\n          returnFiber,\n          newChildren[newIdx],\n          expirationTime,\n        );\n        // 如果 newFiber 为 null\n        if (newFiber === null) {\n          // 进入下次循环\n          continue;\n        }\n        // 初始渲染时只为 newFiber 添加了 index 属性,\n        // 其他事没干. lastPlacedIndex 被原封不动的返回了\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        // 为当前节点设置下一个兄弟节点\n        if (previousNewFiber === null) {\n          // 存储第一个子 Fiber 发生在第一次循环时\n          resultingFirstChild = newFiber;\n        } else {\n          // 为节点设置下一个兄弟 Fiber\n          previousNewFiber.sibling = newFiber;\n        }\n        // 在循环的过程中更新上一个创建的Fiber 对象\n        previousNewFiber = newFiber;\n      }\n      // 返回创建好的子 Fiber\n      // 其他 Fiber 都作为 sibling 存在\n      return resultingFirstChild;\n    }\n    // 下面的代码初始渲染不执行\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        expirationTime,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n    // 初始渲染不执行\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach((child) => deleteChild(returnFiber, child));\n    }\n    // 返回第一个子元素 Fiber 对象\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is unsupported and will likely yield ' +\n              'unexpected results. Convert it to a sequence/iterable of keyed ' +\n              'ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        step.value,\n        expirationTime,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, expirationTime);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        expirationTime,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach((child) => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  // 处理子元素是文本或者数值的情况\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    // 初始渲染不执行\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // 现有的第一个子节点不是文本节点，因此我们需要创建一个并删除现有的.\n    // 初始渲染不执行\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    // 根据文本创建 Fiber 对象\n    const created = createFiberFromText(\n      textContent,\n      returnFiber.mode,\n      expirationTime,\n    );\n    // 设置父 Fiber 对象\n    created.return = returnFiber;\n    // 返回创建好的 Fiber 对象\n    return created;\n  }\n  // 处理子元素是单个对象的情况\n  function reconcileSingleElement(\n    // 父 Fiber 对象\n    returnFiber: Fiber,\n    // 备份子 fiber\n    currentFirstChild: Fiber | null,\n    // 子 vdom 对象\n    element: ReactElement,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    // 初始渲染 currentFirstChild 为 null\n    // false\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        switch (child.tag) {\n          case Fragment: {\n            if (element.type === REACT_FRAGMENT_TYPE) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props.children);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n          case Block:\n            if (enableBlocksAPI) {\n              if (\n                element.type.$$typeof === REACT_BLOCK_TYPE &&\n                element.type.render === child.type.render\n              ) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                const existing = useFiber(child, element.props);\n                existing.type = element.type;\n                existing.return = returnFiber;\n                if (__DEV__) {\n                  existing._debugSource = element._source;\n                  existing._debugOwner = element._owner;\n                }\n                return existing;\n              }\n            }\n          // We intentionally fallthrough here if enableBlocksAPI is not on.\n          // eslint-disable-next-lined no-fallthrough\n          default: {\n            if (\n              child.elementType === element.type ||\n              // Keep this check inline so it only runs on the false path:\n              (__DEV__\n                ? isCompatibleFamilyForHotReloading(child, element)\n                : false)\n            ) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props);\n              existing.ref = coerceRef(returnFiber, child, element);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n    // 查看子 vdom 对象是否表示 fragment\n    // false\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        expirationTime,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // 根据 React Element 创建 Fiber 对象\n      // 返回创建好的 Fiber 对象\n      const created = createFiberFromElement(\n        element,\n        // 用来表示当前组件下的所有子组件要用处于何种渲染模式\n        // 文件位置: ./ReactTypeOfMode.js\n        // 0    同步渲染模式\n        // 100  异步渲染模式\n        returnFiber.mode,\n        expirationTime,\n      );\n      // 添加 ref 属性 { current: DOM }\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      // 添加父级 Fiber 对象\n      created.return = returnFiber;\n      // 返回创建好的子 Fiber\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(\n      portal,\n      returnFiber.mode,\n      expirationTime,\n    );\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    // 父 Fiber 对象\n    returnFiber: Fiber,\n    // 旧的第一个子 Fiber 初始渲染 null\n    currentFirstChild: Fiber | null,\n    // 新的子 vdom 对象\n    newChild: any,\n    // 初始渲染 整型最大值 代表同步任务\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // 这是入口方法, 根据 newChild 类型进行对应处理\n\n    // 判断新的子 vdom 是否为占位组件 比如 <></>\n    // false\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n\n    // 如果 newChild 为占位符, 使用 占位符组件的子元素作为 newChild\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // 检测 newChild 是否为对象类型\n    const isObject = typeof newChild === 'object' && newChild !== null;\n\n    // newChild 是单个对象的情况\n    if (isObject) {\n      // 匹配子元素的类型\n      switch (newChild.$$typeof) {\n        // 子元素为 ReactElement\n        case REACT_ELEMENT_TYPE:\n          // 为 Fiber 对象设置 effectTag 属性\n          // 返回创建好的子 Fiber\n          return placeSingleChild(\n            // 处理单个 React Element 的情况\n            // 内部会调用其他方法创建对应的 Fiber 对象\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              expirationTime,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              expirationTime,\n            ),\n          );\n      }\n    }\n    // 处理 children 为文本和数值的情况 return \"App works\"\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          // 如果 newChild 是数值, 转换为字符串\n          '' + newChild,\n          expirationTime,\n        ),\n      );\n    }\n\n    // children 是数组的情况\n    if (isArray(newChild)) {\n      // 返回创建好的子 Fiber\n      return reconcileChildrenArray(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        expirationTime,\n      );\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        expirationTime,\n      );\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent: {\n          if (__DEV__) {\n            const instance = returnFiber.stateNode;\n            if (instance.render._isMockFunction) {\n              // We allow auto-mocks to proceed as if they're returning null.\n              break;\n            }\n          }\n        }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionComponent: {\n          const Component = returnFiber.type;\n          invariant(\n            false,\n            '%s(...): Nothing was returned from render. This usually means a ' +\n              'return statement is missing. Or, to render nothing, ' +\n              'return null.',\n            Component.displayName || Component.name || 'Component',\n          );\n        }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\n/**\n * shouldTrackSideEffects 标识, 是否为 Fiber 对象添加 effectTag\n * true 添加 false 不添加\n * 对于初始渲染来说, 只有根组件需要添加, 其他元素不需要添加, 防止过多的 DOM 操作\n */\n// 用于更新\nexport const reconcileChildFibers = ChildReconciler(true);\n// 用于初始渲染\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, renderExpirationTime);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nlet contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nlet contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nlet rootInstanceStackCursor: StackCursor<Container | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\n\nimport {createCursor, push, pop} from './ReactFiberStack';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport {SuspenseComponent, SuspenseListComponent} from 'shared/ReactWorkTags';\nimport {NoEffect, DidCapture} from 'shared/ReactSideEffectTags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseHydrationCallbacks = {\n  onHydrated?: (suspenseInstance: SuspenseInstance) => void,\n  onDeleted?: (suspenseInstance: SuspenseInstance) => void,\n  ...\n};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  // Represents the earliest expiration time we should attempt to hydrate\n  // a dehydrated boundary at.\n  // Never is the default for dehydrated boundaries.\n  // NoWork is the default for normal boundaries, which turns into \"normal\" pri.\n  retryTime: ExpirationTime,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // The absolute time in ms that we'll expire the tail rendering.\n  tailExpiration: number,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n  // Last Effect before we rendered the \"rendering\" item.\n  // Used to remove new effects added by the rendered item.\n  lastEffect: null | Fiber,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // In order to capture, the Suspense component must have a fallback prop.\n  if (props.fallback === undefined) {\n    return false;\n  }\n  // Regular boundaries always capture.\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      let didSuspend = (node.effectTag & DidCapture) !== NoEffect;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {Container, Instance} from './ReactFiberHostConfig';\nimport type {\n  ReactEventResponder,\n  ReactEventResponderInstance,\n  ReactEventResponderListener,\n} from 'shared/ReactTypes';\n\nimport {\n  DEPRECATED_mountResponderInstance,\n  DEPRECATED_unmountResponderInstance,\n} from './ReactFiberHostConfig';\nimport {NoWork} from './ReactFiberExpirationTime';\n\nimport {REACT_RESPONDER_TYPE} from 'shared/ReactSymbols';\n\nimport invariant from 'shared/invariant';\nimport {HostComponent, HostRoot} from 'shared/ReactWorkTags';\n\nconst emptyObject = {};\nconst isArray = Array.isArray;\n\nexport function createResponderInstance(\n  responder: ReactEventResponder<any, any>,\n  responderProps: Object,\n  responderState: Object,\n  fiber: Fiber,\n): ReactEventResponderInstance<any, any> {\n  return {\n    fiber,\n    props: responderProps,\n    responder,\n    rootEventTypes: null,\n    state: responderState,\n  };\n}\n\nfunction mountEventResponder(\n  responder: ReactEventResponder<any, any>,\n  responderProps: Object,\n  fiber: Fiber,\n  respondersMap: Map<\n    ReactEventResponder<any, any>,\n    ReactEventResponderInstance<any, any>,\n  >,\n  rootContainerInstance: null | Container,\n) {\n  let responderState = emptyObject;\n  const getInitialState = responder.getInitialState;\n  if (getInitialState !== null) {\n    responderState = getInitialState(responderProps);\n  }\n  const responderInstance = createResponderInstance(\n    responder,\n    responderProps,\n    responderState,\n    fiber,\n  );\n\n  if (!rootContainerInstance) {\n    let node = fiber;\n    while (node !== null) {\n      const tag = node.tag;\n      if (tag === HostComponent) {\n        rootContainerInstance = node.stateNode;\n        break;\n      } else if (tag === HostRoot) {\n        rootContainerInstance = node.stateNode.containerInfo;\n        break;\n      }\n      node = node.return;\n    }\n  }\n\n  DEPRECATED_mountResponderInstance(\n    responder,\n    responderInstance,\n    responderProps,\n    responderState,\n    ((rootContainerInstance: any): Instance),\n  );\n  respondersMap.set(responder, responderInstance);\n}\n\nfunction updateEventListener(\n  listener: ReactEventResponderListener<any, any>,\n  fiber: Fiber,\n  visistedResponders: Set<ReactEventResponder<any, any>>,\n  respondersMap: Map<\n    ReactEventResponder<any, any>,\n    ReactEventResponderInstance<any, any>,\n  >,\n  rootContainerInstance: null | Container,\n): void {\n  let responder;\n  let props;\n\n  if (listener) {\n    responder = listener.responder;\n    props = listener.props;\n  }\n  invariant(\n    responder && responder.$$typeof === REACT_RESPONDER_TYPE,\n    'An invalid value was used as an event listener. Expect one or many event ' +\n      'listeners created via React.unstable_useResponder().',\n  );\n  const listenerProps = ((props: any): Object);\n  if (visistedResponders.has(responder)) {\n    // show warning\n    if (__DEV__) {\n      console.error(\n        'Duplicate event responder \"%s\" found in event listeners. ' +\n          'Event listeners passed to elements cannot use the same event responder more than once.',\n        responder.displayName,\n      );\n    }\n    return;\n  }\n  visistedResponders.add(responder);\n  const responderInstance = respondersMap.get(responder);\n\n  if (responderInstance === undefined) {\n    // Mount (happens in either complete or commit phase)\n    mountEventResponder(\n      responder,\n      listenerProps,\n      fiber,\n      respondersMap,\n      rootContainerInstance,\n    );\n  } else {\n    // Update (happens during commit phase only)\n    responderInstance.props = listenerProps;\n    responderInstance.fiber = fiber;\n  }\n}\n\nexport function updateDeprecatedEventListeners(\n  listeners: any,\n  fiber: Fiber,\n  rootContainerInstance: null | Container,\n): void {\n  const visistedResponders = new Set();\n  let dependencies = fiber.dependencies;\n  if (listeners != null) {\n    if (dependencies === null) {\n      dependencies = fiber.dependencies = {\n        expirationTime: NoWork,\n        firstContext: null,\n        responders: new Map(),\n      };\n    }\n    let respondersMap = dependencies.responders;\n    if (respondersMap === null) {\n      dependencies.responders = respondersMap = new Map();\n    }\n    if (isArray(listeners)) {\n      for (let i = 0, length = listeners.length; i < length; i++) {\n        const listener = listeners[i];\n        updateEventListener(\n          listener,\n          fiber,\n          visistedResponders,\n          respondersMap,\n          rootContainerInstance,\n        );\n      }\n    } else {\n      updateEventListener(\n        listeners,\n        fiber,\n        visistedResponders,\n        respondersMap,\n        rootContainerInstance,\n      );\n    }\n  }\n  if (dependencies !== null) {\n    const respondersMap = dependencies.responders;\n    if (respondersMap !== null) {\n      // Unmount\n      const mountedResponders = Array.from(respondersMap.keys());\n      for (let i = 0, length = mountedResponders.length; i < length; i++) {\n        const mountedResponder = mountedResponders[i];\n        if (!visistedResponders.has(mountedResponder)) {\n          const responderInstance = ((respondersMap.get(\n            mountedResponder,\n          ): any): ReactEventResponderInstance<any, any>);\n          DEPRECATED_unmountResponderInstance(responderInstance);\n          respondersMap.delete(mountedResponder);\n        }\n      }\n    }\n  }\n}\n\nexport function createDeprecatedResponderListener(\n  responder: ReactEventResponder<any, any>,\n  props: Object,\n): ReactEventResponderListener<any, any> {\n  const eventResponderListener = {\n    responder,\n    props,\n  };\n  if (__DEV__) {\n    Object.freeze(eventResponderListener);\n  }\n  return eventResponderListener;\n}\n\nexport function unmountDeprecatedResponderListeners(fiber: Fiber) {\n  const dependencies = fiber.dependencies;\n\n  if (dependencies !== null) {\n    const respondersMap = dependencies.responders;\n    if (respondersMap !== null) {\n      const responderInstances = Array.from(respondersMap.values());\n      for (let i = 0, length = responderInstances.length; i < length; i++) {\n        const responderInstance = responderInstances[i];\n        DEPRECATED_unmountResponderInstance(responderInstance);\n      }\n      dependencies.responders = null;\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookEffectTag = number;\n\nexport const NoEffect = /*  */ 0b000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Layout = /*    */ 0b010;\nexport const Passive = /*   */ 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactEventResponder,\n  ReactContext,\n  ReactEventResponderListener,\n} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {HookEffectTag} from './ReactHookEffectTags';\nimport type {SuspenseConfig} from './ReactFiberSuspenseConfig';\nimport type {ReactPriorityLevel} from './SchedulerWithReactIntegration';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {NoWork, Sync} from './ReactFiberExpirationTime';\nimport {readContext} from './ReactFiberNewContext';\nimport {createDeprecatedResponderListener} from './ReactFiberDeprecatedEvents';\nimport {\n  Update as UpdateEffect,\n  Passive as PassiveEffect,\n} from 'shared/ReactSideEffectTags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {\n  scheduleWork,\n  computeExpirationForFiber,\n  requestCurrentTimeForUpdate,\n  warnIfNotCurrentlyActingEffectsInDEV,\n  warnIfNotCurrentlyActingUpdatesInDev,\n  warnIfNotScopedWithMatchingAct,\n  markRenderEventTimeAndConfig,\n  markUnprocessedUpdateTime,\n} from './ReactFiberWorkLoop';\n\nimport invariant from 'shared/invariant';\nimport getComponentName from 'shared/getComponentName';\nimport is from 'shared/objectIs';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork';\nimport {requestCurrentSuspenseConfig} from './ReactFiberSuspenseConfig';\nimport {\n  UserBlockingPriority,\n  NormalPriority,\n  runWithPriority,\n  getCurrentPriorityLevel,\n} from './SchedulerWithReactIntegration';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport type Dispatcher = {|\n  readContext<T>(\n    context: ReactContext<T>,\n    observedBits: void | number | boolean,\n  ): T,\n  useState<S>(initialState: (() => S) | S): [S, Dispatch<BasicStateAction<S>>],\n  useReducer<S, I, A>(\n    reducer: (S, A) => S,\n    initialArg: I,\n    init?: (I) => S,\n  ): [S, Dispatch<A>],\n  useContext<T>(\n    context: ReactContext<T>,\n    observedBits: void | number | boolean,\n  ): T,\n  useRef<T>(initialValue: T): {|current: T|},\n  useEffect(\n    create: () => (() => void) | void,\n    deps: Array<mixed> | void | null,\n  ): void,\n  useLayoutEffect(\n    create: () => (() => void) | void,\n    deps: Array<mixed> | void | null,\n  ): void,\n  useCallback<T>(callback: T, deps: Array<mixed> | void | null): T,\n  useMemo<T>(nextCreate: () => T, deps: Array<mixed> | void | null): T,\n  useImperativeHandle<T>(\n    ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n    create: () => T,\n    deps: Array<mixed> | void | null,\n  ): void,\n  useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void,\n  useResponder<E, C>(\n    responder: ReactEventResponder<E, C>,\n    props: Object,\n  ): ReactEventResponderListener<E, C>,\n  useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T,\n  useTransition(\n    config: SuspenseConfig | void | null,\n  ): [(() => void) => void, boolean],\n|};\n\ntype Update<S, A> = {|\n  expirationTime: ExpirationTime,\n  suspenseConfig: null | SuspenseConfig,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A>,\n  priority?: ReactPriorityLevel,\n|};\n\ntype UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nexport type HookType =\n  | 'useState'\n  | 'useReducer'\n  | 'useContext'\n  | 'useRef'\n  | 'useEffect'\n  | 'useLayoutEffect'\n  | 'useCallback'\n  | 'useMemo'\n  | 'useImperativeHandle'\n  | 'useDebugValue'\n  | 'useResponder'\n  | 'useDeferredValue'\n  | 'useTransition';\n\nlet didWarnAboutMismatchedHooksForComponent;\nif (__DEV__) {\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: UpdateQueue<any, any> | null,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookEffectTag,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\nexport type FunctionComponentUpdateQueue = {|lastEffect: Effect | null|};\n\nexport type TimeoutConfig = {|\n  timeoutMs: number,\n|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderExpirationTime: ExpirationTime = NoWork;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentName(currentlyRenderingFiber.type);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  props: any,\n  secondArg: any,\n  nextRenderExpirationTime: ExpirationTime,\n): any {\n  renderExpirationTime = nextRenderExpirationTime;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.expirationTime = NoWork;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (workInProgress.expirationTime === renderExpirationTime) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      workInProgress.expirationTime = NoWork;\n\n      invariant(\n        numberOfReRenders < RE_RENDER_LIMIT,\n        'Too many re-renders. React limits the number of renders to prevent ' +\n          'an infinite loop.',\n      );\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (workInProgress.expirationTime === renderExpirationTime);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderExpirationTime = NoWork;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  expirationTime: ExpirationTime,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.effectTag &= ~(PassiveEffect | UpdateEffect);\n  if (current.expirationTime <= expirationTime) {\n    current.expirationTime = NoWork;\n  }\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n  }\n\n  renderExpirationTime = NoWork;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    let current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  let pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      let baseFirst = baseQueue.next;\n      let pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    let first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateExpirationTime = update.expirationTime;\n      if (updateExpirationTime < renderExpirationTime) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          expirationTime: update.expirationTime,\n          suspenseConfig: update.suspenseConfig,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        if (updateExpirationTime > currentlyRenderingFiber.expirationTime) {\n          currentlyRenderingFiber.expirationTime = updateExpirationTime;\n          markUnprocessedUpdateTime(updateExpirationTime);\n        }\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            expirationTime: Sync, // This update is going to be committed so we never want uncommit it.\n            suspenseConfig: update.suspenseConfig,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Mark the event time of this update as relevant to this render pass.\n        // TODO: This should ideally use the true event time of this update rather than\n        // its priority which is a derived and not reverseable value.\n        // TODO: We should skip this update if it was already committed but currently\n        // we have no way of detecting the difference between a committed and suspended\n        // update here.\n        markRenderEventTimeAndConfig(\n          updateExpirationTime,\n          update.suspenseConfig,\n        );\n\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  const ref = {current: initialValue};\n  if (__DEV__) {\n    Object.seal(ref);\n  }\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.effectTag |= fiberEffectTag;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookEffectTag,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(hookEffectTag, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.effectTag |= fiberEffectTag;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookEffectTag,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return updateEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return mountEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(\n  value: T,\n  config: TimeoutConfig | void | null,\n): T {\n  const [prevValue, setValue] = mountState(value);\n  mountEffect(() => {\n    const previousConfig = ReactCurrentBatchConfig.suspense;\n    ReactCurrentBatchConfig.suspense = config === undefined ? null : config;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.suspense = previousConfig;\n    }\n  }, [value, config]);\n  return prevValue;\n}\n\nfunction updateDeferredValue<T>(\n  value: T,\n  config: TimeoutConfig | void | null,\n): T {\n  const [prevValue, setValue] = updateState(value);\n  updateEffect(() => {\n    const previousConfig = ReactCurrentBatchConfig.suspense;\n    ReactCurrentBatchConfig.suspense = config === undefined ? null : config;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.suspense = previousConfig;\n    }\n  }, [value, config]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue<T>(\n  value: T,\n  config: TimeoutConfig | void | null,\n): T {\n  const [prevValue, setValue] = rerenderState(value);\n  updateEffect(() => {\n    const previousConfig = ReactCurrentBatchConfig.suspense;\n    ReactCurrentBatchConfig.suspense = config === undefined ? null : config;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.suspense = previousConfig;\n    }\n  }, [value, config]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, config, callback) {\n  const priorityLevel = getCurrentPriorityLevel();\n  runWithPriority(\n    priorityLevel < UserBlockingPriority ? UserBlockingPriority : priorityLevel,\n    () => {\n      setPending(true);\n    },\n  );\n  runWithPriority(\n    priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n    () => {\n      const previousConfig = ReactCurrentBatchConfig.suspense;\n      ReactCurrentBatchConfig.suspense = config === undefined ? null : config;\n      try {\n        setPending(false);\n        callback();\n      } finally {\n        ReactCurrentBatchConfig.suspense = previousConfig;\n      }\n    },\n  );\n}\n\nfunction mountTransition(\n  config: SuspenseConfig | void | null,\n): [(() => void) => void, boolean] {\n  const [isPending, setPending] = mountState(false);\n  const start = mountCallback(startTransition.bind(null, setPending, config), [\n    setPending,\n    config,\n  ]);\n  return [start, isPending];\n}\n\nfunction updateTransition(\n  config: SuspenseConfig | void | null,\n): [(() => void) => void, boolean] {\n  const [isPending, setPending] = updateState(false);\n  const start = updateCallback(startTransition.bind(null, setPending, config), [\n    setPending,\n    config,\n  ]);\n  return [start, isPending];\n}\n\nfunction rerenderTransition(\n  config: SuspenseConfig | void | null,\n): [(() => void) => void, boolean] {\n  const [isPending, setPending] = rerenderState(false);\n  const start = updateCallback(startTransition.bind(null, setPending, config), [\n    setPending,\n    config,\n  ]);\n  return [start, isPending];\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const currentTime = requestCurrentTimeForUpdate();\n  const suspenseConfig = requestCurrentSuspenseConfig();\n  const expirationTime = computeExpirationForFiber(\n    currentTime,\n    fiber,\n    suspenseConfig,\n  );\n\n  const update: Update<S, A> = {\n    expirationTime,\n    suspenseConfig,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  if (__DEV__) {\n    update.priority = getCurrentPriorityLevel();\n  }\n\n  // Append the update to the end of the list.\n  const pending = queue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdate = true;\n    update.expirationTime = renderExpirationTime;\n    currentlyRenderingFiber.expirationTime = renderExpirationTime;\n  } else {\n    if (\n      fiber.expirationTime === NoWork &&\n      (alternate === null || alternate.expirationTime === NoWork)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n      if ('undefined' !== typeof jest) {\n        warnIfNotScopedWithMatchingAct(fiber);\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\n      }\n    }\n    scheduleWork(fiber, expirationTime);\n  }\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useResponder: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n};\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useResponder: createDeprecatedResponderListener,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n};\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useResponder: createDeprecatedResponderListener,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n};\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useResponder: createDeprecatedResponderListener,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n};\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://fb.me/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      mountHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition(config);\n    },\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      updateHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition(config);\n    },\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      updateHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition(config);\n    },\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      updateHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition(config);\n    },\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition(config);\n    },\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition(config);\n    },\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useResponder<E, C>(\n      responder: ReactEventResponder<E, C>,\n      props,\n    ): ReactEventResponderListener<E, C> {\n      currentHookNameInDev = 'useResponder';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return createDeprecatedResponderListener(responder, props);\n    },\n    useDeferredValue<T>(value: T, config: TimeoutConfig | void | null): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value, config);\n    },\n    useTransition(\n      config: SuspenseConfig | void | null,\n    ): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition(config);\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet profilerStartTime: number = -1;\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nexport {\n  getCommitTime,\n  recordCommitTime,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from 'shared/ReactWorkTags';\nimport {Deletion, Placement, Hydrating} from 'shared/ReactSideEffectTags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nimport {Never} from './ReactFiberExpirationTime';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.effectTag = Deletion;\n\n  // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.effectTag = (fiber.effectTag & ~Hydrating) | Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n          nextInstance,\n        );\n        if (suspenseInstance !== null) {\n          const suspenseState: SuspenseState = {\n            dehydrated: suspenseInstance,\n            retryTime: Never,\n          };\n          fiber.memoizedState = suspenseState;\n          // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n          const dehydratedFragment = createFiberFromDehydratedFragment(\n            suspenseInstance,\n          );\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  let suspenseState: null | SuspenseState = fiber.memoizedState;\n  let suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  let suspenseState: null | SuspenseState = fiber.memoizedState;\n  let suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  const type = fiber.type;\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n  if (\n    fiber.tag !== HostComponent ||\n    (type !== 'head' &&\n      type !== 'body' &&\n      !shouldSetTextContent(type, fiber.memoizedProps))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement, Source} from 'shared/ReactElementType';\nimport type {\n  ReactFragment,\n  ReactPortal,\n  RefObject,\n  ReactEventResponder,\n  ReactEventResponderInstance,\n  ReactFundamentalComponent,\n  ReactScope,\n} from 'shared/ReactTypes';\nimport type {RootTag} from 'shared/ReactRootTags';\nimport type {WorkTag} from 'shared/ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {SideEffectTag} from 'shared/ReactSideEffectTags';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {UpdateQueue} from './ReactUpdateQueue';\nimport type {ContextDependency} from './ReactFiberNewContext';\nimport type {HookType} from './ReactFiberHooks';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\nimport {\n  enableProfilerTimer,\n  enableFundamentalAPI,\n  enableUserTimingAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport {NoEffect, Placement} from 'shared/ReactSideEffectTags';\nimport {ConcurrentRoot, BlockingRoot} from 'shared/ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n} from 'shared/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {\n  NoMode,\n  ConcurrentMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_CONCURRENT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_FUNDAMENTAL_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    const testMap = new Map([[nonExtensibleObject, null]]);\n    const testSet = new Set([nonExtensibleObject]);\n    // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nexport type Dependencies = {\n  expirationTime: ExpirationTime,\n  firstContext: ContextDependency<mixed> | null,\n  responders: Map<\n    ReactEventResponder<any, any>,\n    ReactEventResponderInstance<any, any>,\n  > | null,\n  ...\n};\n\n// A Fiber is work on a Component that needs to be done or was done. There can\n// be more than one per component.\nexport type Fiber = {|\n  // These first fields are conceptually members of an Instance. This used to\n  // be split into a separate type and intersected with the other Fiber fields,\n  // but until Flow fixes its intersection bugs, we've merged them into a\n  // single type.\n\n  // An Instance is shared between all versions of a component. We can easily\n  // break this out into a separate object to avoid copying so much to the\n  // alternate versions of the tree. We put this on a single object for now to\n  // minimize the number of objects created during the initial render.\n\n  // Tag identifying the type of fiber.\n  tag: WorkTag,\n\n  // Unique identifier of this child.\n  key: null | string,\n\n  // The value of element.type which is used to preserve the identity during\n  // reconciliation of this child.\n  elementType: any,\n\n  // The resolved function/class/ associated with this fiber.\n  type: any,\n\n  // The local state associated with this fiber.\n  stateNode: any,\n\n  // Conceptual aliases\n  // parent : Instance -> return The parent happens to be the same as the\n  // return fiber since we've merged the fiber and instance.\n\n  // Remaining fields belong to Fiber\n\n  // The Fiber to return to after finishing processing this one.\n  // This is effectively the parent, but there can be multiple parents (two)\n  // so this is only the parent of the thing we're currently processing.\n  // It is conceptually the same as the return address of a stack frame.\n  return: Fiber | null,\n\n  // Singly Linked List Tree Structure.\n  child: Fiber | null,\n  sibling: Fiber | null,\n  index: number,\n\n  // The ref last used to attach this node.\n  // I'll avoid adding an owner field for prod and model that as functions.\n  ref:\n    | null\n    | (((handle: mixed) => void) & {_stringRef: ?string, ...})\n    | RefObject,\n\n  // Input is the data coming into process this fiber. Arguments. Props.\n  pendingProps: any, // This type will be more specific once we overload the tag.\n  memoizedProps: any, // The props used to create the output.\n\n  // A queue of state updates and callbacks.\n  updateQueue: UpdateQueue<any> | null,\n\n  // The state used to create the output\n  memoizedState: any,\n\n  // Dependencies (contexts, events) for this fiber, if it has any\n  dependencies: Dependencies | null,\n\n  // Bitfield that describes properties about the fiber and its subtree. E.g.\n  // the ConcurrentMode flag indicates whether the subtree should be async-by-\n  // default. When a fiber is created, it inherits the mode of its\n  // parent. Additional flags can be set at creation time, but after that the\n  // value should remain unchanged throughout the fiber's lifetime, particularly\n  // before its child fibers are created.\n  mode: TypeOfMode,\n\n  // Effect\n  effectTag: SideEffectTag,\n\n  // Singly linked list fast path to the next fiber with side-effects.\n  nextEffect: Fiber | null,\n\n  // The first and last fiber with side-effect within this subtree. This allows\n  // us to reuse a slice of the linked list when we reuse the work done within\n  // this fiber.\n  firstEffect: Fiber | null,\n  lastEffect: Fiber | null,\n\n  // Represents a time in the future by which this work should be completed.\n  // Does not include work found in its subtree.\n  expirationTime: ExpirationTime,\n\n  // This is used to quickly determine if a subtree has no pending changes.\n  childExpirationTime: ExpirationTime,\n\n  // This is a pooled version of a Fiber. Every fiber that gets updated will\n  // eventually have a pair. There are cases when we can clean up pairs to save\n  // memory if we need to.\n  alternate: Fiber | null,\n\n  // Time spent rendering this Fiber and its descendants for the current update.\n  // This tells us how well the tree makes use of sCU for memoization.\n  // It is reset to 0 each time we render and only updated when we don't bailout.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  actualDuration?: number,\n\n  // If the Fiber is currently active in the \"render\" phase,\n  // This marks the time at which the work began.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  actualStartTime?: number,\n\n  // Duration of the most recent render time for this Fiber.\n  // This value is not updated when we bailout for memoization purposes.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  selfBaseDuration?: number,\n\n  // Sum of base times for all descendants of this Fiber.\n  // This value bubbles up during the \"complete\" phase.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  treeBaseDuration?: number,\n\n  // Conceptual aliases\n  // workInProgress : Fiber ->  alternate The alternate used for reuse happens\n  // to be the same as work in progress.\n  // __DEV__ only\n  _debugID?: number,\n  _debugSource?: Source | null,\n  _debugOwner?: Fiber | null,\n  _debugIsCurrentlyTiming?: boolean,\n  _debugNeedsRemount?: boolean,\n\n  // Used to verify that the order of hooks does not change between renders.\n  _debugHookTypes?: Array<HookType> | null,\n|};\n\nlet debugCounter = 1;\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.effectTag = NoEffect;\n  this.nextEffect = null;\n\n  this.firstEffect = null;\n  this.lastEffect = null;\n\n  this.expirationTime = NoWork;\n  this.childExpirationTime = NoWork;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  // This is normally DEV-only except www when it adds listeners.\n  // TODO: remove the User Timing integration in favor of Root Events.\n  if (enableUserTimingAPI) {\n    this._debugID = debugCounter++;\n    this._debugIsCurrentlyTiming = false;\n  }\n\n  if (__DEV__) {\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function (\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n    if (enableBlocksAPI) {\n      if ($$typeof === REACT_BLOCK_TYPE) {\n        return Block;\n      }\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// 构建 workInProgress Fiber 树中的 rootFiber\n// 构建完成后会替换 current fiber\n// 初始渲染 pendingProps 为 null\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  // current: current Fiber 中的 rootFiber\n  // 获取 current Fiber 对应的 workInProgress Fiber\n  let workInProgress = current.alternate;\n  // 如果 workInProgress 不存在\n  if (workInProgress === null) {\n    // 创建 fiber 对象\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    // 属性复用\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n      if (enableUserTimingAPI) {\n        workInProgress._debugID = current._debugID;\n      }\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n    // 使用 alternate 存储 current\n    workInProgress.alternate = current;\n    // 使用 alternate 存储 workInProgress\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.effectTag = NoEffect;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childExpirationTime = current.childExpirationTime;\n  workInProgress.expirationTime = current.expirationTime;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          expirationTime: currentDependencies.expirationTime,\n          firstContext: currentDependencies.firstContext,\n          responders: currentDependencies.responders,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect tag but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.effectTag &= Placement;\n\n  // The effect list is no longer valid.\n  workInProgress.nextEffect = null;\n  workInProgress.firstEffect = null;\n  workInProgress.lastEffect = null;\n\n  let current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childExpirationTime = NoWork;\n    workInProgress.expirationTime = renderExpirationTime;\n\n    workInProgress.child = null;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childExpirationTime = current.childExpirationTime;\n    workInProgress.expirationTime = current.expirationTime;\n\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            expirationTime: currentDependencies.expirationTime,\n            firstContext: currentDependencies.firstContext,\n            responders: currentDependencies.responders,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(tag: RootTag): Fiber {\n  // 根据 tag 值设置 mode\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode | BlockingMode | StrictMode;\n  } else if (tag === BlockingRoot) {\n    mode = BlockingMode | StrictMode;\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  let fiber;\n\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(\n          pendingProps.children,\n          mode,\n          expirationTime,\n          key,\n        );\n      case REACT_CONCURRENT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= ConcurrentMode | BlockingMode | StrictMode;\n        break;\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictMode;\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(\n          pendingProps,\n          mode,\n          expirationTime,\n          key,\n        );\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n            case REACT_BLOCK_TYPE:\n              fiberTag = Block;\n              break getTag;\n            case REACT_FUNDAMENTAL_TYPE:\n              if (enableFundamentalAPI) {\n                return createFiberFromFundamental(\n                  type,\n                  pendingProps,\n                  mode,\n                  expirationTime,\n                  key,\n                );\n              }\n              break;\n            case REACT_SCOPE_TYPE:\n              if (enableScopeAPI) {\n                return createFiberFromScope(\n                  type,\n                  pendingProps,\n                  mode,\n                  expirationTime,\n                  key,\n                );\n              }\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentName(owner.type) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.expirationTime = expirationTime;\n\n  return fiber;\n}\n\n// 根据 React Element 创建 Fiber 对象\nexport function createFiberFromElement(\n  element: ReactElement,\n  // 父级Fiber mode 子级需要继承\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    expirationTime,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromFundamental(\n  fundamentalComponent: ReactFundamentalComponent<any, any>,\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(FundamentalComponent, pendingProps, key, mode);\n  fiber.elementType = fundamentalComponent;\n  fiber.type = fundamentalComponent;\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (\n      typeof pendingProps.id !== 'string' ||\n      typeof pendingProps.onRender !== 'function'\n    ) {\n      console.error(\n        'Profiler must specify an \"id\" string and \"onRender\" function as props',\n      );\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.expirationTime = expirationTime;\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  fiber.type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  if (__DEV__) {\n    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.\n    // This needs to be fixed in getComponentName so that it relies on the tag\n    // instead.\n    fiber.type = REACT_SUSPENSE_LIST_TYPE;\n  }\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  // TODO: These should not need a type.\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.expirationTime = expirationTime;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.effectTag = source.effectTag;\n  target.nextEffect = source.nextEffect;\n  target.firstEffect = source.firstEffect;\n  target.lastEffect = source.lastEffect;\n  target.expirationTime = source.expirationTime;\n  target.childExpirationTime = source.childExpirationTime;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n  if (enableUserTimingAPI) {\n    target._debugID = source._debugID;\n  }\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext';\n\nimport checkPropTypes from 'prop-types/checkPropTypes';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n} from 'shared/ReactWorkTags';\nimport {\n  NoEffect,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  Deletion,\n} from 'shared/ReactSideEffectTags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableProfilerTimer,\n  enableSchedulerTracing,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings';\nimport {refineResolvedLazyComponent} from 'shared/ReactLazyComponent';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  getCurrentFiberStackInDev,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {startWorkTimer, cancelWorkTimer} from './ReactDebugFiberPerf';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n} from './ReactUpdateQueue';\nimport {\n  NoWork,\n  Never,\n  Sync,\n  computeAsyncExpiration,\n} from './ReactFiberExpirationTime';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  shouldDeprioritizeSubtree,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  registerSuspenseInstanceRetry,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {shouldSuspend} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent';\nimport {\n  pushProvider,\n  propagateContextChange,\n  readContext,\n  prepareToReadContext,\n  calculateChangedBits,\n  scheduleWorkOnParentPath,\n} from './ReactFiberNewContext';\nimport {renderWithHooks, bailoutHooks} from './ReactFiberHooks';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n} from './ReactFiberHydrationContext';\nimport {\n  adoptClassInstance,\n  applyDerivedStateFromProps,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent';\nimport {\n  readLazyComponentType,\n  resolveDefaultProps,\n} from './ReactFiberLazyComponent';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber';\nimport {\n  markSpawnedWork,\n  requestCurrentTimeForUpdate,\n  retryDehydratedSuspenseBoundary,\n  scheduleWork,\n  renderDidSuspendDelayIfPossible,\n  markUnprocessedUpdateTime,\n} from './ReactFiberWorkLoop';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n// 构建子级 Fiber 对象\nexport function reconcileChildren(\n  // 旧 Fiber\n  current: Fiber | null,\n  // 新 Fiber\n  workInProgress: Fiber,\n  // 新 Fiber 的 vdom 对象\n  nextChildren: any,\n  // 初始渲染 整型最大值 代表同步任务\n  renderExpirationTime: ExpirationTime,\n) {\n  /**\n   * 为什么要传递 current ?\n   * 如果不是初始渲染的情况, 要进行新旧 Fiber 对比\n   * 初始渲染时则用不到 current\n   */\n  // 如果就 Fiber 为 null 表示初始渲染\n  if (current === null) {\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    // 否则就是更新\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderExpirationTime,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderExpirationTime: ExpirationTime,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderExpirationTime,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderExpirationTime,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderExpirationTime: ExpirationTime,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderExpirationTime,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderExpirationTime,\n        );\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderExpirationTime,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateExpirationTime,\n  renderExpirationTime: ExpirationTime,\n): null | Fiber {\n  if (current === null) {\n    let type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(type),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n    let child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      null,\n      workInProgress.mode,\n      renderExpirationTime,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentName(type),\n        getCurrentFiberStackInDev,\n      );\n    }\n  }\n  let currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  if (updateExpirationTime < renderExpirationTime) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  let newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateExpirationTime,\n  renderExpirationTime: ExpirationTime,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        outerMemoType = refineResolvedLazyComponent(outerMemoType);\n      }\n      const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n      if (outerPropTypes) {\n        checkPropTypes(\n          outerPropTypes,\n          nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n          'prop',\n          getComponentName(outerMemoType),\n          getCurrentFiberStackInDev,\n        );\n      }\n      // Inner propTypes will be validated in the function component path.\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n      if (updateExpirationTime < renderExpirationTime) {\n        // The pending update priority was cleared at the beginning of\n        // beginWork. We're about to bail out, but there might be additional\n        // updates at a lower priority. Usually, the priority level of the\n        // remaining updates is accumlated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.expirationTime = current.expirationTime;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderExpirationTime,\n  );\n}\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.effectTag |= Update;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.effectTag |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderExpirationTime,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n  }\n\n  let context;\n\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderExpirationTime,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderExpirationTime,\n        );\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderExpirationTime,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateBlock(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  block: any,\n  nextProps: any,\n  renderExpirationTime: ExpirationTime,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  const render = block.render;\n  const data = block.query();\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderExpirationTime,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          data,\n          renderExpirationTime,\n        );\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderExpirationTime,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.effectTag |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderExpirationTime,\n  );\n  if (__DEV__) {\n    let inst = workInProgress.stateNode;\n    if (inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentName(workInProgress.type) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderExpirationTime: ExpirationTime,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        instance.render();\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\n// 更新 hostRoot\n// <div id=\"root\"></div> 对应的 Fiber 对象\nfunction updateHostRoot(current, workInProgress, renderExpirationTime) {\n  pushHostRootContext(workInProgress);\n  // 获取更新队列\n  const updateQueue = workInProgress.updateQueue;\n\n  invariant(\n    current !== null && updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n\n  // 获取新的 props 对象 null\n  const nextProps = workInProgress.pendingProps;\n  // 获取上一次渲染使用的 state null\n  const prevState = workInProgress.memoizedState;\n  // 获取上一次渲染使用的 children null\n  const prevChildren = prevState !== null ? prevState.element : null;\n  // 浅复制更新队列, 防止引用属性互相影响\n  // workInProgress.updateQueue 浅拷贝 current.updateQueue\n  cloneUpdateQueue(current, workInProgress);\n  // 获取 updateQueue.payload 并赋值到 workInProgress.memoizedState\n  // 要更新的内容就是 element 就是 rootFiber 的子元素\n  processUpdateQueue(workInProgress, nextProps, null, renderExpirationTime);\n  // 获取 element 所在对象\n  const nextState = workInProgress.memoizedState;\n  // 从对象中获取 element\n  const nextChildren = nextState.element;\n\n  // 在计算 state 后如果前后两个 Children 相同的情况\n  // prevChildren => null\n  // nextState => App\n  // false\n  if (nextChildren === prevChildren) {\n    // If the state is the same as before, that's a bailout because we had\n    // no work that expires at this time.\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n  // 获取 fiberRoot 对象\n  const root: FiberRoot = workInProgress.stateNode;\n  // 服务器端渲染走 if\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    let child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n\n    workInProgress.child = child;\n\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.effectTag = (node.effectTag & ~Placement) | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // 客户端渲染走 else\n    // 构建子节点 fiber 对象\n    reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n    resetHydrationState();\n  }\n\n  // 返回子节点 fiber 对象\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderExpirationTime) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.effectTag |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n\n  // Check the host config to see if the children are offscreen/hidden.\n  if (\n    workInProgress.mode & ConcurrentMode &&\n    renderExpirationTime !== Never &&\n    shouldDeprioritizeSubtree(type, nextProps)\n  ) {\n    if (enableSchedulerTracing) {\n      markSpawnedWork(Never);\n    }\n    // Schedule this fiber to re-render at offscreen priority. Then bailout.\n    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;\n    return null;\n  }\n\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  updateExpirationTime,\n  renderExpirationTime,\n) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  // We can't start a User Timing measurement with correct label yet.\n  // Cancel and resume right after we know the tag.\n  cancelWorkTimer(workInProgress);\n  let Component = readLazyComponentType(elementType);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  startWorkTimer(workInProgress);\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(Component),\n              getCurrentFiberStackInDev,\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n      return child;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        // TODO: Resolve for Hot Reloading.\n        child = updateBlock(\n          null,\n          workInProgress,\n          Component,\n          props,\n          renderExpirationTime,\n        );\n        return child;\n      }\n      break;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  invariant(\n    false,\n    'Element type is invalid. Received a promise that resolves to: %s. ' +\n      'Lazy element type must resolve to a class or function.%s',\n    Component,\n    hint,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderExpirationTime,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(\n    workInProgress,\n    Component,\n    nextProps,\n    renderExpirationTime,\n  );\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderExpirationTime,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  // 旧 Fiber\n  _current,\n  // 新 Fiber\n  workInProgress,\n  // 新 Fiber 的 type 属性值 初始渲染时 是 App 组件函数\n  Component,\n  // 整数最大值 表示同步任务\n  renderExpirationTime,\n) {\n  // _current => null\n  // false\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n  // 为组件添加的 props <App test=\"test\"/>\n  const props = workInProgress.pendingProps;\n  let context;\n  // disableLegacyContext 常量 默认值 false\n  // true\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  // 函数组件被调用后的返回值\n  let value;\n\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderExpirationTime,\n    );\n    setIsRendering(false);\n  } else {\n    // 获取 Children 内部会调用 Component()\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderExpirationTime,\n    );\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n\n  // 判断 value 是函数组件还是类组件\n  // 条件成立就是类组件 不成立就是函数组件\n  if (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n    // 类组件\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    const getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        getDerivedStateFromProps,\n        props,\n      );\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderExpirationTime);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderExpirationTime,\n    );\n  } else {\n    // 函数组件\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentName(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        // Only double-render components with Hooks\n        if (workInProgress.memoizedState !== null) {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderExpirationTime,\n          );\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderExpirationTime);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || workInProgress._debugID || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  retryTime: NoWork,\n};\n\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n) {\n  // If the context is telling us that we should show a fallback, and we're not\n  // already showing content, then we should show the fallback instead.\n  return (\n    hasSuspenseContext(\n      suspenseContext,\n      (ForceSuspenseFallback: SuspenseContext),\n    ) &&\n    (current === null || current.memoizedState !== null)\n  );\n}\n\nfunction updateSuspenseComponent(\n  current,\n  workInProgress,\n  renderExpirationTime,\n) {\n  const mode = workInProgress.mode;\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.effectTag |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let nextDidTimeout = false;\n  const didSuspend = (workInProgress.effectTag & DidCapture) !== NoEffect;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(suspenseContext, current, workInProgress)\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    nextDidTimeout = true;\n    workInProgress.effectTag &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Boundaries without fallbacks or should be avoided are not considered since\n      // they cannot handle preferred fallback states.\n      if (\n        nextProps.fallback !== undefined &&\n        nextProps.unstable_avoidThisFallback !== true\n      ) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // This next part is a bit confusing. If the children timeout, we switch to\n  // showing the fallback children in place of the \"primary\" children.\n  // However, we don't want to delete the primary children because then their\n  // state will be lost (both the React state and the host state, e.g.\n  // uncontrolled form inputs). Instead we keep them mounted and hide them.\n  // Both the fallback children AND the primary children are rendered at the\n  // same time. Once the primary children are un-suspended, we can delete\n  // the fallback children — don't need to preserve their state.\n  //\n  // The two sets of children are siblings in the host environment, but\n  // semantically, for purposes of reconciliation, they are two separate sets.\n  // So we store them using two fragment fibers.\n  //\n  // However, we want to avoid allocating extra fibers for every placeholder.\n  // They're only necessary when the children time out, because that's the\n  // only time when both sets are mounted.\n  //\n  // So, the extra fragment fibers are only used if the children time out.\n  // Otherwise, we render the primary children directly. This requires some\n  // custom reconciliation logic to preserve the state of the primary\n  // children. It's essentially a very basic form of re-parenting.\n\n  if (current === null) {\n    // If we're currently hydrating, try to hydrate this boundary.\n    // But only if this has a fallback.\n    if (nextProps.fallback !== undefined) {\n      tryToClaimNextHydratableInstance(workInProgress);\n      // This could've been a dehydrated suspense component.\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          const dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(\n              workInProgress,\n              dehydrated,\n              renderExpirationTime,\n            );\n          }\n        }\n      }\n    }\n\n    // This is the initial mount. This branch is pretty simple because there's\n    // no previous state that needs to be preserved.\n    if (nextDidTimeout) {\n      // Mount separate fragments for primary and fallback children.\n      const nextFallbackChildren = nextProps.fallback;\n      const primaryChildFragment = createFiberFromFragment(\n        null,\n        mode,\n        NoWork,\n        null,\n      );\n      primaryChildFragment.return = workInProgress;\n\n      if ((workInProgress.mode & BlockingMode) === NoMode) {\n        // Outside of blocking mode, we commit the effects from the\n        // partially completed, timed-out tree, too.\n        const progressedState: SuspenseState = workInProgress.memoizedState;\n        const progressedPrimaryChild: Fiber | null =\n          progressedState !== null\n            ? (workInProgress.child: any).child\n            : (workInProgress.child: any);\n        primaryChildFragment.child = progressedPrimaryChild;\n        let progressedChild = progressedPrimaryChild;\n        while (progressedChild !== null) {\n          progressedChild.return = primaryChildFragment;\n          progressedChild = progressedChild.sibling;\n        }\n      }\n\n      const fallbackChildFragment = createFiberFromFragment(\n        nextFallbackChildren,\n        mode,\n        renderExpirationTime,\n        null,\n      );\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      // Skip the primary children, and continue working on the\n      // fallback children.\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    } else {\n      // Mount the primary children without an intermediate fragment fiber.\n      const nextPrimaryChildren = nextProps.children;\n      workInProgress.memoizedState = null;\n      return (workInProgress.child = mountChildFibers(\n        workInProgress,\n        null,\n        nextPrimaryChildren,\n        renderExpirationTime,\n      ));\n    }\n  } else {\n    // This is an update. This branch is more complicated because we need to\n    // ensure the state of the primary children is preserved.\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      if (enableSuspenseServerRenderer) {\n        const dehydrated = prevState.dehydrated;\n        if (dehydrated !== null) {\n          if (!didSuspend) {\n            return updateDehydratedSuspenseComponent(\n              current,\n              workInProgress,\n              dehydrated,\n              prevState,\n              renderExpirationTime,\n            );\n          } else if (\n            (workInProgress.memoizedState: null | SuspenseState) !== null\n          ) {\n            // Something suspended and we should still be in dehydrated mode.\n            // Leave the existing child in place.\n            workInProgress.child = current.child;\n            // The dehydrated completion pass expects this flag to be there\n            // but the normal suspense pass doesn't.\n            workInProgress.effectTag |= DidCapture;\n            return null;\n          } else {\n            // Suspended but we should no longer be in dehydrated mode.\n            // Therefore we now have to render the fallback. Wrap the children\n            // in a fragment fiber to keep them separate from the fallback\n            // children.\n            const nextFallbackChildren = nextProps.fallback;\n            const primaryChildFragment = createFiberFromFragment(\n              // It shouldn't matter what the pending props are because we aren't\n              // going to render this fragment.\n              null,\n              mode,\n              NoWork,\n              null,\n            );\n            primaryChildFragment.return = workInProgress;\n\n            // This is always null since we never want the previous child\n            // that we're not going to hydrate.\n            primaryChildFragment.child = null;\n\n            if ((workInProgress.mode & BlockingMode) === NoMode) {\n              // Outside of blocking mode, we commit the effects from the\n              // partially completed, timed-out tree, too.\n              let progressedChild = (primaryChildFragment.child =\n                workInProgress.child);\n              while (progressedChild !== null) {\n                progressedChild.return = primaryChildFragment;\n                progressedChild = progressedChild.sibling;\n              }\n            } else {\n              // We will have dropped the effect list which contains the deletion.\n              // We need to reconcile to delete the current child.\n              reconcileChildFibers(\n                workInProgress,\n                current.child,\n                null,\n                renderExpirationTime,\n              );\n            }\n\n            // Because primaryChildFragment is a new fiber that we're inserting as the\n            // parent of a new tree, we need to set its treeBaseDuration.\n            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n              // treeBaseDuration is the sum of all the child tree base durations.\n              let treeBaseDuration = 0;\n              let hiddenChild = primaryChildFragment.child;\n              while (hiddenChild !== null) {\n                treeBaseDuration += hiddenChild.treeBaseDuration;\n                hiddenChild = hiddenChild.sibling;\n              }\n              primaryChildFragment.treeBaseDuration = treeBaseDuration;\n            }\n\n            // Create a fragment from the fallback children, too.\n            const fallbackChildFragment = createFiberFromFragment(\n              nextFallbackChildren,\n              mode,\n              renderExpirationTime,\n              null,\n            );\n            fallbackChildFragment.return = workInProgress;\n            primaryChildFragment.sibling = fallbackChildFragment;\n            fallbackChildFragment.effectTag |= Placement;\n            primaryChildFragment.childExpirationTime = NoWork;\n\n            workInProgress.memoizedState = SUSPENDED_MARKER;\n            workInProgress.child = primaryChildFragment;\n\n            // Skip the primary children, and continue working on the\n            // fallback children.\n            return fallbackChildFragment;\n          }\n        }\n      }\n      // The current tree already timed out. That means each child set is\n      // wrapped in a fragment fiber.\n      const currentPrimaryChildFragment: Fiber = (current.child: any);\n      const currentFallbackChildFragment: Fiber = (currentPrimaryChildFragment.sibling: any);\n      if (nextDidTimeout) {\n        // Still timed out. Reuse the current primary children by cloning\n        // its fragment. We're going to skip over these entirely.\n        const nextFallbackChildren = nextProps.fallback;\n        const primaryChildFragment = createWorkInProgress(\n          currentPrimaryChildFragment,\n          currentPrimaryChildFragment.pendingProps,\n        );\n        primaryChildFragment.return = workInProgress;\n\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          // Outside of blocking mode, we commit the effects from the\n          // partially completed, timed-out tree, too.\n          const progressedState: SuspenseState = workInProgress.memoizedState;\n          const progressedPrimaryChild: Fiber | null =\n            progressedState !== null\n              ? (workInProgress.child: any).child\n              : (workInProgress.child: any);\n          if (progressedPrimaryChild !== currentPrimaryChildFragment.child) {\n            primaryChildFragment.child = progressedPrimaryChild;\n            let progressedChild = progressedPrimaryChild;\n            while (progressedChild !== null) {\n              progressedChild.return = primaryChildFragment;\n              progressedChild = progressedChild.sibling;\n            }\n          }\n        }\n\n        // Because primaryChildFragment is a new fiber that we're inserting as the\n        // parent of a new tree, we need to set its treeBaseDuration.\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n          // treeBaseDuration is the sum of all the child tree base durations.\n          let treeBaseDuration = 0;\n          let hiddenChild = primaryChildFragment.child;\n          while (hiddenChild !== null) {\n            treeBaseDuration += hiddenChild.treeBaseDuration;\n            hiddenChild = hiddenChild.sibling;\n          }\n          primaryChildFragment.treeBaseDuration = treeBaseDuration;\n        }\n\n        // Clone the fallback child fragment, too. These we'll continue\n        // working on.\n        const fallbackChildFragment = createWorkInProgress(\n          currentFallbackChildFragment,\n          nextFallbackChildren,\n        );\n        fallbackChildFragment.return = workInProgress;\n        primaryChildFragment.sibling = fallbackChildFragment;\n        primaryChildFragment.childExpirationTime = NoWork;\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        workInProgress.child = primaryChildFragment;\n        return fallbackChildFragment;\n      } else {\n        // No longer suspended. Switch back to showing the primary children,\n        // and remove the intermediate fragment fiber.\n        const nextPrimaryChildren = nextProps.children;\n        const currentPrimaryChild = currentPrimaryChildFragment.child;\n        const primaryChild = reconcileChildFibers(\n          workInProgress,\n          currentPrimaryChild,\n          nextPrimaryChildren,\n          renderExpirationTime,\n        );\n\n        // If this render doesn't suspend, we need to delete the fallback\n        // children. Wait until the complete phase, after we've confirmed the\n        // fallback is no longer needed.\n        // TODO: Would it be better to store the fallback fragment on\n        // the stateNode?\n\n        // Continue rendering the children, like we normally do.\n        workInProgress.memoizedState = null;\n        return (workInProgress.child = primaryChild);\n      }\n    } else {\n      // The current tree has not already timed out. That means the primary\n      // children are not wrapped in a fragment fiber.\n      const currentPrimaryChild = current.child;\n      if (nextDidTimeout) {\n        // Timed out. Wrap the children in a fragment fiber to keep them\n        // separate from the fallback children.\n        const nextFallbackChildren = nextProps.fallback;\n        const primaryChildFragment = createFiberFromFragment(\n          // It shouldn't matter what the pending props are because we aren't\n          // going to render this fragment.\n          null,\n          mode,\n          NoWork,\n          null,\n        );\n        primaryChildFragment.return = workInProgress;\n        primaryChildFragment.child = currentPrimaryChild;\n        if (currentPrimaryChild !== null) {\n          currentPrimaryChild.return = primaryChildFragment;\n        }\n\n        // Even though we're creating a new fiber, there are no new children,\n        // because we're reusing an already mounted tree. So we don't need to\n        // schedule a placement.\n        // primaryChildFragment.effectTag |= Placement;\n\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          // Outside of blocking mode, we commit the effects from the\n          // partially completed, timed-out tree, too.\n          const progressedState: SuspenseState = workInProgress.memoizedState;\n          const progressedPrimaryChild: Fiber | null =\n            progressedState !== null\n              ? (workInProgress.child: any).child\n              : (workInProgress.child: any);\n          primaryChildFragment.child = progressedPrimaryChild;\n          let progressedChild = progressedPrimaryChild;\n          while (progressedChild !== null) {\n            progressedChild.return = primaryChildFragment;\n            progressedChild = progressedChild.sibling;\n          }\n        }\n\n        // Because primaryChildFragment is a new fiber that we're inserting as the\n        // parent of a new tree, we need to set its treeBaseDuration.\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n          // treeBaseDuration is the sum of all the child tree base durations.\n          let treeBaseDuration = 0;\n          let hiddenChild = primaryChildFragment.child;\n          while (hiddenChild !== null) {\n            treeBaseDuration += hiddenChild.treeBaseDuration;\n            hiddenChild = hiddenChild.sibling;\n          }\n          primaryChildFragment.treeBaseDuration = treeBaseDuration;\n        }\n\n        // Create a fragment from the fallback children, too.\n        const fallbackChildFragment = createFiberFromFragment(\n          nextFallbackChildren,\n          mode,\n          renderExpirationTime,\n          null,\n        );\n        fallbackChildFragment.return = workInProgress;\n        primaryChildFragment.sibling = fallbackChildFragment;\n        fallbackChildFragment.effectTag |= Placement;\n        primaryChildFragment.childExpirationTime = NoWork;\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        workInProgress.child = primaryChildFragment;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        workInProgress.memoizedState = null;\n        const nextPrimaryChildren = nextProps.children;\n        return (workInProgress.child = reconcileChildFibers(\n          workInProgress,\n          currentPrimaryChild,\n          nextPrimaryChildren,\n          renderExpirationTime,\n        ));\n      }\n    }\n  }\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  // We're now not suspended nor dehydrated.\n  workInProgress.memoizedState = null;\n  // Retry with the full children.\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  // This will ensure that the children get Placement effects and\n  // that the old child gets a Deletion effect.\n  // We could also call forceUnmountCurrentAndReconcile.\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderExpirationTime: ExpirationTime,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOM.createBlockingRoot(container, { hydrate: true })' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.expirationTime = Sync;\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    let serverDisplayTime = requestCurrentTimeForUpdate();\n    // Schedule a normal pri update to render this content.\n    let newExpirationTime = computeAsyncExpiration(serverDisplayTime);\n    if (enableSchedulerTracing) {\n      markSpawnedWork(newExpirationTime);\n    }\n    workInProgress.expirationTime = newExpirationTime;\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.expirationTime = Never;\n    if (enableSchedulerTracing) {\n      markSpawnedWork(Never);\n    }\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderExpirationTime: ExpirationTime,\n): null | Fiber {\n  // We should never be hydrating at this point because it is the first pass,\n  // but after we've already committed once.\n  warnIfHydrating();\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This boundary is in a permanent fallback state. In this case, we'll never\n    // get an update and we'll never be able to hydrate the final content. Let's just try the\n    // client side render instead.\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n  // We use childExpirationTime to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = current.childExpirationTime >= renderExpirationTime;\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using an earlier expiration time, if\n    // we are rendering at lower expiration than sync.\n    if (renderExpirationTime < Sync) {\n      if (suspenseState.retryTime <= renderExpirationTime) {\n        // This render is even higher pri than we've seen before, let's try again\n        // at even higher pri.\n        let attemptHydrationAtExpirationTime = renderExpirationTime + 1;\n        suspenseState.retryTime = attemptHydrationAtExpirationTime;\n        scheduleWork(current, attemptHydrationAtExpirationTime);\n        // TODO: Early abort this render.\n      } else {\n        // We have already tried to ping at a higher priority than we're rendering with\n        // so if we got here, we must have failed to hydrate at those levels. We must\n        // now give up. Instead, we're going to delete the whole subtree and instead inject\n        // a new real Suspense boundary to take its place, which may render content\n        // or fallback. This might suspend for a while and if it does we might still have\n        // an opportunity to hydrate before this pass commits.\n      }\n    }\n    // If we have scheduled higher pri work above, this will probably just abort the render\n    // since we now have higher priority work, but in case it doesn't, we need to prepare to\n    // render something, if we time out. Even if that requires us to delete everything and\n    // skip hydration.\n    // Delay having to do this as long as the suspense timeout allows us.\n    renderDidSuspendDelayIfPossible();\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  } else if (isSuspenseInstancePending(suspenseInstance)) {\n    // This component is still pending more data from the server, so we can't hydrate its\n    // content. We treat it as if this component suspended itself. It might seem as if\n    // we could just try to render it client-side instead. However, this will perform a\n    // lot of unnecessary work and is unlikely to complete since it often will suspend\n    // on missing data anyway. Additionally, the server might be able to render more\n    // than we can on the client yet. In that case we'd end up with more fallback states\n    // on the client than if we just leave it alone. If the server times out or errors\n    // these should update this boundary to the permanent Fallback state instead.\n    // Mark it as having captured (i.e. suspended).\n    workInProgress.effectTag |= DidCapture;\n    // Leave the child in place. I.e. the dehydrated fragment.\n    workInProgress.child = current.child;\n    // Register a callback to retry this boundary once the server has sent the result.\n    registerSuspenseInstanceRetry(\n      suspenseInstance,\n      retryDehydratedSuspenseBoundary.bind(null, current),\n    );\n    return null;\n  } else {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(\n      workInProgress,\n      suspenseInstance,\n    );\n    const nextProps = workInProgress.pendingProps;\n    const nextChildren = nextProps.children;\n    const child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.effectTag |= Hydrating;\n      node = node.sibling;\n    }\n    workInProgress.child = child;\n    return workInProgress.child;\n  }\n}\n\nfunction scheduleWorkOnFiber(\n  fiber: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (fiber.expirationTime < renderExpirationTime) {\n    fiber.expirationTime = renderExpirationTime;\n  }\n  let alternate = fiber.alternate;\n  if (alternate !== null && alternate.expirationTime < renderExpirationTime) {\n    alternate.expirationTime = renderExpirationTime;\n  }\n  scheduleWorkOnParentPath(fiber.return, renderExpirationTime);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderExpirationTime: ExpirationTime,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderExpirationTime);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderExpirationTime);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    let currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    let isArray = Array.isArray(childSlot);\n    let isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isArray || isIterable) {\n      let type = isArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        let iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n  lastEffectBeforeRendering: null | Fiber,\n): void {\n  let renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailExpiration: 0,\n      tailMode: tailMode,\n      lastEffect: lastEffectBeforeRendering,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailExpiration = 0;\n    renderState.tailMode = tailMode;\n    renderState.lastEffect = lastEffectBeforeRendering;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderExpirationTime);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.effectTag |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.effectTag & DidCapture) !== NoEffect;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderExpirationTime,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    // Outside of blocking mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        let lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          let currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          let nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n  }\n  return workInProgress.child;\n}\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(\n        providerPropTypes,\n        newProps,\n        'prop',\n        'Context.Provider',\n        getCurrentFiberStackInDev,\n      );\n    }\n  }\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (\n        oldProps.children === newProps.children &&\n        !hasLegacyContextChanged()\n      ) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(\n        workInProgress,\n        context,\n        changedBits,\n        renderExpirationTime,\n      );\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction updateFundamentalComponent(\n  current,\n  workInProgress,\n  renderExpirationTime,\n) {\n  const fundamentalImpl = workInProgress.type.impl;\n  if (fundamentalImpl.reconcileChildren === false) {\n    return null;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderExpirationTime) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): Fiber | null {\n  cancelWorkTimer(workInProgress);\n\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  const updateExpirationTime = workInProgress.expirationTime;\n  if (updateExpirationTime !== NoWork) {\n    markUnprocessedUpdateTime(updateExpirationTime);\n  }\n\n  // Check if the children have any pending work.\n  const childExpirationTime = workInProgress.childExpirationTime;\n  if (childExpirationTime < renderExpirationTime) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = current;\n      returnFiber.lastEffect = current;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = current;\n    }\n    current.nextEffect = null;\n    current.effectTag = Deletion;\n\n    newWorkInProgress.effectTag |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\n// 从父到子, 构建 Fiber 节点对象\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): Fiber | null {\n  // 1073741823\n  const updateExpirationTime = workInProgress.expirationTime;\n\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.expirationTime,\n        ),\n      );\n    }\n  }\n  // 判断是否有旧的 Fiber 对象\n  // 初始渲染时 只有 rootFiber 节点存在 current\n  if (current !== null) {\n    // 获取旧的 props 对象\n    const oldProps = current.memoizedProps;\n    // 获取新的 props 对象\n    const newProps = workInProgress.pendingProps;\n    // 初始渲染时 false\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n      // 初始渲染时 false 两个值相同\n    } else if (updateExpirationTime < renderExpirationTime) {\n      // 初始渲染时 false\n      // 可以直接复用前一次更新的子Fiber, 不需要新建子Fiber\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          if (\n            workInProgress.mode & ConcurrentMode &&\n            renderExpirationTime !== Never &&\n            shouldDeprioritizeSubtree(workInProgress.type, newProps)\n          ) {\n            if (enableSchedulerTracing) {\n              markSpawnedWork(Never);\n            }\n            // Schedule this fiber to re-render at offscreen priority. Then bailout.\n            workInProgress.expirationTime = workInProgress.childExpirationTime = Never;\n            return null;\n          }\n          break;\n        case ClassComponent: {\n          const Component = workInProgress.type;\n          if (isLegacyContextProvider(Component)) {\n            pushLegacyContextProvider(workInProgress);\n          }\n          break;\n        }\n        case HostPortal:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo,\n          );\n          break;\n        case ContextProvider: {\n          const newValue = workInProgress.memoizedProps.value;\n          pushProvider(workInProgress, newValue);\n          break;\n        }\n        case Profiler:\n          if (enableProfilerTimer) {\n            // Profiler should only call onRender when one of its descendants actually rendered.\n            const hasChildWork =\n              workInProgress.childExpirationTime >= renderExpirationTime;\n            if (hasChildWork) {\n              workInProgress.effectTag |= Update;\n            }\n          }\n          break;\n        case SuspenseComponent: {\n          const state: SuspenseState | null = workInProgress.memoizedState;\n          if (state !== null) {\n            if (enableSuspenseServerRenderer) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(\n                  workInProgress,\n                  setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n                );\n                // We know that this component will suspend again because if it has\n                // been unsuspended it has committed as a resolved Suspense component.\n                // If it needs to be retried, it should have work scheduled on it.\n                workInProgress.effectTag |= DidCapture;\n                break;\n              }\n            }\n\n            // If this boundary is currently timed out, we need to decide\n            // whether to retry the primary children, or to skip over it and\n            // go straight to the fallback. Check the priority of the primary\n            // child fragment.\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            const primaryChildExpirationTime =\n              primaryChildFragment.childExpirationTime;\n            if (\n              primaryChildExpirationTime !== NoWork &&\n              primaryChildExpirationTime >= renderExpirationTime\n            ) {\n              // The primary children have pending work. Use the normal path\n              // to attempt to render the primary children again.\n              return updateSuspenseComponent(\n                current,\n                workInProgress,\n                renderExpirationTime,\n              );\n            } else {\n              pushSuspenseContext(\n                workInProgress,\n                setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n              );\n              // The primary children do not have pending work with sufficient\n              // priority. Bailout.\n              const child = bailoutOnAlreadyFinishedWork(\n                current,\n                workInProgress,\n                renderExpirationTime,\n              );\n              if (child !== null) {\n                // The fallback children have pending work. Skip over the\n                // primary children and work on the fallback.\n                return child.sibling;\n              } else {\n                return null;\n              }\n            }\n          } else {\n            pushSuspenseContext(\n              workInProgress,\n              setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n            );\n          }\n          break;\n        }\n        case SuspenseListComponent: {\n          const didSuspendBefore =\n            (current.effectTag & DidCapture) !== NoEffect;\n\n          const hasChildWork =\n            workInProgress.childExpirationTime >= renderExpirationTime;\n\n          if (didSuspendBefore) {\n            if (hasChildWork) {\n              // If something was in fallback state last time, and we have all the\n              // same children then we're still in progressive loading state.\n              // Something might get unblocked by state updates or retries in the\n              // tree which will affect the tail. So we need to use the normal\n              // path to compute the correct tail.\n              return updateSuspenseListComponent(\n                current,\n                workInProgress,\n                renderExpirationTime,\n              );\n            }\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            workInProgress.effectTag |= DidCapture;\n          }\n\n          // If nothing suspended before and we're rendering the same children,\n          // then the tail doesn't matter. Anything new that suspends will work\n          // in the \"together\" mode, so we can continue from the state we had.\n          let renderState = workInProgress.memoizedState;\n          if (renderState !== null) {\n            // Reset to the \"together\" mode in case we've started a different\n            // update in the past but didn't complete it.\n            renderState.rendering = null;\n            renderState.tail = null;\n          }\n          pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n          if (hasChildWork) {\n            break;\n          } else {\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            return null;\n          }\n        }\n      }\n      // 复用 current\n      return bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    } else {\n      // An update was scheduled on this fiber, but there are no new props\n      // nor legacy context. Set this to false. If an update queue or context\n      // consumer produces a changed value, it will set this to true. Otherwise,\n      // the component will assume the children have not changed and bail out.\n      didReceiveUpdate = false;\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // NoWork 常量 值为0 清空过期时间\n  workInProgress.expirationTime = NoWork;\n  // 根据当前 Fiber 的类型决定如何构建起子级 Fiber 对象\n  // 文件位置: shared/ReactWorkTags.js\n  switch (workInProgress.tag) {\n    // 2\n    // 函数组件在第一次被渲染时使用\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        // 旧 Fiber\n        current,\n        // 新 Fiber\n        workInProgress,\n        // 新 Fiber 的 type 值 初始渲染时是App组件函数\n        workInProgress.type,\n        // 同步 整数最大值 1073741823\n        renderExpirationTime,\n      );\n    }\n    // 16\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    // 0\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    // 1\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    // 3\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderExpirationTime);\n    // 5\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderExpirationTime);\n    // 6\n    case HostText:\n      return updateHostText(current, workInProgress);\n    // 13\n    case SuspenseComponent:\n      return updateSuspenseComponent(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    // 4\n    case HostPortal:\n      return updatePortalComponent(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    // 11\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    // 7\n    case Fragment:\n      return updateFragment(current, workInProgress, renderExpirationTime);\n    // 8\n    case Mode:\n      return updateMode(current, workInProgress, renderExpirationTime);\n    // 12\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderExpirationTime);\n    // 10\n    case ContextProvider:\n      return updateContextProvider(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    // 9\n    case ContextConsumer:\n      return updateContextConsumer(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    // 14\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(type),\n              getCurrentFiberStackInDev,\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    // 15\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    // 17\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    // 19\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    }\n    // 20\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        return updateFundamentalComponent(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n      break;\n    }\n    // 21\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n      break;\n    }\n    // 22\n    case Block: {\n      if (enableBlocksAPI) {\n        const block = workInProgress.type;\n        const props = workInProgress.pendingProps;\n        return updateBlock(\n          current,\n          workInProgress,\n          block,\n          props,\n          renderExpirationTime,\n        );\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {RootTag} from 'shared/ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport {FundamentalComponent} from 'shared/ReactWorkTags';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {\n  SuspenseHydrationCallbacks,\n  SuspenseState,\n} from './ReactFiberSuspenseComponent';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from 'react-reconciler/reflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from 'shared/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext';\nimport {createFiberRoot} from './ReactFiberRoot';\nimport {injectInternals, onScheduleRoot} from './ReactFiberDevToolsHook';\nimport {\n  requestCurrentTimeForUpdate,\n  computeExpirationForFiber,\n  scheduleWork,\n  flushRoot,\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  syncUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushPassiveEffects,\n  warnIfNotScopedWithMatchingAct,\n  warnIfUnmockedScheduler,\n  IsThisRendererActing,\n} from './ReactFiberWorkLoop';\nimport {createUpdate, enqueueUpdate} from './ReactUpdateQueue';\nimport {\n  getStackByFiberInDevAndProd,\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n} from './ReactCurrentFiber';\nimport {StrictMode} from './ReactTypeOfMode';\nimport {\n  Sync,\n  ContinuousHydration,\n  computeInteractiveExpiration,\n} from './ReactFiberExpirationTime';\nimport {requestCurrentSuspenseConfig} from './ReactFiberSuspenseConfig';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading';\n\n// used by isTestEnvironment builds\nimport enqueueTask from 'shared/enqueueTask';\nimport * as Scheduler from 'scheduler';\n// end isTestEnvironment imports\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber,\n  // Used by RN in-app inspector.\n  // This API is unfortunately RN-specific.\n  // TODO: Change it to accept Fiber instead and type it properly.\n  getInspectorDataForViewTag?: (tag: number) => Object,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictMode) {\n      const componentName = getComponentName(fiber.type) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        if (fiber.mode & StrictMode) {\n          console.error(\n            '%s is deprecated in StrictMode. ' +\n              '%s was passed an instance of %s which is inside StrictMode. ' +\n              'Instead, add a ref directly to the element you want to reference. ' +\n              'Learn more about using refs safely here: ' +\n              'https://fb.me/react-strict-mode-find-node%s',\n            methodName,\n            methodName,\n            componentName,\n            getStackByFiberInDevAndProd(hostFiber),\n          );\n        } else {\n          console.error(\n            '%s is deprecated in StrictMode. ' +\n              '%s was passed an instance of %s which renders StrictMode children. ' +\n              'Instead, add a ref directly to the element you want to reference. ' +\n              'Learn more about using refs safely here: ' +\n              'https://fb.me/react-strict-mode-find-node%s',\n            methodName,\n            methodName,\n            componentName,\n            getStackByFiberInDevAndProd(hostFiber),\n          );\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): OpaqueRoot {\n  // containerInfo => <div id=\"root\"></div>\n  // tag: 0\n  // hydrate: false\n  // hydrationCallbacks: null\n  return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);\n}\n/**\n * 计算任务的过期时间\n * 再根据任务过期时间创建 Update 任务\n * 通过任务的过期时间还可以计算出任务的优先级\n */\nexport function updateContainer(\n  // element 要渲染的 ReactElement\n  element: ReactNodeList,\n  // container Fiber Root 对象\n  container: OpaqueRoot,\n  // parentComponent 父组件 初始渲染为 null\n  parentComponent: ?React$Component<any, any>,\n  // ReactElement 渲染完成执行的回调函数\n  callback: ?Function,\n): ExpirationTime {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  // container 获取 rootFiber\n  const current = container.current;\n  // 获取当前距离 react 应用初始化的时间 1073741805\n  const currentTime = requestCurrentTimeForUpdate();\n\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfUnmockedScheduler(current);\n      warnIfNotScopedWithMatchingAct(current);\n    }\n  }\n  // 异步加载设置\n  const suspenseConfig = requestCurrentSuspenseConfig();\n\n  // 计算过期时间\n  // 为防止任务因为优先级的原因一直被打断而未能执行\n  // react 会设置一个过期时间, 当时间到了过期时间的时候\n  // 如果任务还未执行的话, react 将会强制执行该任务\n  // 初始化渲染时, 任务同步执行不涉及被打断的问题\n  // 过期时间被设置成了 1073741823, 这个数值表示当前任务为同步任务\n  const expirationTime = computeExpirationForFiber(\n    currentTime,\n    current,\n    suspenseConfig,\n  );\n  // 设置FiberRoot.context, 首次执行返回一个emptyContext, 是一个 {}\n  const context = getContextForSubtree(parentComponent);\n  // 初始渲染时 Fiber Root 对象中的 context 属性值为 null\n  // 所以会进入到 if 中\n  if (container.context === null) {\n    // 初始渲染时将 context 属性值设置为 {}\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentName(ReactCurrentFiberCurrent.type) || 'Unknown',\n      );\n    }\n  }\n\n  // 创建一个待执行任务\n  const update = createUpdate(expirationTime, suspenseConfig);\n  // 将要更新的内容挂载到更新对象中的 payload 中\n  // 将要更新的组件存储在 payload 对象中, 方便后期获取\n  update.payload = {element};\n  // 判断 callback 是否存在\n  callback = callback === undefined ? null : callback;\n  // 如果 callback 存在\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    // 将 callback 挂载到 update 对象中\n    // 其实就是一层层传递 方便 ReactElement 元素渲染完成调用\n    // 回调函数执行完成后会被清除 可以在代码的后面加上 return 进行验证\n    update.callback = callback;\n  }\n  // 将 update 对象加入到当前 Fiber 的更新队列当中 (updateQueue)\n  // 待执行的任务都会被存储在 fiber.updateQueue.shared.pending 中\n  enqueueUpdate(current, update);\n  // 调度和更新 current 对象\n  scheduleWork(current, expirationTime);\n  // 返回过期时间\n  return expirationTime;\n}\n\nexport {\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  deferredUpdates,\n  syncUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushControlled,\n  flushSync,\n  flushPassiveEffects,\n  IsThisRendererActing,\n};\n\n/**\n * 获取 container 的第一个子元素的实例对象\n */\nexport function getPublicRootInstance(\n  // FiberRoot\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  // 获取 rootFiber\n  const containerFiber = container.current;\n  // 如果 rootFiber 没有子元素\n  // 指的就是 id=\"root\" 的 div 没有子元素\n  if (!containerFiber.child) {\n    // 返回 null\n    return null;\n  }\n  // 匹配子元素的类型\n  switch (containerFiber.child.tag) {\n    // 普通\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      // 返回子元素的真实 DOM 对象\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot:\n      let root: FiberRoot = fiber.stateNode;\n      if (root.hydrate) {\n        // Flush the first scheduled \"update\".\n        flushRoot(root, root.firstPendingTime);\n      }\n      break;\n    case SuspenseComponent:\n      flushSync(() => scheduleWork(fiber, Sync));\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      let retryExpTime = computeInteractiveExpiration(\n        requestCurrentTimeForUpdate(),\n      );\n      markRetryTimeIfNotHydrated(fiber, retryExpTime);\n      break;\n  }\n}\n\nfunction markRetryTimeImpl(fiber: Fiber, retryTime: ExpirationTime) {\n  let suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    if (suspenseState.retryTime < retryTime) {\n      suspenseState.retryTime = retryTime;\n    }\n  }\n}\n\n// Increases the priority of thennables when they resolve within this boundary.\nfunction markRetryTimeIfNotHydrated(fiber: Fiber, retryTime: ExpirationTime) {\n  markRetryTimeImpl(fiber, retryTime);\n  let alternate = fiber.alternate;\n  if (alternate) {\n    markRetryTimeImpl(alternate, retryTime);\n  }\n}\n\nexport function attemptUserBlockingHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  let expTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());\n  scheduleWork(fiber, expTime);\n  markRetryTimeIfNotHydrated(fiber, expTime);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  scheduleWork(fiber, ContinuousHydration);\n  markRetryTimeIfNotHydrated(fiber, ContinuousHydration);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const currentTime = requestCurrentTimeForUpdate();\n  const expTime = computeExpirationForFiber(currentTime, fiber, null);\n  scheduleWork(fiber, expTime);\n  markRetryTimeIfNotHydrated(fiber, expTime);\n}\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  if (hostFiber.tag === FundamentalComponent) {\n    return hostFiber.stateNode.instance;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldSuspendImpl = (fiber) => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet overrideHookState = null;\nlet overrideProps = null;\nlet scheduleUpdate = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    idx: number,\n    value: any,\n  ) => {\n    if (idx >= path.length) {\n      return value;\n    }\n    const key = path[idx];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    if (currentHook !== null) {\n      const newState = copyWithSet(currentHook.memoizedState, path, value);\n      currentHook.memoizedState = newState;\n      currentHook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleWork(fiber, Sync);\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleWork(fiber, Sync);\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    scheduleWork(fiber, Sync);\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: (Fiber) => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    ...devToolsConfig,\n    overrideHookState,\n    overrideProps,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n      const hostFiber = findCurrentHostFiber(fiber);\n      if (hostFiber === null) {\n        return null;\n      }\n      return hostFiber.stateNode;\n    },\n    findFiberByHostInstance(instance: Instance | TextInstance): Fiber | null {\n      if (!findFiberByHostInstance) {\n        // Might not be implemented by the renderer.\n        return null;\n      }\n      return findFiberByHostInstance(instance);\n    },\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? () => ReactCurrentFiberCurrent : null,\n  });\n}\n\nconst {IsSomeRendererActing} = ReactSharedInternals;\nconst isSchedulerMocked =\n  typeof Scheduler.unstable_flushAllWithoutAsserting === 'function';\nconst flushWork =\n  Scheduler.unstable_flushAllWithoutAsserting ||\n  function () {\n    let didFlushWork = false;\n    while (flushPassiveEffects()) {\n      didFlushWork = true;\n    }\n\n    return didFlushWork;\n  };\n\nfunction flushWorkAndMicroTasks(onDone: (err: ?Error) => void) {\n  try {\n    flushWork();\n    enqueueTask(() => {\n      if (flushWork()) {\n        flushWorkAndMicroTasks(onDone);\n      } else {\n        onDone();\n      }\n    });\n  } catch (err) {\n    onDone(err);\n  }\n}\n\n// we track the 'depth' of the act() calls with this counter,\n// so we can tell if any async act() calls try to run in parallel.\n\nlet actingUpdatesScopeDepth = 0;\nlet didWarnAboutUsingActInProd = false;\n\n// eslint-disable-next-line no-inner-declarations\nexport function act(callback: () => Thenable) {\n  if (!__DEV__) {\n    if (didWarnAboutUsingActInProd === false) {\n      didWarnAboutUsingActInProd = true;\n      // eslint-disable-next-line react-internal/no-production-logging\n      console.error(\n        'act(...) is not supported in production builds of React, and might not behave as expected.',\n      );\n    }\n  }\n\n  let previousActingUpdatesScopeDepth = actingUpdatesScopeDepth;\n  let previousIsSomeRendererActing;\n  let previousIsThisRendererActing;\n  actingUpdatesScopeDepth++;\n\n  previousIsSomeRendererActing = IsSomeRendererActing.current;\n  previousIsThisRendererActing = IsThisRendererActing.current;\n  IsSomeRendererActing.current = true;\n  IsThisRendererActing.current = true;\n\n  function onDone() {\n    actingUpdatesScopeDepth--;\n    IsSomeRendererActing.current = previousIsSomeRendererActing;\n    IsThisRendererActing.current = previousIsThisRendererActing;\n    if (__DEV__) {\n      if (actingUpdatesScopeDepth > previousActingUpdatesScopeDepth) {\n        // if it's _less than_ previousActingUpdatesScopeDepth, then we can assume the 'other' one has warned\n        console.error(\n          'You seem to have overlapping act() calls, this is not supported. ' +\n            'Be sure to await previous act() calls before making a new one. ',\n        );\n      }\n    }\n  }\n\n  let result;\n  try {\n    result = batchedUpdates(callback);\n  } catch (error) {\n    // on sync errors, we still want to 'cleanup' and decrement actingUpdatesScopeDepth\n    onDone();\n    throw error;\n  }\n\n  if (\n    result !== null &&\n    typeof result === 'object' &&\n    typeof result.then === 'function'\n  ) {\n    // setup a boolean that gets set to true only\n    // once this act() call is await-ed\n    let called = false;\n    if (__DEV__) {\n      if (typeof Promise !== 'undefined') {\n        //eslint-disable-next-line no-undef\n        Promise.resolve()\n          .then(() => {})\n          .then(() => {\n            if (called === false) {\n              console.error(\n                'You called act(async () => ...) without await. ' +\n                  'This could lead to unexpected testing behaviour, interleaving multiple act ' +\n                  'calls and mixing their scopes. You should - await act(async () => ...);',\n              );\n            }\n          });\n      }\n    }\n\n    // in the async case, the returned thenable runs the callback, flushes\n    // effects and  microtasks in a loop until flushPassiveEffects() === false,\n    // and cleans up\n    return {\n      then(resolve: () => void, reject: (?Error) => void) {\n        called = true;\n        result.then(\n          () => {\n            if (\n              actingUpdatesScopeDepth > 1 ||\n              (isSchedulerMocked === true &&\n                previousIsSomeRendererActing === true)\n            ) {\n              onDone();\n              resolve();\n              return;\n            }\n            // we're about to exit the act() scope,\n            // now's the time to flush tasks/effects\n            flushWorkAndMicroTasks((err: ?Error) => {\n              onDone();\n              if (err) {\n                reject(err);\n              } else {\n                resolve();\n              }\n            });\n          },\n          (err) => {\n            onDone();\n            reject(err);\n          },\n        );\n      },\n    };\n  } else {\n    if (__DEV__) {\n      if (result !== undefined) {\n        console.error(\n          'The callback passed to act(...) function ' +\n            'must return undefined, or a Promise. You returned %s',\n          result,\n        );\n      }\n    }\n\n    // flush effects until none remain, and cleanup\n    try {\n      if (\n        actingUpdatesScopeDepth === 1 &&\n        (isSchedulerMocked === false || previousIsSomeRendererActing === false)\n      ) {\n        // we're about to exit the act() scope,\n        // now's the time to flush effects\n        flushWork();\n      }\n      onDone();\n    } catch (err) {\n      onDone();\n      throw err;\n    }\n\n    // in the sync case, the returned thenable only warns *if* await-ed\n    return {\n      then(resolve: () => void) {\n        if (__DEV__) {\n          console.error(\n            'Do not await the result of calling act(...) with sync logic, it is not a Promise.',\n          );\n        }\n        resolve();\n      },\n    };\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {\n  ReactFundamentalComponentInstance,\n  ReactScopeInstance,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext';\n\nimport {now} from './SchedulerWithReactIntegration';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n} from 'shared/ReactWorkTags';\nimport {NoMode, BlockingMode} from './ReactTypeOfMode';\nimport {\n  Ref,\n  Update,\n  NoEffect,\n  DidCapture,\n  Deletion,\n} from 'shared/ReactSideEffectTags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  getFundamentalComponentInstance,\n  mountFundamentalComponent,\n  cloneFundamentalInstance,\n  shouldUpdateFundamentalComponent,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext';\nimport {popProvider} from './ReactFiberNewContext';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  resetHydrationState,\n} from './ReactFiberHydrationContext';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n  enableSuspenseServerRenderer,\n  enableDeprecatedFlareAPI,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport {\n  markSpawnedWork,\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n} from './ReactFiberWorkLoop';\nimport {createFundamentalStateInstance} from './ReactFiberFundamental';\nimport {Never} from './ReactFiberExpirationTime';\nimport {resetChildFibers} from './ReactChildFiber';\nimport {updateDeprecatedEventListeners} from './ReactFiberDeprecatedEvents';\nimport {createScopeMethods} from './ReactFiberScope';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.effectTag |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.effectTag |= Ref;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n  // 将所有子级追到到父级中\n  appendAllChildren = function (\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // 获取子级\n    let node = workInProgress.child;\n    // 如果子级不为空 执行循环\n    while (node !== null) {\n      // 如果 node 是普通 ReactElement 或者为文本\n      if (node.tag === HostComponent || node.tag === HostText) {\n        // 将子级追加到父级中\n        appendInitialChild(parent, node.stateNode);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        appendInitialChild(parent, node.stateNode.instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        // 如果 node 不是普通 ReactElement 又不是文本\n        // 将 node 视为组件, 组件本身不能转换为真实 DOM 元素\n        // 获取到组件的第一个子元素, 继续执行循环\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // 如果 node 和 workInProgress 是同一个节点\n      // 说明 node 已经退回到父级 终止循环\n      // 说明此时所有子级都已经追加到父级中了\n      if (node === workInProgress) {\n        return;\n      }\n      // 处理子级节点的兄弟节点\n      while (node.sibling === null) {\n        // 如果节点没有父级或者节点的父级是自己, 退出循环\n        // 说明此时所有子级都已经追加到父级中了\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        // 更新 node\n        node = node.return;\n      }\n      // 更新父级 方便回退\n      node.sibling.return = node.return;\n      // 将 node 更新为下一个兄弟节点\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function (workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function (\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function (\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function (\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.effectTag & Update) !== NoEffect) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildren(\n                  parent,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function (\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.effectTag & Update) !== NoEffect) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildrenToContainer(\n                  containerChildSet,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function (workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      let newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function (\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    let newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function (\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function (workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function (\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function (\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): Fiber | null {\n  // 获取待更新 props\n  const newProps = workInProgress.pendingProps;\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    // 0\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    // 3\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        let wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        }\n      }\n      updateHostContainer(workInProgress);\n      return null;\n    }\n    // 5\n    case HostComponent: {\n      popHostContext(workInProgress);\n      // 获取 rootDOM 节点 <div id=\"root\"></div>\n      const rootContainerInstance = getRootHostContainer();\n      // 节点的具体的类型 div span ...\n      const type = workInProgress.type;\n      // 初始渲染不执行 current = null\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n        if (enableDeprecatedFlareAPI) {\n          const prevListeners = current.memoizedProps.DEPRECATED_flareListeners;\n          const nextListeners = newProps.DEPRECATED_flareListeners;\n          if (prevListeners !== nextListeners) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        let wasHydrated = popHydrationState(workInProgress);\n        // 服务器渲染相关 初始渲染为不执行\n        // false\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n          if (enableDeprecatedFlareAPI) {\n            const listeners = newProps.DEPRECATED_flareListeners;\n            if (listeners != null) {\n              updateDeprecatedEventListeners(\n                listeners,\n                workInProgress,\n                rootContainerInstance,\n              );\n            }\n          }\n        } else {\n          // 创建节点实例对象 <div></div> <span></span>\n          let instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n          /**\n           * 将所有的子级追加到父级中\n           * instance 为父级\n           * workInProgress.child 为子级\n           */\n          appendAllChildren(instance, workInProgress, false, false);\n\n          // 为 Fiber 对象添加 stateNode 属性\n          workInProgress.stateNode = instance;\n          // 初始渲染不执行\n          // false\n          if (enableDeprecatedFlareAPI) {\n            const listeners = newProps.DEPRECATED_flareListeners;\n            if (listeners != null) {\n              updateDeprecatedEventListeners(\n                listeners,\n                workInProgress,\n                rootContainerInstance,\n              );\n            }\n          }\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          // 初始渲染不执行\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n        // 处理 ref DOM 引用\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      return null;\n    }\n    // 6\n    case HostText: {\n      let newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        let wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      if (enableSuspenseServerRenderer) {\n        if (nextState !== null && nextState.dehydrated !== null) {\n          if (current === null) {\n            let wasHydrated = popHydrationState(workInProgress);\n            invariant(\n              wasHydrated,\n              'A dehydrated suspense component was completed without a hydrated node. ' +\n                'This is probably a bug in React.',\n            );\n            prepareToHydrateHostSuspenseInstance(workInProgress);\n            if (enableSchedulerTracing) {\n              markSpawnedWork(Never);\n            }\n            return null;\n          } else {\n            // We should never have been in a hydration state if we didn't have a current.\n            // However, in some of those paths, we might have reentered a hydration state\n            // and then we might be inside a hydration state. In that case, we'll need to exit out of it.\n            resetHydrationState();\n            if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n              // This boundary did not suspend so it's now hydrated and unsuspended.\n              workInProgress.memoizedState = null;\n            }\n            // If nothing suspended, we need to schedule an effect to mark this boundary\n            // as having hydrated so events know that they're free to be invoked.\n            // It's also a signal to replay events and the suspense callback.\n            // If something suspended, schedule an effect to attach retry listeners.\n            // So we might as well always mark this.\n            workInProgress.effectTag |= Update;\n            return null;\n          }\n        }\n      }\n\n      if ((workInProgress.effectTag & DidCapture) !== NoEffect) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.expirationTime = renderExpirationTime;\n        // Do not reset the effect list.\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      let prevDidTimeout = false;\n      if (current === null) {\n        if (workInProgress.memoizedProps.fallback !== undefined) {\n          popHydrationState(workInProgress);\n        }\n      } else {\n        const prevState: null | SuspenseState = current.memoizedState;\n        prevDidTimeout = prevState !== null;\n        if (!nextDidTimeout && prevState !== null) {\n          // We just switched from the fallback to the normal children.\n          // Delete the fallback.\n          // TODO: Would it be better to store the fallback fragment on\n          // the stateNode during the begin phase?\n          const currentFallbackChild: Fiber | null = (current.child: any)\n            .sibling;\n          if (currentFallbackChild !== null) {\n            // Deletions go at the beginning of the return fiber's effect list\n            const first = workInProgress.firstEffect;\n            if (first !== null) {\n              workInProgress.firstEffect = currentFallbackChild;\n              currentFallbackChild.nextEffect = first;\n            } else {\n              workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;\n              currentFallbackChild.nextEffect = null;\n            }\n            currentFallbackChild.effectTag = Deletion;\n          }\n        }\n      }\n\n      if (nextDidTimeout && !prevDidTimeout) {\n        // If this subtreee is running in blocking mode we can suspend,\n        // otherwise we won't suspend.\n        // TODO: This will still suspend a synchronous tree if anything\n        // in the concurrent tree already suspended during this render.\n        // This is a known bug.\n        if ((workInProgress.mode & BlockingMode) !== NoMode) {\n          // TODO: Move this back to throwException because this is too late\n          // if this is a large tree which is common for initial loads. We\n          // don't know if we should restart a render or not until we get\n          // this marker, and this is too late.\n          // If this render already had a ping or lower pri updates,\n          // and this is the first time we know we're going to suspend we\n          // should be able to immediately restart from within throwException.\n          const hasInvisibleChildContext =\n            current === null &&\n            workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n          if (\n            hasInvisibleChildContext ||\n            hasSuspenseContext(\n              suspenseStackCursor.current,\n              (InvisibleParentSuspenseContext: SuspenseContext),\n            )\n          ) {\n            // If this was in an invisible tree or a new render, then showing\n            // this boundary is ok.\n            renderDidSuspend();\n          } else {\n            // Otherwise, we're going to have to hide content so we should\n            // suspend for longer if possible.\n            renderDidSuspendDelayIfPossible();\n          }\n        }\n      }\n\n      if (supportsPersistence) {\n        // TODO: Only schedule updates if not prevDidTimeout.\n        if (nextDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children.\n          workInProgress.effectTag |= Update;\n        }\n      }\n      if (supportsMutation) {\n        // TODO: Only schedule updates if these values are non equal, i.e. it changed.\n        if (nextDidTimeout || prevDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children. In mutation mode, we also need the flag to\n          // *unhide* children that were previously hidden, so check if this\n          // is currently timed out, too.\n          workInProgress.effectTag |= Update;\n        }\n      }\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        workInProgress.effectTag |= Update;\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        return null;\n      }\n\n      let didSuspendAlready =\n        (workInProgress.effectTag & DidCapture) !== NoEffect;\n\n      let renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          let cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.effectTag & DidCapture) === NoEffect);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              let suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.effectTag |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thennables. Instead, we'll transfer its thennables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                let newThennables = suspended.updateQueue;\n                if (newThennables !== null) {\n                  workInProgress.updateQueue = newThennables;\n                  workInProgress.effectTag |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect list before doing the second pass since that's now invalid.\n                if (renderState.lastEffect === null) {\n                  workInProgress.firstEffect = null;\n                }\n                workInProgress.lastEffect = renderState.lastEffect;\n                // Reset the child fibers to their original state.\n                resetChildFibers(workInProgress, renderExpirationTime);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          let suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.effectTag |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            let newThennables = suspended.updateQueue;\n            if (newThennables !== null) {\n              workInProgress.updateQueue = newThennables;\n              workInProgress.effectTag |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate\n            ) {\n              // We need to delete the row we just rendered.\n              // Reset the effect list to what it was before we rendered this\n              // child. The nested children have already appended themselves.\n              let lastEffect = (workInProgress.lastEffect =\n                renderState.lastEffect);\n              // Remove any effects that were appended after this point.\n              if (lastEffect !== null) {\n                lastEffect.nextEffect = null;\n              }\n              // We're done.\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than time until\n            // the expiration.\n            now() * 2 - renderState.renderingStartTime >\n              renderState.tailExpiration &&\n            renderExpirationTime > Never\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.effectTag |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. If we can show\n            // them, then they really have the same priority as this render.\n            // So we'll pick it back up the very next render pass once we've had\n            // an opportunity to yield for paint.\n\n            const nextPriority = renderExpirationTime - 1;\n            workInProgress.expirationTime = workInProgress.childExpirationTime = nextPriority;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(nextPriority);\n            }\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          let previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        if (renderState.tailExpiration === 0) {\n          // Heuristic for how long we're willing to spend rendering rows\n          // until we just give up and show what we have so far.\n          const TAIL_EXPIRATION_TIMEOUT_MS = 500;\n          renderState.tailExpiration = now() + TAIL_EXPIRATION_TIMEOUT_MS;\n          // TODO: This is meant to mimic the train model or JND but this\n          // is a per component value. It should really be since the start\n          // of the total render or last commit. Consider using something like\n          // globalMostRecentFallbackTime. That doesn't account for being\n          // suspended for part of the time or when it's a new render.\n          // It should probably use a global start time value instead.\n        }\n        // Pop a row.\n        let next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.lastEffect = workInProgress.lastEffect;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        return next;\n      }\n      return null;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalImpl = workInProgress.type.impl;\n        let fundamentalInstance: ReactFundamentalComponentInstance<\n          any,\n          any,\n        > | null = workInProgress.stateNode;\n\n        if (fundamentalInstance === null) {\n          const getInitialState = fundamentalImpl.getInitialState;\n          let fundamentalState;\n          if (getInitialState !== undefined) {\n            fundamentalState = getInitialState(newProps);\n          }\n          fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(\n            workInProgress,\n            newProps,\n            fundamentalImpl,\n            fundamentalState || {},\n          );\n          const instance = ((getFundamentalComponentInstance(\n            fundamentalInstance,\n          ): any): Instance);\n          fundamentalInstance.instance = instance;\n          if (fundamentalImpl.reconcileChildren === false) {\n            return null;\n          }\n          appendAllChildren(instance, workInProgress, false, false);\n          mountFundamentalComponent(fundamentalInstance);\n        } else {\n          // We fire update in commit phase\n          const prevProps = fundamentalInstance.props;\n          fundamentalInstance.prevProps = prevProps;\n          fundamentalInstance.props = newProps;\n          fundamentalInstance.currentFiber = workInProgress;\n          if (supportsPersistence) {\n            const instance = cloneFundamentalInstance(fundamentalInstance);\n            fundamentalInstance.instance = instance;\n            appendAllChildren(instance, workInProgress, false, false);\n          }\n          const shouldUpdate = shouldUpdateFundamentalComponent(\n            fundamentalInstance,\n          );\n          if (shouldUpdate) {\n            markUpdate(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const type = workInProgress.type;\n          const scopeInstance: ReactScopeInstance = {\n            fiber: workInProgress,\n            methods: null,\n          };\n          workInProgress.stateNode = scopeInstance;\n          scopeInstance.methods = createScopeMethods(type, scopeInstance);\n          if (enableDeprecatedFlareAPI) {\n            const listeners = newProps.DEPRECATED_flareListeners;\n            if (listeners != null) {\n              const rootContainerInstance = getRootHostContainer();\n              updateDeprecatedEventListeners(\n                listeners,\n                workInProgress,\n                rootContainerInstance,\n              );\n            }\n          }\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (enableDeprecatedFlareAPI) {\n            const prevListeners =\n              current.memoizedProps.DEPRECATED_flareListeners;\n            const nextListeners = newProps.DEPRECATED_flareListeners;\n            if (\n              prevListeners !== nextListeners ||\n              workInProgress.ref !== null\n            ) {\n              markUpdate(workInProgress);\n            }\n          } else {\n            if (workInProgress.ref !== null) {\n              markUpdate(workInProgress);\n            }\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case Block:\n      if (enableBlocksAPI) {\n        return null;\n      }\n      break;\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\n\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n} from 'shared/ReactWorkTags';\nimport {DidCapture, NoEffect, ShouldCapture} from 'shared/ReactSideEffectTags';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext';\nimport {resetHydrationState} from './ReactFiberHydrationContext';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext';\nimport {popProvider} from './ReactFiberNewContext';\n\nimport invariant from 'shared/invariant';\n\nfunction unwindWork(\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const effectTag = workInProgress.effectTag;\n      if (effectTag & ShouldCapture) {\n        workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      const effectTag = workInProgress.effectTag;\n      invariant(\n        (effectTag & DidCapture) === NoEffect,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          invariant(\n            workInProgress.alternate !== null,\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n          resetHydrationState();\n        }\n      }\n      const effectTag = workInProgress.effectTag;\n      if (effectTag & ShouldCapture) {\n        workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n|};\n\nexport type CapturedError = {|\n  componentName: ?string,\n  componentStack: string,\n  error: mixed,\n  errorBoundary: ?Object,\n  errorBoundaryFound: boolean,\n  errorBoundaryName: string | null,\n  willRetry: boolean,\n|};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {CapturedValue, CapturedError} from './ReactCapturedValue';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks';\nimport type {Thenable} from './ReactFiberWorkLoop';\nimport type {ReactPriorityLevel} from './SchedulerWithReactIntegration';\n\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {\n  deferPassiveEffectCleanupDuringUnmount,\n  enableSchedulerTracing,\n  enableProfilerTimer,\n  enableSuspenseServerRenderer,\n  enableDeprecatedFlareAPI,\n  enableFundamentalAPI,\n  enableSuspenseCallback,\n  enableScopeAPI,\n  runAllPassiveEffectDestroysBeforeCreates,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n} from 'shared/ReactWorkTags';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  NoEffect,\n  ContentReset,\n  Placement,\n  Snapshot,\n  Update,\n  Passive,\n} from 'shared/ReactSideEffectTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\n\nimport {onCommitUnmount} from './ReactFiberDevToolsHook';\nimport {startPhaseTimer, stopPhaseTimer} from './ReactDebugFiberPerf';\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent';\nimport {getCommitTime} from './ReactProfilerTimer';\nimport {commitUpdateQueue} from './ReactUpdateQueue';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  unmountFundamentalComponent,\n  updateFundamentalComponent,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  beforeRemoveInstance,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryThenable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveHookEffectMount,\n  enqueuePendingPassiveHookEffectUnmount,\n} from './ReactFiberWorkLoop';\nimport {\n  NoEffect as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork';\nimport {runWithPriority, NormalPriority} from './SchedulerWithReactIntegration';\nimport {\n  updateDeprecatedEventListeners,\n  unmountDeprecatedResponderListeners,\n} from './ReactFiberDeprecatedEvents';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nexport function logError(boundary: Fiber, errorInfo: CapturedValue<mixed>) {\n  const source = errorInfo.source;\n  let stack = errorInfo.stack;\n  if (stack === null && source !== null) {\n    stack = getStackByFiberInDevAndProd(source);\n  }\n\n  const capturedError: CapturedError = {\n    componentName: source !== null ? getComponentName(source.type) : null,\n    componentStack: stack !== null ? stack : '',\n    error: errorInfo.value,\n    errorBoundary: null,\n    errorBoundaryName: null,\n    errorBoundaryFound: false,\n    willRetry: false,\n  };\n\n  if (boundary !== null && boundary.tag === ClassComponent) {\n    capturedError.errorBoundary = boundary.stateNode;\n    capturedError.errorBoundaryName = getComponentName(boundary.type);\n    capturedError.errorBoundaryFound = true;\n    capturedError.willRetry = true;\n  }\n\n  try {\n    logCapturedError(capturedError);\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n\nconst callComponentWillUnmountWithTimer = function (current, instance) {\n  startPhaseTimer(current, 'componentWillUnmount');\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  instance.componentWillUnmount();\n  stopPhaseTimer();\n};\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current, instance) {\n  if (__DEV__) {\n    invokeGuardedCallback(\n      null,\n      callComponentWillUnmountWithTimer,\n      null,\n      current,\n      instance,\n    );\n    if (hasCaughtError()) {\n      const unmountError = clearCaughtError();\n      captureCommitPhaseError(current, unmountError);\n    }\n  } else {\n    try {\n      callComponentWillUnmountWithTimer(current, instance);\n    } catch (unmountError) {\n      captureCommitPhaseError(current, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current: Fiber) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      if (__DEV__) {\n        invokeGuardedCallback(null, ref, null, null);\n        if (hasCaughtError()) {\n          const refError = clearCaughtError();\n          captureCommitPhaseError(current, refError);\n        }\n      } else {\n        try {\n          ref(null);\n        } catch (refError) {\n          captureCommitPhaseError(current, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, destroy) {\n  if (__DEV__) {\n    invokeGuardedCallback(null, destroy, null);\n    if (hasCaughtError()) {\n      const error = clearCaughtError();\n      captureCommitPhaseError(current, error);\n    }\n  } else {\n    try {\n      destroy();\n    } catch (error) {\n      captureCommitPhaseError(current, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      return;\n    }\n    // 如果该 fiber 类型是 ClassComponent\n    case ClassComponent: {\n      if (finishedWork.effectTag & Snapshot) {\n        if (current !== null) {\n          // 旧的 props\n          const prevProps = current.memoizedProps;\n          // 旧的 state\n          const prevState = current.memoizedState;\n          startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');\n          // 获取 classComponent 组件的实例对象\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          // 执行 getSnapshotBeforeUpdate 生命周期函数\n          // 在组件更新前捕获一些 DOM 信息\n          // 返回自定义的值或 null, 统称为 snapshot\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentName(finishedWork.type),\n              );\n            }\n          }\n          // 将 snapshot 赋值到 __reactInternalSnapshotBeforeUpdate 属性上\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n          stopPhaseTimer();\n        }\n      }\n      return;\n    }\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitHookEffectListUnmount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  let lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  let lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s%s',\n              addendum,\n              getStackByFiberInDevAndProd(finishedWork),\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction schedulePassiveEffects(finishedWork: Fiber) {\n  if (runAllPassiveEffectDestroysBeforeCreates) {\n    const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n    let lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n    if (lastEffect !== null) {\n      const firstEffect = lastEffect.next;\n      let effect = firstEffect;\n      do {\n        const {next, tag} = effect;\n        if (\n          (tag & HookPassive) !== NoHookEffect &&\n          (tag & HookHasEffect) !== NoHookEffect\n        ) {\n          enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);\n          enqueuePendingPassiveHookEffectMount(finishedWork, effect);\n        }\n        effect = next;\n      } while (effect !== firstEffect);\n    }\n  }\n}\n\nexport function commitPassiveHookEffects(finishedWork: Fiber): void {\n  if ((finishedWork.effectTag & Passive) !== NoEffect) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n      case Block: {\n        // TODO (#17945) We should call all passive destroy functions (for all fibers)\n        // before calling any create functions. The current approach only serializes\n        // these for a single fiber.\n        commitHookEffectListUnmount(HookPassive | HookHasEffect, finishedWork);\n        commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n}\n\nfunction commitLifeCycles(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedExpirationTime: ExpirationTime,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      // At this point layout effects have already been destroyed (during mutation phase).\n      // This is done to prevent sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n\n      if (runAllPassiveEffectDestroysBeforeCreates) {\n        schedulePassiveEffects(finishedWork);\n      }\n      return;\n    }\n    case ClassComponent: {\n      const instance = finishedWork.stateNode;\n      if (finishedWork.effectTag & Update) {\n        if (current === null) {\n          startPhaseTimer(finishedWork, 'componentDidMount');\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          instance.componentDidMount();\n          stopPhaseTimer();\n        } else {\n          const prevProps =\n            finishedWork.elementType === finishedWork.type\n              ? current.memoizedProps\n              : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n          const prevState = current.memoizedState;\n          startPhaseTimer(finishedWork, 'componentDidUpdate');\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          instance.componentDidUpdate(\n            prevProps,\n            prevState,\n            instance.__reactInternalSnapshotBeforeUpdate,\n          );\n          stopPhaseTimer();\n        }\n      }\n      const updateQueue = finishedWork.updateQueue;\n      if (updateQueue !== null) {\n        if (__DEV__) {\n          if (\n            finishedWork.type === finishedWork.elementType &&\n            !didWarnAboutReassigningProps\n          ) {\n            if (instance.props !== finishedWork.memoizedProps) {\n              console.error(\n                'Expected %s props to match memoized props before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n            if (instance.state !== finishedWork.memoizedState) {\n              console.error(\n                'Expected %s state to match memoized state before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n        }\n        // We could update instance props and state here,\n        // but instead we rely on them being set during last render.\n        // TODO: revisit this when we implement resuming.\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostRoot: {\n      const updateQueue = finishedWork.updateQueue;\n      if (updateQueue !== null) {\n        let instance = null;\n        if (finishedWork.child !== null) {\n          switch (finishedWork.child.tag) {\n            case HostComponent:\n              instance = getPublicInstance(finishedWork.child.stateNode);\n              break;\n            case ClassComponent:\n              instance = finishedWork.child.stateNode;\n              break;\n          }\n        }\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n\n      // Renderers may schedule work to be done after host components are mounted\n      // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n      // These effects should only be committed when components are first mounted,\n      // aka when there is no current/alternate.\n      if (current === null && finishedWork.effectTag & Update) {\n        const type = finishedWork.type;\n        const props = finishedWork.memoizedProps;\n        commitMount(instance, type, props, finishedWork);\n      }\n\n      return;\n    }\n    case HostText: {\n      // We have no life-cycles associated with text.\n      return;\n    }\n    case HostPortal: {\n      // We have no life-cycles associated with portals.\n      return;\n    }\n    case Profiler: {\n      if (enableProfilerTimer) {\n        const onRender = finishedWork.memoizedProps.onRender;\n\n        if (typeof onRender === 'function') {\n          if (enableSchedulerTracing) {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              getCommitTime(),\n              finishedRoot.memoizedInteractions,\n            );\n          } else {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              getCommitTime(),\n            );\n          }\n        }\n      }\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      return;\n    }\n    case SuspenseListComponent:\n    case IncompleteClassComponent:\n    case FundamentalComponent:\n    case ScopeComponent:\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideTextInstance(instance);\n        } else {\n          unhideTextInstance(instance, node.memoizedProps);\n        }\n      } else if (\n        node.tag === SuspenseComponent &&\n        node.memoizedState !== null &&\n        node.memoizedState.dehydrated === null\n      ) {\n        // Found a nested Suspense component that timed out. Skip over the\n        // primary child fragment, which should remain hidden.\n        const fallbackChildFragment: Fiber = (node.child: any).sibling;\n        fallbackChildFragment.return = node;\n        node = fallbackChildFragment;\n        continue;\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance.methods;\n    }\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().%s',\n            getComponentName(finishedWork.type),\n            getStackByFiberInDevAndProd(finishedWork),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n\n          if (\n            deferPassiveEffectCleanupDuringUnmount &&\n            runAllPassiveEffectDestroysBeforeCreates\n          ) {\n            let effect = firstEffect;\n            do {\n              const {destroy, tag} = effect;\n              if (destroy !== undefined) {\n                if ((tag & HookPassive) !== NoHookEffect) {\n                  enqueuePendingPassiveHookEffectUnmount(current, effect);\n                } else {\n                  safelyCallDestroy(current, destroy);\n                }\n              }\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          } else {\n            // When the owner fiber is deleted, the destroy function of a passive\n            // effect hook is called during the synchronous commit phase. This is\n            // a concession to implementation complexity. Calling it in the\n            // passive effect phase (like they usually are, when dependencies\n            // change during an update) would require either traversing the\n            // children of the deleted fiber again, or including unmount effects\n            // as part of the fiber effect list.\n            //\n            // Because this is during the sync commit phase, we need to change\n            // the priority.\n            //\n            // TODO: Reconsider this implementation trade off.\n            const priorityLevel =\n              renderPriorityLevel > NormalPriority\n                ? NormalPriority\n                : renderPriorityLevel;\n            runWithPriority(priorityLevel, () => {\n              let effect = firstEffect;\n              do {\n                const destroy = effect.destroy;\n                if (destroy !== undefined) {\n                  safelyCallDestroy(current, destroy);\n                }\n                effect = effect.next;\n              } while (effect !== firstEffect);\n            });\n          }\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(current, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      if (enableDeprecatedFlareAPI) {\n        unmountDeprecatedResponderListeners(current);\n        beforeRemoveInstance(current.stateNode);\n      }\n      safelyDetachRef(current);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = current.stateNode;\n        if (fundamentalInstance !== null) {\n          unmountFundamentalComponent(fundamentalInstance);\n          current.stateNode = null;\n        }\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((current.stateNode: SuspenseInstance));\n          }\n        }\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableDeprecatedFlareAPI) {\n        unmountDeprecatedResponderListeners(current);\n      }\n      if (enableScopeAPI) {\n        safelyDetachRef(current);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(\n  finishedRoot: FiberRoot,\n  root: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(finishedRoot, node, renderPriorityLevel);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiber(current: Fiber) {\n  const alternate = current.alternate;\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  current.return = null;\n  current.child = null;\n  current.memoizedState = null;\n  current.updateQueue = null;\n  current.dependencies = null;\n  current.alternate = null;\n  current.firstEffect = null;\n  current.lastEffect = null;\n  current.pendingProps = null;\n  current.memoizedProps = null;\n  current.stateNode = null;\n  if (alternate !== null) {\n    detachFiber(alternate);\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n    case HostComponent:\n    case HostText:\n    case FundamentalComponent: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n        ...\n      } = finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\n// 获取 HostRootFiber 对象\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  // 获取当前 Fiber 父级\n  let parent = fiber.return;\n  // 查看父级是否为 null\n  while (parent !== null) {\n    // 查看父级是否为 hostRoot\n    if (isHostParent(parent)) {\n      // 返回\n      return parent;\n    }\n    // 继续向上查找\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n// 获取非组件父级\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.effectTag & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.effectTag & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n// 挂载 DOM 元素\nfunction commitPlacement(finishedWork: Fiber): void {\n  // finishedWork 初始化渲染时为根组件 Fiber 对象\n\n  if (!supportsMutation) {\n    return;\n  }\n  // 获取非组件父级 Fiber 对象\n  // 初始渲染时为 <div id=\"root\"></div>\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // 存储真正的父级 DOM 节点对象\n  let parent;\n  let isContainer;\n  // 获取父级 DOM 节点对象\n  // 但是初始渲染时 rootFiber 对象中的 stateNode 存储的是 FiberRoot\n  const parentStateNode = parentFiber.stateNode;\n  // 判断父节点的类型\n  // 初始渲染时是 hostRoot 3\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      // 获取真正的 DOM 节点对象\n      // <div id=\"root\"></div>\n      parent = parentStateNode.containerInfo;\n      // 是 container 容器\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case FundamentalComponent:\n      if (enableFundamentalAPI) {\n        parent = parentStateNode.instance;\n        isContainer = false;\n      }\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  // 如果父节点是文本节点的话\n  if (parentFiber.effectTag & ContentReset) {\n    // 在进行任何插入操作前, 需要先将 value 置为 ''\n    resetTextContent(parent);\n    // 清除 ContentReset 这个 effectTag\n    parentFiber.effectTag &= ~ContentReset;\n  }\n  // 查找插入节点的位置, 也就是获取它后一个 DOM 兄弟节点的位置\n  // 初始渲染时是 null\n\n  // 查看当前节点是否有下一个兄弟节点\n  // 有, 执行 insertBefore\n  // 没有, 执行 appendChild\n  const before = getHostSibling(finishedWork);\n  if (isContainer) {\n    // 向父节点中追加节点 或者 将子节点插入到 before 节点的前面\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\n// 向容器中追加 | 插入到某一个节点的前面\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  // 如果待插入的节点是一个 DOM 元素或者文本的话\n  // 比如 组件fiber => false div => true\n  const isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    // 获取 DOM 节点\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    // 如果 before 存在\n    if (before) {\n      // 插入到 before 前面\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      // 追加到父容器中\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    // 如果是组件节点, 比如 ClassComponent, 则找它的第一个子节点(DOM 元素)\n    // 进行插入操作\n    const child = node.child;\n    if (child !== null) {\n      // 向父级中追加子节点或者将子节点插入到 before 的前面\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      // 获取下一个兄弟节点\n      let sibling = child.sibling;\n      // 如果兄弟节点存在\n      while (sibling !== null) {\n        // 向父级中追加子节点或者将子节点插入到 before 的前面\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        // 同步兄弟节点\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(\n  finishedRoot,\n  current,\n  renderPriorityLevel,\n): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        const parentStateNode = parent.stateNode;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case FundamentalComponent:\n            if (enableFundamentalAPI) {\n              currentParent = parentStateNode.instance;\n              currentParentIsContainer = false;\n            }\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n      const fundamentalNode = node.stateNode.instance;\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (fundamentalNode: Instance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (fundamentalNode: Instance),\n        );\n      }\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedFragment\n    ) {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((node.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, renderPriorityLevel);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(finishedRoot, current, renderPriorityLevel);\n  }\n  detachFiber(current);\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent:\n      case Block: {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        return;\n      }\n      case Profiler: {\n        return;\n      }\n      case SuspenseComponent: {\n        commitSuspenseComponent(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case SuspenseListComponent: {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case HostRoot: {\n        if (supportsHydration) {\n          const root: FiberRoot = finishedWork.stateNode;\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n        break;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      // Layout effects are destroyed during the mutation phase so that all\n      // destroy functions for all fibers are called before any create functions.\n      // This prevents sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n        if (enableDeprecatedFlareAPI) {\n          const prevListeners = oldProps.DEPRECATED_flareListeners;\n          const nextListeners = newProps.DEPRECATED_flareListeners;\n          if (prevListeners !== nextListeners) {\n            updateDeprecatedEventListeners(nextListeners, finishedWork, null);\n          }\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      if (supportsHydration) {\n        const root: FiberRoot = finishedWork.stateNode;\n        if (root.hydrate) {\n          // We've just hydrated. No need to hydrate again.\n          root.hydrate = false;\n          commitHydratedContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseComponent(finishedWork);\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case SuspenseListComponent: {\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = finishedWork.stateNode;\n        updateFundamentalComponent(fundamentalInstance);\n        return;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        const scopeInstance = finishedWork.stateNode;\n        scopeInstance.fiber = finishedWork;\n        if (enableDeprecatedFlareAPI) {\n          const newProps = finishedWork.memoizedProps;\n          const oldProps = current !== null ? current.memoizedProps : newProps;\n          const prevListeners = oldProps.DEPRECATED_flareListeners;\n          const nextListeners = newProps.DEPRECATED_flareListeners;\n          if (prevListeners !== nextListeners || current === null) {\n            updateDeprecatedEventListeners(nextListeners, finishedWork, null);\n          }\n        }\n        return;\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitSuspenseComponent(finishedWork: Fiber) {\n  let newState: SuspenseState | null = finishedWork.memoizedState;\n\n  let newDidTimeout;\n  let primaryChildParent = finishedWork;\n  if (newState === null) {\n    newDidTimeout = false;\n  } else {\n    newDidTimeout = true;\n    primaryChildParent = finishedWork.child;\n    markCommitTimeOfFallback();\n  }\n\n  if (supportsMutation && primaryChildParent !== null) {\n    hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);\n  }\n\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const thenables: Set<Thenable> | null = (finishedWork.updateQueue: any);\n      if (thenables !== null) {\n        suspenseCallback(new Set(thenables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of thenables.\n  // For each thenable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const thenables: Set<Thenable> | null = (finishedWork.updateQueue: any);\n  if (thenables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    thenables.forEach((thenable) => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      let retry = resolveRetryThenable.bind(null, finishedWork, thenable);\n      if (!retryCache.has(thenable)) {\n        if (enableSchedulerTracing) {\n          if (thenable.__reactDoNotTraceInteractions !== true) {\n            retry = Schedule_tracing_wrap(retry);\n          }\n        }\n        retryCache.add(thenable);\n        thenable.then(retry, retry);\n      }\n    });\n  }\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport {\n  commitBeforeMutationLifeCycles,\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitLifeCycles,\n  commitAttachRef,\n  commitDetachRef,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {CapturedError} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\n\nexport function logCapturedError(capturedError: CapturedError): void {\n  const logError = showErrorDialog(capturedError);\n\n  // Allow injected showErrorDialog() to prevent default console.error logging.\n  // This enables renderers like ReactNative to better manage redbox behavior.\n  if (logError === false) {\n    return;\n  }\n\n  const error = (capturedError.error: any);\n  if (__DEV__) {\n    const {\n      componentName,\n      componentStack,\n      errorBoundaryName,\n      errorBoundaryFound,\n      willRetry,\n    } = capturedError;\n\n    // Browsers support silencing uncaught errors by calling\n    // `preventDefault()` in window `error` handler.\n    // We record this information as an expando on the error.\n    if (error != null && error._suppressLogging) {\n      if (errorBoundaryFound && willRetry) {\n        // The error is recoverable and was silenced.\n        // Ignore it and don't print the stack addendum.\n        // This is handy for testing error boundaries without noise.\n        return;\n      }\n      // The error is fatal. Since the silencing might have\n      // been accidental, we'll surface it anyway.\n      // However, the browser would have silenced the original error\n      // so we'll print it first, and then print the stack addendum.\n      console['error'](error); // Don't transform to our wrapper\n      // For a more detailed description of this block, see:\n      // https://github.com/facebook/react/pull/13384\n    }\n\n    const componentNameMessage = componentName\n      ? `The above error occurred in the <${componentName}> component:`\n      : 'The above error occurred in one of your React components:';\n\n    let errorBoundaryMessage;\n    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.\n    if (errorBoundaryFound && errorBoundaryName) {\n      if (willRetry) {\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      } else {\n        errorBoundaryMessage =\n          `This error was initially handled by the error boundary ${errorBoundaryName}.\\n` +\n          `Recreating the tree from scratch failed so React will unmount the tree.`;\n      }\n    } else {\n      errorBoundaryMessage =\n        'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n        'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';\n    }\n    const combinedMessage =\n      `${componentNameMessage}${componentStack}\\n\\n` +\n      `${errorBoundaryMessage}`;\n\n    // In development, we provide our own message with just the component stack.\n    // We don't include the original error message and JS stack because the browser\n    // has already printed it. Even if the application swallows the error, it is still\n    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n    console['error'](combinedMessage); // Don't transform to our wrapper\n  } else {\n    // In production, we print the error directly.\n    // This will include the message, the JS stack, and anything the browser wants to show.\n    // We pass the error object instead of custom message so that the browser displays the error natively.\n    console['error'](error); // Don't transform to our wrapper\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\nimport {getCurrentTime} from './ReactFiberWorkLoop';\nimport {inferPriorityFromExpirationTime} from './ReactFiberExpirationTime';\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {DidCapture} from 'shared/ReactSideEffectTags';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet onScheduleFiberRoot = null;\nlet onCommitFiberRoot = null;\nlet onCommitFiberUnmount = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://fb.me/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    const rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    if (__DEV__) {\n      // Only used by Fast Refresh\n      if (typeof hook.onScheduleFiberRoot === 'function') {\n        onScheduleFiberRoot = (root, children) => {\n          try {\n            hook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (__DEV__ && !hasLoggedError) {\n              hasLoggedError = true;\n              console.error(\n                'React instrumentation encountered an error: %s',\n                err,\n              );\n            }\n          }\n        };\n      }\n    }\n    onCommitFiberRoot = (root, expirationTime) => {\n      try {\n        const didError = (root.current.effectTag & DidCapture) === DidCapture;\n        if (enableProfilerTimer) {\n          const currentTime = getCurrentTime();\n          const priorityLevel = inferPriorityFromExpirationTime(\n            currentTime,\n            expirationTime,\n          );\n          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);\n        } else {\n          hook.onCommitFiberRoot(rendererID, root, undefined, didError);\n        }\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    };\n    onCommitFiberUnmount = fiber => {\n      try {\n        hook.onCommitFiberUnmount(rendererID, fiber);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    };\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (typeof onScheduleFiberRoot === 'function') {\n    onScheduleFiberRoot(root, children);\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, expirationTime: ExpirationTime) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root, expirationTime);\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue';\nimport type {Thenable} from './ReactFiberWorkLoop';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext';\n\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoEffect,\n  ShouldCapture,\n  LifecycleEffectMask,\n} from 'shared/ReactSideEffectTags';\nimport {NoMode, BlockingMode} from './ReactTypeOfMode';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent';\n\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue';\nimport {logError} from './ReactFiberCommitWork';\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext';\nimport {\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n} from './ReactFiberWorkLoop';\n\nimport {Sync} from './ReactFiberExpirationTime';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  expirationTime: ExpirationTime,\n): Update<mixed> {\n  const update = createUpdate(expirationTime, null);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  expirationTime: ExpirationTime,\n): Update<mixed> {\n  const update = createUpdate(expirationTime, null);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      logError(fiber, errorInfo);\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n\n        // Only log here if componentDidCatch is the only error boundary method defined\n        logError(fiber, errorInfo);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (fiber.expirationTime !== Sync) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentName(fiber.type) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  } else if (__DEV__) {\n    update.callback = () => {\n      markFailedErrorBoundaryForHotReloading(fiber);\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(\n  root: FiberRoot,\n  renderExpirationTime: ExpirationTime,\n  thenable: Thenable,\n) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But\n  // only if one does not already exist for the current render expiration\n  // time (which acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(thenable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(thenable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(thenable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(renderExpirationTime)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(renderExpirationTime);\n    let ping = pingSuspendedRoot.bind(\n      null,\n      root,\n      thenable,\n      renderExpirationTime,\n    );\n    thenable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  renderExpirationTime: ExpirationTime,\n) {\n  // The source fiber did not complete.\n  sourceFiber.effectTag |= Incomplete;\n  // Its effect list is no longer valid.\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a thenable.\n    const thenable: Thenable = (value: any);\n\n    if ((sourceFiber.mode & BlockingMode) === NoMode) {\n      // Reset the memoizedState to what it was before we attempted\n      // to render it.\n      let currentSource = sourceFiber.alternate;\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.expirationTime = currentSource.expirationTime;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    let hasInvisibleParentBoundary = hasSuspenseContext(\n      suspenseStackCursor.current,\n      (InvisibleParentSuspenseContext: SuspenseContext),\n    );\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    let workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const thenables: Set<Thenable> = (workInProgress.updateQueue: any);\n        if (thenables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(thenable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          thenables.add(thenable);\n        }\n\n        // If the boundary is outside of blocking mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a blocking mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          workInProgress.effectTag |= DidCapture;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(Sync, null);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.expirationTime = Sync;\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. SuspenseConfig applies to\n        // this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n        attachPingListener(root, renderExpirationTime, thenable);\n\n        workInProgress.effectTag |= ShouldCapture;\n        workInProgress.expirationTime = renderExpirationTime;\n\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentName(sourceFiber.type) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.' +\n        getStackByFiberInDevAndProd(sourceFiber),\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.effectTag |= ShouldCapture;\n        workInProgress.expirationTime = renderExpirationTime;\n        const update = createRootErrorUpdate(\n          workInProgress,\n          errorInfo,\n          renderExpirationTime,\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.effectTag & DidCapture) === NoEffect &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.effectTag |= ShouldCapture;\n          workInProgress.expirationTime = renderExpirationTime;\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            renderExpirationTime,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {RootTag} from 'shared/ReactRootTags';\nimport type {TimeoutHandle, NoTimeout} from './ReactFiberHostConfig';\nimport type {Thenable} from './ReactFiberWorkLoop';\nimport type {Interaction} from 'scheduler/src/Tracing';\nimport type {SuspenseHydrationCallbacks} from './ReactFiberSuspenseComponent';\nimport type {ReactPriorityLevel} from './SchedulerWithReactIntegration';\n\nimport {noTimeout} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n} from 'shared/ReactFeatureFlags';\nimport {unstable_getThreadID} from 'scheduler/tracing';\nimport {NoPriority} from './SchedulerWithReactIntegration';\nimport {initializeUpdateQueue} from './ReactUpdateQueue';\n\nexport type PendingInteractionMap = Map<ExpirationTime, Set<Interaction>>;\n\ntype BaseFiberRootProperties = {|\n  // The type of root (legacy, batched, concurrent, etc.)\n  tag: RootTag,\n\n  // Any additional information from the host associated with this root.\n  containerInfo: any,\n  // Used only by persistent updates.\n  pendingChildren: any,\n  // The currently active root fiber. This is the mutable root of the tree.\n  current: Fiber,\n\n  pingCache:\n    | WeakMap<Thenable, Set<ExpirationTime>>\n    | Map<Thenable, Set<ExpirationTime>>\n    | null,\n\n  finishedExpirationTime: ExpirationTime,\n  // A finished work-in-progress HostRoot that's ready to be committed.\n  finishedWork: Fiber | null,\n  // Timeout handle returned by setTimeout. Used to cancel a pending timeout, if\n  // it's superseded by a new one.\n  timeoutHandle: TimeoutHandle | NoTimeout,\n  // Top context object, used by renderSubtreeIntoContainer\n  context: Object | null,\n  pendingContext: Object | null,\n  // Determines if we should attempt to hydrate on the initial mount\n  +hydrate: boolean,\n  // Node returned by Scheduler.scheduleCallback\n  callbackNode: *,\n  // Expiration of the callback associated with this root\n  callbackExpirationTime: ExpirationTime,\n  // Priority of the callback associated with this root\n  callbackPriority: ReactPriorityLevel,\n  // The earliest pending expiration time that exists in the tree\n  firstPendingTime: ExpirationTime,\n  // The earliest suspended expiration time that exists in the tree\n  firstSuspendedTime: ExpirationTime,\n  // The latest suspended expiration time that exists in the tree\n  lastSuspendedTime: ExpirationTime,\n  // The next known expiration time after the suspended range\n  nextKnownPendingLevel: ExpirationTime,\n  // The latest time at which a suspended component pinged the root to\n  // render again\n  lastPingedTime: ExpirationTime,\n  lastExpiredTime: ExpirationTime,\n|};\n\n// The following attributes are only used by interaction tracing builds.\n// They enable interactions to be associated with their async work,\n// And expose interaction metadata to the React DevTools Profiler plugin.\n// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.\ntype ProfilingOnlyFiberRootProperties = {|\n  interactionThreadID: number,\n  memoizedInteractions: Set<Interaction>,\n  pendingInteractionMap: PendingInteractionMap,\n|};\n\n// The follow fields are only used by enableSuspenseCallback for hydration.\ntype SuspenseCallbackOnlyFiberRootProperties = {|\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n|};\n\n// Exported FiberRoot type includes all properties,\n// To avoid requiring potentially error-prone :any casts throughout the project.\n// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).\n// The types are defined separately within this file to ensure they stay in sync.\n// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)\nexport type FiberRoot = {\n  ...BaseFiberRootProperties,\n  ...ProfilingOnlyFiberRootProperties,\n  ...SuspenseCallbackOnlyFiberRootProperties,\n  ...\n};\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.current = null;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.pingCache = null;\n  this.finishedExpirationTime = NoWork;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoPriority;\n  this.firstPendingTime = NoWork;\n  this.firstSuspendedTime = NoWork;\n  this.lastSuspendedTime = NoWork;\n  this.nextKnownPendingLevel = NoWork;\n  this.lastPingedTime = NoWork;\n  this.lastExpiredTime = NoWork;\n  if (enableSchedulerTracing) {\n    this.interactionThreadID = unstable_getThreadID();\n    this.memoizedInteractions = new Set();\n    this.pendingInteractionMap = new Map();\n  }\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n}\n\n// 创建根节点对应的 fiber 对象\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): FiberRoot {\n  // 创建 FiberRoot\n  const root: FiberRoot = (new FiberRootNode(containerInfo, tag, hydrate): any);\n  // false\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  // 创建根节点对应的 rootFiber\n  const uninitializedFiber = createHostRootFiber(tag);\n  // 为 fiberRoot 添加 current 属性 值为 rootFiber\n  root.current = uninitializedFiber;\n  // 为 rootFiber 添加 stateNode 属性 值为 fiberRoot\n  uninitializedFiber.stateNode = root;\n\n  // 为 fiber 对象添加 updateQueue 属性, 初始化 updateQueue 对象\n  // updateQueue 用于存放 Update 对象\n  // Update 对象用于记录组件状态的改变\n  initializeUpdateQueue(uninitializedFiber);\n  // 返回 root\n  return root;\n}\n\nexport function isRootSuspendedAtTime(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n): boolean {\n  const firstSuspendedTime = root.firstSuspendedTime;\n  const lastSuspendedTime = root.lastSuspendedTime;\n  return (\n    firstSuspendedTime !== NoWork &&\n    firstSuspendedTime >= expirationTime &&\n    lastSuspendedTime <= expirationTime\n  );\n}\n\nexport function markRootSuspendedAtTime(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n): void {\n  const firstSuspendedTime = root.firstSuspendedTime;\n  const lastSuspendedTime = root.lastSuspendedTime;\n  if (firstSuspendedTime < expirationTime) {\n    root.firstSuspendedTime = expirationTime;\n  }\n  if (lastSuspendedTime > expirationTime || firstSuspendedTime === NoWork) {\n    root.lastSuspendedTime = expirationTime;\n  }\n\n  if (expirationTime <= root.lastPingedTime) {\n    root.lastPingedTime = NoWork;\n  }\n\n  if (expirationTime <= root.lastExpiredTime) {\n    root.lastExpiredTime = NoWork;\n  }\n}\n\nexport function markRootUpdatedAtTime(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n): void {\n  // Update the range of pending times\n  const firstPendingTime = root.firstPendingTime;\n  if (expirationTime > firstPendingTime) {\n    root.firstPendingTime = expirationTime;\n  }\n\n  // Update the range of suspended times. Treat everything lower priority or\n  // equal to this update as unsuspended.\n  const firstSuspendedTime = root.firstSuspendedTime;\n  if (firstSuspendedTime !== NoWork) {\n    if (expirationTime >= firstSuspendedTime) {\n      // The entire suspended range is now unsuspended.\n      root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;\n    } else if (expirationTime >= root.lastSuspendedTime) {\n      root.lastSuspendedTime = expirationTime + 1;\n    }\n\n    // This is a pending level. Check if it's higher priority than the next\n    // known pending level.\n    if (expirationTime > root.nextKnownPendingLevel) {\n      root.nextKnownPendingLevel = expirationTime;\n    }\n  }\n}\n\nexport function markRootFinishedAtTime(\n  root: FiberRoot,\n  finishedExpirationTime: ExpirationTime,\n  remainingExpirationTime: ExpirationTime,\n): void {\n  // Update the range of pending times\n  root.firstPendingTime = remainingExpirationTime;\n\n  // Update the range of suspended times. Treat everything higher priority or\n  // equal to this update as unsuspended.\n  if (finishedExpirationTime <= root.lastSuspendedTime) {\n    // The entire suspended range is now unsuspended.\n    root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;\n  } else if (finishedExpirationTime <= root.firstSuspendedTime) {\n    // Part of the suspended range is now unsuspended. Narrow the range to\n    // include everything between the unsuspended time (non-inclusive) and the\n    // last suspended time.\n    root.firstSuspendedTime = finishedExpirationTime - 1;\n  }\n\n  if (finishedExpirationTime <= root.lastPingedTime) {\n    // Clear the pinged time\n    root.lastPingedTime = NoWork;\n  }\n\n  if (finishedExpirationTime <= root.lastExpiredTime) {\n    // Clear the expired time\n    root.lastExpiredTime = NoWork;\n  }\n}\n\nexport function markRootExpiredAtTime(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n): void {\n  const lastExpiredTime = root.lastExpiredTime;\n  if (lastExpiredTime === NoWork || lastExpiredTime > expirationTime) {\n    root.lastExpiredTime = expirationTime;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1 | 2;\n\n// ReactDOM.render\nexport const LegacyRoot = 0;\n// ReactDOM.createBlockingRoot\nexport const BlockingRoot = 1;\n// ReactDOM.createRoot\nexport const ConcurrentRoot = 2;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Container} from './ReactDOMHostConfig';\nimport type {RootTag} from 'shared/ReactRootTags';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\nimport type {FiberRoot} from 'react-reconciler/src/ReactFiberRoot';\nimport {findHostInstanceWithNoPortals} from 'react-reconciler/inline.dom';\n\nexport type RootType = {\n  render(children: ReactNodeList): void,\n  unmount(): void,\n  _internalRoot: FiberRoot,\n  ...\n};\n\nexport type RootOptions = {\n  hydrate?: boolean,\n  hydrationOptions?: {\n    onHydrated?: (suspenseNode: Comment) => void,\n    onDeleted?: (suspenseNode: Comment) => void,\n    ...\n  },\n  ...\n};\n\nimport {\n  isContainerMarkedAsRoot,\n  markContainerAsRoot,\n  unmarkContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {eagerlyTrapReplayableEvents} from '../events/ReactDOMEventReplaying';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\n\nimport {createContainer, updateContainer} from 'react-reconciler/inline.dom';\nimport invariant from 'shared/invariant';\nimport {BlockingRoot, ConcurrentRoot, LegacyRoot} from 'shared/ReactRootTags';\n\nfunction ReactDOMRoot(container: Container, options: void | RootOptions) {\n  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);\n}\n/**\n * 创建 ReactDOMBlockingRoot 的类\n * 通过它可以创建 LegacyRoot 的 Fiber 数据结构\n */\nfunction ReactDOMBlockingRoot(\n  container: Container,\n  tag: RootTag,\n  options: void | RootOptions,\n) {\n  // tag => 0 => legacyRoot\n  // container => <div id=\"root\"></div>\n  // container._reactRootContainer = {_internalRoot: {}}\n  this._internalRoot = createRootImpl(container, tag, options);\n}\n\nReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (\n  children: ReactNodeList,\n): void {\n  const root = this._internalRoot;\n  if (__DEV__) {\n    if (typeof arguments[1] === 'function') {\n      console.error(\n        'render(...): does not support the second callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    }\n    const container = root.containerInfo;\n\n    if (container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(root.current);\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error(\n            'render(...): It looks like the React-rendered content of the ' +\n              'root container was removed without using React. This is not ' +\n              'supported and will cause errors. Instead, call ' +\n              \"root.unmount() to empty a root's container.\",\n          );\n        }\n      }\n    }\n  }\n  updateContainer(children, root, null, null);\n};\n\nReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function (): void {\n  if (__DEV__) {\n    if (typeof arguments[0] === 'function') {\n      console.error(\n        'unmount(...): does not support a callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    }\n  }\n  const root = this._internalRoot;\n  const container = root.containerInfo;\n  updateContainer(null, root, null, () => {\n    unmarkContainerAsRoot(container);\n  });\n};\nfunction createRootImpl(\n  container: Container,\n  tag: RootTag,\n  options: void | RootOptions,\n) {\n  // container => <div id=\"root\"></div>\n  // tag => 0\n  // options => undefined\n  // 检测是否为服务器端渲染 false\n  const hydrate = options != null && options.hydrate === true;\n  // 服务器端渲染相关 null\n  const hydrationCallbacks =\n    (options != null && options.hydrationOptions) || null;\n  const root = createContainer(container, tag, hydrate, hydrationCallbacks);\n  markContainerAsRoot(root.current, container);\n  // 服务器端渲染相关\n  if (hydrate && tag !== LegacyRoot) {\n    const doc =\n      container.nodeType === DOCUMENT_NODE\n        ? container\n        : container.ownerDocument;\n    eagerlyTrapReplayableEvents(container, doc);\n  }\n  return root;\n}\n\nexport function createRoot(\n  container: Container,\n  options?: RootOptions,\n): RootType {\n  invariant(\n    isValidContainer(container),\n    'createRoot(...): Target container is not a DOM element.',\n  );\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactDOMRoot(container, options);\n}\n\nexport function createBlockingRoot(\n  container: Container,\n  options?: RootOptions,\n): RootType {\n  invariant(\n    isValidContainer(container),\n    'createRoot(...): Target container is not a DOM element.',\n  );\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactDOMBlockingRoot(container, BlockingRoot, options);\n}\n\n/**\n * 通过实例化 ReactDOMBlockingRoot 类创建 LegacyRoot\n */\nexport function createLegacyRoot(\n  container: Container,\n  options?: RootOptions,\n): RootType {\n  // container => <div id=\"root\"></div>\n  // LegacyRoot 常量, 值为 0,\n  // 通过 render 方法创建的 container 就是 LegacyRoot\n  return new ReactDOMBlockingRoot(container, LegacyRoot, options);\n}\n/**\n * 判断 node 是否是符合要求的 DOM 节点\n * 1. node 可以是元素节点\n * 2. node 可以是 document 节点\n * 3. node 可以是 文档碎片节点\n * 4. node 可以是注释节点但注释内容必须是 react-mount-point-unstable\n *    react 内部会找到注释节点的父级 通过调用父级元素的 insertBefore 方法\n *    将 element 插入到注释节点的前面\n */\nexport function isValidContainer(node: mixed): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    if (\n      container.nodeType === ELEMENT_NODE &&\n      ((container: any): Element).tagName &&\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\n    ) {\n      console.error(\n        'createRoot(): Creating roots directly with document.body is ' +\n          'discouraged, since its children are often manipulated by third-party ' +\n          'scripts and browser extensions. This may lead to subtle ' +\n          'reconciliation issues. Try using a container element created ' +\n          'for your app.',\n      );\n    }\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        console.error(\n          'You are calling ReactDOM.createRoot() on a container that was previously ' +\n            'passed to ReactDOM.render(). This is not supported.',\n        );\n      } else {\n        console.error(\n          'You are calling ReactDOM.createRoot() on a container that ' +\n            'has already been passed to createRoot() before. Instead, call ' +\n            'root.render() on the existing root instead if you want to update it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Container} from './ReactDOMHostConfig';\nimport type {RootType} from './ReactDOMRoot';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  getInstanceFromNode,\n  isContainerMarkedAsRoot,\n  unmarkContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {createLegacyRoot, isValidContainer} from './ReactDOMRoot';\nimport {ROOT_ATTRIBUTE_NAME} from '../shared/DOMProperty';\nimport {\n  DOCUMENT_NODE,\n  ELEMENT_NODE,\n  COMMENT_NODE,\n} from '../shared/HTMLNodeType';\n\nimport {\n  findHostInstanceWithNoPortals,\n  updateContainer,\n  unbatchedUpdates,\n  getPublicRootInstance,\n  findHostInstance,\n  findHostInstanceWithWarning,\n} from 'react-reconciler/inline.dom';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {has as hasInstance} from 'shared/ReactInstanceMap';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet topLevelUpdateWarnings;\nlet warnedAboutHydrateAPI = false;\n\nif (__DEV__) {\n  topLevelUpdateWarnings = (container: Container) => {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(\n        container._reactRootContainer._internalRoot.current,\n      );\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error(\n            'render(...): It looks like the React-rendered content of this ' +\n              'container was removed without using React. This is not ' +\n              'supported and will cause errors. Instead, call ' +\n              'ReactDOM.unmountComponentAtNode to empty a container.',\n          );\n        }\n      }\n    }\n\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\n    const rootEl = getReactRootElementInContainer(container);\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {\n      console.error(\n        'render(...): Replacing React-rendered children with a new root ' +\n          'component. If you intended to update the children of this node, ' +\n          'you should instead have the existing children update their state ' +\n          'and render the new components instead of calling ReactDOM.render.',\n      );\n    }\n\n    if (\n      container.nodeType === ELEMENT_NODE &&\n      ((container: any): Element).tagName &&\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\n    ) {\n      console.error(\n        'render(): Rendering components directly into document.body is ' +\n          'discouraged, since its children are often manipulated by third-party ' +\n          'scripts and browser extensions. This may lead to subtle ' +\n          'reconciliation issues. Try rendering into a container element created ' +\n          'for your app.',\n      );\n    }\n  };\n}\n\nfunction getReactRootElementInContainer(container: any) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction shouldHydrateDueToLegacyHeuristic(container) {\n  const rootElement = getReactRootElementInContainer(container);\n  return !!(\n    rootElement &&\n    rootElement.nodeType === ELEMENT_NODE &&\n    rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME)\n  );\n}\n\n/**\n * 判断是否为服务器端渲染 如果不是服务器端渲染\n * 清空 container 容器中的节点\n */\nfunction legacyCreateRootFromDOMContainer(\n  container: Container,\n  forceHydrate: boolean,\n): RootType {\n  // container => <div id=\"root\"></div>\n  // 检测是否为服务器端渲染\n  const shouldHydrate =\n    forceHydrate || shouldHydrateDueToLegacyHeuristic(container);\n  // 如果不是服务器端渲染\n  if (!shouldHydrate) {\n    let warned = false;\n    let rootSibling;\n    // 开启循环 删除 container 容器中的节点\n    while ((rootSibling = container.lastChild)) {\n      // 在开发环境中\n      if (__DEV__) {\n        /**\n         * 判断子节点是否为元素节点, 并且元素节点不能有 data-reactroot 属性, 否则报错\n         * 通常在服务器端渲染时会遇到这个问题\n         *\n         * <div id=\"app\">\n         *  <%- markup %>\n         * </div>\n         * ↑ 报错\n         *\n         * <div id=\"app\"><%- markup %></div>\n         * ↑ 不报错 删除了所有空白区域\n         */\n        if (\n          !warned &&\n          rootSibling.nodeType === ELEMENT_NODE &&\n          // 判断是否是服务端渲染的标志\n          (rootSibling: any).hasAttribute(ROOT_ATTRIBUTE_NAME)\n        ) {\n          warned = true;\n          console.error(\n            'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.',\n          );\n        }\n      }\n      // 删除 container 容器中的节点\n      container.removeChild(rootSibling);\n      /**\n       * 为什么要清除 container 中的元素 ?\n       * 有时需要在 container 中放置一些占位图或者 loading 图以提高首屏加载用户体验,\n       * 就无可避免的要向 container 中加入 html 标记.\n       * 在将 ReactElement 渲染到 container 之前, 必然要先清空 container\n       * 因为占位图和 ReactElement 不能同时显示\n       *\n       * 在加入占位代码时, 最好只有一个父级元素, 可以减少内部代码的循环次数以提高性能\n       * <div>\n       *  <p>placement<p>\n       *  <p>placement<p>\n       *  <p>placement<p>\n       * </div>\n       */\n    }\n  }\n  // 在开发环境下\n  if (__DEV__) {\n    // 如果是服务器端渲染 控制台提示错误\n    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\n      warnedAboutHydrateAPI = true;\n      // 在客户端二次渲染时不要使用 render 方法, 要使用 hydrate 方法替代\n      console.warn(\n        'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' +\n          'will stop working in React v17. Replace the ReactDOM.render() call ' +\n          'with ReactDOM.hydrate() if you want React to attach to the server HTML.',\n      );\n    }\n  }\n  return createLegacyRoot(\n    container,\n    shouldHydrate\n      ? {\n          hydrate: true,\n        }\n      : undefined,\n  );\n}\n\nfunction warnOnInvalidCallback(callback: mixed, callerName: string): void {\n  if (__DEV__) {\n    if (callback !== null && typeof callback !== 'function') {\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  }\n}\n/**\n * 将子树渲染到容器中 (初始化 Fiber 数据结构: 创建 fiberRoot 及 rootFiber)\n * parentComponent: 父组件, 初始渲染传入了 null\n * children: render 方法中的第一个参数, 要渲染的 ReactElement\n * container: 渲染容器\n * forceHydrate: true 为服务端渲染, false 为客户端渲染\n * callback: 组件渲染完成后需要执行的回调函数\n **/\nfunction legacyRenderSubtreeIntoContainer(\n  parentComponent: ?React$Component<any, any>,\n  children: ReactNodeList,\n  container: Container,\n  forceHydrate: boolean,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    topLevelUpdateWarnings(container);\n    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');\n  }\n\n  /**\n   * 检测 container 是否已经是初始化过的渲染容器\n   * react 在初始渲染时会为最外层容器添加 _reactRootContainer 属性\n   * react 会根据此属性进行不同的渲染方式\n   * root 不存在 表示初始渲染\n   * root 存在 表示更新\n   */\n  // 获取 container 容器对象下是否有 _reactRootContainer 属性\n  let root: RootType = (container._reactRootContainer: any);\n  // 即将存储根 Fiber 对象\n  let fiberRoot;\n  if (!root) {\n    // 初始渲染\n    // 初始化根 Fiber 数据结构\n    // 为 container 容器添加 _reactRootContainer 属性\n    // 在 _reactRootContainer 对象中有一个属性叫做 _internalRoot\n    // _internalRoot 属性值即为 FiberRoot 表示根节点 Fiber 数据结构\n    // legacyCreateRootFromDOMContainer\n    // createLegacyRoot\n    // new ReactDOMBlockingRoot -> this._internalRoot\n    // createRootImpl\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(\n      container,\n      forceHydrate,\n    );\n    // 获取 Fiber Root 对象\n    fiberRoot = root._internalRoot;\n    /**\n     * 改变 callback 函数中的 this 指向\n     * 使其指向 render 方法第一个参数的真实 DOM 对象\n     */\n    // 如果 callback 参数是函数类型\n    if (typeof callback === 'function') {\n      // 使用 originalCallback 存储 callback 函数\n      const originalCallback = callback;\n      // 为 callback 参数重新赋值\n      callback = function () {\n        // 获取 render 方法第一个参数的真实 DOM 对象\n        // 实际上就是 id=\"root\" 的 div 的子元素\n        // rootFiber.child.stateNode\n        // rootFiber 就是 id=\"root\" 的 div\n        const instance = getPublicRootInstance(fiberRoot);\n        // 调用原始 callback 函数并改变函数内部 this 指向\n        originalCallback.call(instance);\n      };\n    }\n    // 初始化渲染不执行批量更新\n    // 因为批量更新是异步的是可以被打断的, 但是初始化渲染应该尽快完成不能被打断\n    // 所以不执行批量更新\n    unbatchedUpdates(() => {\n      updateContainer(children, fiberRoot, parentComponent, callback);\n    });\n  } else {\n    // 非初始化渲染 即更新\n    fiberRoot = root._internalRoot;\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function () {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    }\n    // Update\n    updateContainer(children, fiberRoot, parentComponent, callback);\n  }\n  // 返回 render 方法第一个参数的真实 DOM 对象作为 render 方法的返回值\n  // 就是说渲染谁 返回谁的真实 DOM 对象\n  return getPublicRootInstance(fiberRoot);\n}\n\nexport function findDOMNode(\n  componentOrElement: Element | ?React$Component<any, any>,\n): null | Element | Text {\n  if (__DEV__) {\n    let owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.stateNode !== null) {\n      const warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n      if (!warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing findDOMNode inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(owner.type) || 'A component',\n        );\n      }\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if ((componentOrElement: any).nodeType === ELEMENT_NODE) {\n    return (componentOrElement: any);\n  }\n  if (__DEV__) {\n    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n  }\n  return findHostInstance(componentOrElement);\n}\n\nexport function hydrate(\n  element: React$Node,\n  container: Container,\n  callback: ?Function,\n) {\n  invariant(\n    isValidContainer(container),\n    'Target container is not a DOM element.',\n  );\n  if (__DEV__) {\n    const isModernRoot =\n      isContainerMarkedAsRoot(container) &&\n      container._reactRootContainer === undefined;\n    if (isModernRoot) {\n      console.error(\n        'You are calling ReactDOM.hydrate() on a container that was previously ' +\n          'passed to ReactDOM.createRoot(). This is not supported. ' +\n          'Did you mean to call createRoot(container, {hydrate: true}).render(element)?',\n      );\n    }\n  }\n  // TODO: throw or warn if we couldn't hydrate?\n  return legacyRenderSubtreeIntoContainer(\n    null,\n    element,\n    container,\n    true,\n    callback,\n  );\n}\n/**\n * 渲染入口\n * element 要进行渲染的 ReactElement\n * container 渲染容器\n * callback 渲染完成后执行的回调函数\n */\nexport function render(\n  element: React$Element<any>,\n  container: Container,\n  callback: ?Function,\n) {\n  // 检测 container 是否是符合要求的渲染容器\n  // 即检测 container 是否是真实的DOM对象\n  // 如果不符合要求就报错\n  invariant(\n    isValidContainer(container),\n    'Target container is not a DOM element.',\n  );\n  // 在开发环境下\n  if (__DEV__) {\n    // 检测 container 是否已经传递给 ReactDOM.createRoot() 方法\n    // 如果已经传递, 则 container 不能再传递给 render 方法\n    // 防止 render 方法和 createRoot 方法重复调用\n    const isModernRoot =\n      isContainerMarkedAsRoot(container) &&\n      container._reactRootContainer === undefined;\n    // 如果 container 已经传递给过 createRoot 方法\n    if (isModernRoot) {\n      // 在控制台报错\n      console.error(\n        'You are calling ReactDOM.render() on a container that was previously ' +\n          'passed to ReactDOM.createRoot(). This is not supported. ' +\n          'Did you mean to call root.render(element)?',\n      );\n    }\n  }\n  return legacyRenderSubtreeIntoContainer(\n    // 父组件 初始渲染没有父组件 传递 null 占位\n    null,\n    element,\n    container,\n    // 是否为服务器端渲染 false 不是服务器端渲染 true 是服务器端渲染\n    false,\n    callback,\n  );\n}\n\nexport function unstable_renderSubtreeIntoContainer(\n  parentComponent: React$Component<any, any>,\n  element: React$Element<any>,\n  containerNode: Container,\n  callback: ?Function,\n) {\n  invariant(\n    isValidContainer(containerNode),\n    'Target container is not a DOM element.',\n  );\n  invariant(\n    parentComponent != null && hasInstance(parentComponent),\n    'parentComponent must be a valid React Component',\n  );\n  return legacyRenderSubtreeIntoContainer(\n    parentComponent,\n    element,\n    containerNode,\n    false,\n    callback,\n  );\n}\n\nexport function unmountComponentAtNode(container: Container) {\n  invariant(\n    isValidContainer(container),\n    'unmountComponentAtNode(...): Target container is not a DOM element.',\n  );\n\n  if (__DEV__) {\n    const isModernRoot =\n      isContainerMarkedAsRoot(container) &&\n      container._reactRootContainer === undefined;\n    if (isModernRoot) {\n      console.error(\n        'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' +\n          'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?',\n      );\n    }\n  }\n\n  if (container._reactRootContainer) {\n    if (__DEV__) {\n      const rootEl = getReactRootElementInContainer(container);\n      const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n      if (renderedByDifferentReact) {\n        console.error(\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by another copy of React.',\n        );\n      }\n    }\n\n    // Unmount should not be batched.\n    unbatchedUpdates(() => {\n      legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n        // $FlowFixMe This should probably use `delete container._reactRootContainer`\n        container._reactRootContainer = null;\n        unmarkContainerAsRoot(container);\n      });\n    });\n    // If you call unmountComponentAtNode twice in quick succession, you'll\n    // get `true` twice. That's probably fine?\n    return true;\n  } else {\n    if (__DEV__) {\n      const rootEl = getReactRootElementInContainer(container);\n      const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n      // Check if the container itself is a React root node.\n      const isContainerReactRoot =\n        container.nodeType === ELEMENT_NODE &&\n        isValidContainer(container.parentNode) &&\n        !!container.parentNode._reactRootContainer;\n\n      if (hasNonRootReactChild) {\n        console.error(\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by React and is not a top-level container. %s',\n          isContainerReactRoot\n            ? 'You may have accidentally passed in a React root node instead ' +\n                'of its container.'\n            : 'Instead, have the parent component update its state and ' +\n                'rerender in order to remove this component.',\n        );\n      }\n    }\n\n    return false;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Container} from './ReactDOMHostConfig';\n\nimport '../shared/checkReact';\nimport './ReactDOMClientInjection';\nimport {\n  findDOMNode,\n  render,\n  hydrate,\n  unstable_renderSubtreeIntoContainer,\n  unmountComponentAtNode,\n} from './ReactDOMLegacy';\nimport {createRoot, createBlockingRoot, isValidContainer} from './ReactDOMRoot';\n\nimport {\n  batchedEventUpdates,\n  batchedUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushSync,\n  flushControlled,\n  injectIntoDevTools,\n  flushPassiveEffects,\n  IsThisRendererActing,\n  attemptSynchronousHydration,\n  attemptUserBlockingHydration,\n  attemptContinuousHydration,\n  attemptHydrationAtCurrentPriority,\n} from 'react-reconciler/inline.dom';\nimport {createPortal as createPortalImpl} from 'shared/ReactPortal';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport {setBatchingImplementation} from 'legacy-events/ReactGenericBatching';\nimport {\n  setRestoreImplementation,\n  enqueueStateRestore,\n  restoreStateIfNeeded,\n} from 'legacy-events/ReactControlledComponent';\nimport {runEventsInBatch} from 'legacy-events/EventBatching';\nimport {\n  eventNameDispatchConfigs,\n  injectEventPluginsByName,\n} from 'legacy-events/EventPluginRegistry';\nimport {\n  accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches,\n} from 'legacy-events/EventPropagators';\nimport ReactVersion from 'shared/ReactVersion';\nimport invariant from 'shared/invariant';\nimport {warnUnstableRenderSubtreeIntoContainer} from 'shared/ReactFeatureFlags';\n\nimport {\n  getInstanceFromNode,\n  getNodeFromInstance,\n  getFiberCurrentPropsFromNode,\n  getClosestInstanceFromNode,\n} from './ReactDOMComponentTree';\nimport {restoreControlledState} from './ReactDOMComponent';\nimport {dispatchEvent} from '../events/ReactDOMEventListener';\nimport {\n  setAttemptSynchronousHydration,\n  setAttemptUserBlockingHydration,\n  setAttemptContinuousHydration,\n  setAttemptHydrationAtCurrentPriority,\n  queueExplicitHydrationTarget,\n} from '../events/ReactDOMEventReplaying';\n\nsetAttemptSynchronousHydration(attemptSynchronousHydration);\nsetAttemptUserBlockingHydration(attemptUserBlockingHydration);\nsetAttemptContinuousHydration(attemptContinuousHydration);\nsetAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority);\n\nlet didWarnAboutUnstableCreatePortal = false;\nlet didWarnAboutUnstableRenderSubtreeIntoContainer = false;\n\nif (__DEV__) {\n  if (\n    typeof Map !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Map has no prototype\n    Map.prototype == null ||\n    typeof Map.prototype.forEach !== 'function' ||\n    typeof Set !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Set has no prototype\n    Set.prototype == null ||\n    typeof Set.prototype.clear !== 'function' ||\n    typeof Set.prototype.forEach !== 'function'\n  ) {\n    console.error(\n      'React depends on Map and Set built-in types. Make sure that you load a ' +\n        'polyfill in older browsers. https://fb.me/react-polyfills',\n    );\n  }\n}\n\nsetRestoreImplementation(restoreControlledState);\nsetBatchingImplementation(\n  batchedUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  batchedEventUpdates,\n);\n\nfunction createPortal(\n  children: ReactNodeList,\n  container: Container,\n  key: ?string = null,\n): React$Portal {\n  invariant(\n    isValidContainer(container),\n    'Target container is not a DOM element.',\n  );\n  // TODO: pass ReactDOM portal implementation as third argument\n  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.\n  return createPortalImpl(children, container, null, key);\n}\n\nfunction scheduleHydration(target: Node) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n}\n\nfunction renderSubtreeIntoContainer(\n  parentComponent: React$Component<any, any>,\n  element: React$Element<any>,\n  containerNode: Container,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    if (\n      warnUnstableRenderSubtreeIntoContainer &&\n      !didWarnAboutUnstableRenderSubtreeIntoContainer\n    ) {\n      didWarnAboutUnstableRenderSubtreeIntoContainer = true;\n      console.warn(\n        'ReactDOM.unstable_renderSubtreeIntoContainer() is deprecated ' +\n          'and will be removed in a future major release. Consider using ' +\n          'React Portals instead.',\n      );\n    }\n  }\n  return unstable_renderSubtreeIntoContainer(\n    parentComponent,\n    element,\n    containerNode,\n    callback,\n  );\n}\n\nfunction unstable_createPortal(\n  children: ReactNodeList,\n  container: Container,\n  key: ?string = null,\n) {\n  if (__DEV__) {\n    if (!didWarnAboutUnstableCreatePortal) {\n      didWarnAboutUnstableCreatePortal = true;\n      console.warn(\n        'The ReactDOM.unstable_createPortal() alias has been deprecated, ' +\n          'and will be removed in React 17+. Update your code to use ' +\n          'ReactDOM.createPortal() instead. It has the exact same API, ' +\n          'but without the \"unstable_\" prefix.',\n      );\n    }\n  }\n  return createPortal(children, container, key);\n}\n\nconst Internals = {\n  // Keep in sync with ReactDOMUnstableNativeDependencies.js\n  // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.\n  Events: [\n    getInstanceFromNode,\n    getNodeFromInstance,\n    getFiberCurrentPropsFromNode,\n    injectEventPluginsByName,\n    eventNameDispatchConfigs,\n    accumulateTwoPhaseDispatches,\n    accumulateDirectDispatches,\n    enqueueStateRestore,\n    restoreStateIfNeeded,\n    dispatchEvent,\n    runEventsInBatch,\n    flushPassiveEffects,\n    IsThisRendererActing,\n  ],\n};\n\nexport {\n  createPortal,\n  batchedUpdates as unstable_batchedUpdates,\n  flushSync,\n  Internals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  ReactVersion as version,\n  // Disabled behind disableLegacyReactDOMAPIs\n  findDOMNode,\n  hydrate,\n  render,\n  unmountComponentAtNode,\n  // exposeConcurrentModeAPIs\n  createRoot,\n  createBlockingRoot,\n  discreteUpdates as unstable_discreteUpdates,\n  flushDiscreteUpdates as unstable_flushDiscreteUpdates,\n  flushControlled as unstable_flushControlled,\n  scheduleHydration as unstable_scheduleHydration,\n  // Disabled behind disableUnstableRenderSubtreeIntoContainer\n  renderSubtreeIntoContainer as unstable_renderSubtreeIntoContainer,\n  // Disabled behind disableUnstableCreatePortal\n  // Temporary alias since we already shipped React 16 RC with it.\n  // TODO: remove in React 17.\n  unstable_createPortal,\n};\n\nconst foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom',\n});\n\nif (__DEV__) {\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (\n      (navigator.userAgent.indexOf('Chrome') > -1 &&\n        navigator.userAgent.indexOf('Edge') === -1) ||\n      navigator.userAgent.indexOf('Firefox') > -1\n    ) {\n      const protocol = window.location.protocol;\n      // Don't warn in exotic cases like chrome-extension://.\n      if (/^(https?|file):$/.test(protocol)) {\n        // eslint-disable-next-line react-internal/no-production-logging\n        console.info(\n          '%cDownload the React DevTools ' +\n            'for a better development experience: ' +\n            'https://fb.me/react-devtools' +\n            (protocol === 'file:'\n              ? '\\nYou might need to use a local HTTP server (instead of file://): ' +\n                'https://fb.me/react-devtools-faq'\n              : ''),\n          'font-weight:bold',\n        );\n      }\n    }\n  }\n}\n","import * as React from \"react\"\n\nfunction App() {\n  return <div>App works</div>\n}\n\nexport default App\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}